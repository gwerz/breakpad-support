MODULE mac x86 3424D1B502AA1E0000010000000000070 CarbonCore
PUBLIC 0 0 __dso_handle
PUBLIC c40 0 _FSCopyStrippedPathString
PUBLIC dc1 0 Microseconds
PUBLIC e2a 0 UpTime
PUBLIC e44 0 AbsoluteToNanoseconds
PUBLIC ecc 0 FSPathMakeRef
PUBLIC f01 0 _NanosecondConversionRate
PUBLIC f62 0 FSPathMakeRefInternal(unsigned char const*, unsigned long, unsigned long, FSRef*, unsigned char*)
PUBLIC 1010 0 PathGetObjectInfo(char const*, unsigned long, unsigned long, VolumeInfo**, unsigned long*, unsigned long*, char*, unsigned long*, unsigned char*)
PUBLIC 16c0 0 GetPathVolFSAttributes(char const*, unsigned long, FSAttributeInfo*, unsigned long, unsigned char*)
PUBLIC 190a 0 SetAttrlistBitmap(unsigned long, unsigned long, unsigned long, attrlist*)
PUBLIC 1ada 0 CalcAttributeBufferSize(attrlist const*)
PUBLIC 1d66 0 GetMacUserPrivileges(unsigned int, unsigned int, unsigned short)
PUBLIC 1dbc 0 GetMacFilePermissions(unsigned int, unsigned int, unsigned short)
PUBLIC 1ee0 0 GetUserID()
PUBLIC 1f16 0 InGroupList(unsigned int)
PUBLIC 1fc0 0 GetVolFSVCBByVolumeID(unsigned long)
PUBLIC 2028 0 INIT_FileManager()
PUBLIC 212a 0 TSLockMutex
PUBLIC 2251 0 InitDebug
PUBLIC 2341 0 __GetTimeStamp
PUBLIC 239a 0 MountInitialVolumes()
PUBLIC 2512 0 MountVolume(char const*, statfs*, unsigned char, unsigned char, __DADisk*, short*)
PUBLIC 28da 0 AcquireVolumeListLock()
PUBLIC 292c 0 TSInitMutex
PUBLIC 297c 0 RemoveInitErrorVolumes()
PUBLIC 29ae 0 GetVRefNumByExactMountPointName
PUBLIC 2a0e 0 FSCacheableClient_GetVolumeCachedInfo(char const*, statfs const*, CachedVolumeInfo*, __DADisk*, __DADisk**)
PUBLIC 2fb2 0 _checkLocalList()
PUBLIC 3048 0 _initLocalList()
PUBLIC 3088 0 _CSCreateSeed
PUBLIC 31c4 0 _CSSeedInit(void**)
PUBLIC 3364 0 _initSeedService()
PUBLIC 33c4 0 scCreateSystemService
PUBLIC 347a 0 _initSharedCache()
PUBLIC 354e 0 SCClientSession::checkinWithServer(unsigned int*)
PUBLIC 3610 0 getCheckinName()
PUBLIC 3659 0 _scclient_ServerCheckin
PUBLIC 3788 0 _CoreServicesServerMain
PUBLIC 3aac 0 FileIDStorage_CSDInit
PUBLIC 3ac0 0 checkinWithBootstrap()
PUBLIC 3b90 0 SCServerSession::SCServerSession(unsigned int, unsigned int)
PUBLIC 3cb0 0 SCSession::SCSession(unsigned int, unsigned int)
PUBLIC 3de6 0 MsgDebug::MsgDebug()
PUBLIC 3dfc 0 SCServerSession::registerForNoSenders()
PUBLIC 3e5a 0 setupDiskArbMessageListener()
PUBLIC 3eb2 0 _FSScheduleFileVolumeOperations
PUBLIC 3f00 0 _FSGetDiskArbSession(__DASession**, __DAApprovalSession**)
PUBLIC 410c 0 _FSScheduleFileVolumeOperationsWithSessions(__DASession*, __DAApprovalSession*, __CFRunLoop*, __CFString const*)
PUBLIC 426e 0 AcquireDefaultDASessionScheduleListLock()
PUBLIC 42c2 0 TSUnlockMutex
PUBLIC 4312 0 _serverCallback(__CFMachPort*, void*, long, void*)
PUBLIC 4480 0 SharedCache_server_routine
PUBLIC 44a8 0 scHandleMessage(mach_msg_header_t*, int (*)(mach_msg_header_t*, mach_msg_header_t*), unsigned long*, unsigned char*)
PUBLIC 4679 0 SharedCache_server
PUBLIC 46fa 0 _XServerCheckin
PUBLIC 47e2 0 _scserver_ServerCheckin
PUBLIC 4944 0 SCSession::sessionForUID(unsigned int)
PUBLIC 4968 0 SCSession::noteSessionBirth(unsigned int)
PUBLIC 49b0 0 SCSession::noteTaskAdd(unsigned int, int, unsigned int)
PUBLIC 4a7e 0 SCServerSession::noteTaskAdd(int, unsigned int)
PUBLIC 4ad4 0 SCSession::noteTaskAdd(int, unsigned int)
PUBLIC 4b24 0 scGetProcessOptions
PUBLIC 4b9a 0 SCClientSession::SCClientSession(unsigned int, unsigned int, unsigned int)
PUBLIC 4c3a 0 SCSession::findOrCreateService(char const*)
PUBLIC 4d0e 0 scInternString(char const*)
PUBLIC 4d9a 0 _internStrngHash(void const*)
PUBLIC 4dba 0 SCClientSession::createService(char const*)
PUBLIC 4e50 0 _scsclient_FindService
PUBLIC 4fe6 0 VNDiskAppearedCallback(__DADisk*, void*)
PUBLIC 5030 0 VNDiskNotification(int, __DADisk*, VolumeInfo*, unsigned int)
PUBLIC 53a2 0 SCServerSession::createService(char const*)
PUBLIC 5648 0 lookupSymbol(__NSModule*, char const*)
PUBLIC 5668 0 SCService::SCService(char const*, unsigned int)
PUBLIC 56a2 0 _FSCachedMount_InitLocalList(_FSCachedMount**)
PUBLIC 579c 0 _createFSCacheable()
PUBLIC 57cc 0 scCreateSystemCacheable
PUBLIC 57f0 0 getSystemSession()
PUBLIC 5872 0 SCSession::findOrCreateCacheable(SCCacheableName, char const*)
PUBLIC 594e 0 SCSession::createCacheable(SCCacheableName, char const*)
PUBLIC 5974 0 _CreateFSCacheable
PUBLIC 59a2 0 _FSCacheable::_FSCacheable(char const*)
PUBLIC 59fc 0 SCCacheable::SCCacheable(char const*)
PUBLIC 5a5a 0 NewVNUPP
PUBLIC 5a62 0 RequestVolumeNotification
PUBLIC 5a87 0 NewPtrClear
PUBLIC 5aa8 0 GetThreadGlobals
PUBLIC 5b69 0 _TSGetMainThread
PUBLIC 5bd1 0 TSSelf
PUBLIC 5bdd 0 TSCreateStorageKey
PUBLIC 5be6 0 TSSetStorage
PUBLIC 5bf1 0 TSGetStorage
PUBLIC 5bfb 0 CSMemNewPtrClear
PUBLIC 5c5c 0 _FSCacheable::Get(unsigned long, unsigned long, unsigned int*, unsigned int*)
PUBLIC 5ca2 0 _FSCacheable::GetVolumeList(unsigned int*, unsigned int*)
PUBLIC 5d76 0 SCCacheable::deallocBuffer(unsigned long, unsigned int, unsigned int)
PUBLIC 5dbc 0 _CSReadSeed
PUBLIC 5dce 0 _FSCachedMount_GetMount(_FSCachedMount**, char const*, unsigned int)
PUBLIC 5e1c 0 GetVolumeCapabilitiesByMountpointWithStafFSBuffer(char const*, statfs const*, unsigned long*)
PUBLIC 620a 0 GetDeviceProperties
PUBLIC 63fc 0 GetDeviceIOKitProperties
PUBLIC 65a9 0 identifierToIOKitObject
PUBLIC 66bc 0 BSDPathToIOMediaObject
PUBLIC 67c1 0 IOMediaToIOHDIXHDDriveObject
PUBLIC 67da 0 IOKitObjectFindParentOfClass
PUBLIC 68b3 0 IsDeviceiPod
PUBLIC 696e 0 _GetIOKitDeviceTypeFromDeviceID
PUBLIC 6d38 0 CreateDiskArbDiskForMountPath(char const*)
PUBLIC 6dc6 0 _FSCacheable::Control(unsigned long, unsigned long, unsigned int, unsigned int, unsigned int*, unsigned int*)
PUBLIC 6ed2 0 _FSCacheable::ControlGetVolume(char const*, unsigned int, unsigned int*, unsigned int*)
PUBLIC 7002 0 _FSCachedMount_GetMountFromList(_FSCachedMount**, be_statfs const&)
PUBLIC 709b 0 FSNodeStorage_VolumeAddedToCacheable
PUBLIC 7134 0 FileIDTree_GetAndLockClientSharedUniverse
PUBLIC 714c 0 FileIDTree_GetAndLockSharedUniverse
PUBLIC 73be 0 FileIDTree_GetUniverseForUID
PUBLIC 77a4 0 FileIDTreeStorage_ServerAllocateAndInitSegment
PUBLIC 7851 0 FileIDTreeStorage_GetAmountOfEntriesForSegment
PUBLIC 786e 0 FileIDTreeStorage_ReserveEntriesInSegment
PUBLIC 7964 0 FileIDTreeStorage_AllocateEntry
PUBLIC 7be1 0 FileIDTree_GetSegmentAddress
PUBLIC 7ca6 0 FileIDTreeStorage_ServerAllocateNewSegment
PUBLIC 7d29 0 FSNodeEntry_InitFileIDTree
PUBLIC 7da9 0 FileIDTreeStorage_AllocateOneEntry
PUBLIC 7ec6 0 FileIDTreeStorage_ReserveEntryInSegment
PUBLIC 7f28 0 FSCacheableClient_ExportMounts
PUBLIC 7fb6 0 FileIDTree_ReleaseLockedUniverse
PUBLIC 81f0 0 FileIDTreeGetFirstSession
PUBLIC 8200 0 FSNode_VolumeMounted
PUBLIC 83e2 0 FileIDTree_FindVolumeRecord
PUBLIC 843e 0 FSNodeEntry_FindByFileID
PUBLIC 874c 0 FSNodeEntry_GetFileIDMasterReference
PUBLIC 88ea 0 FileIDTreeStorage_GetEntryAddress
PUBLIC 8998 0 _FSCacheable::flushServerList()
PUBLIC 89f4 0 _CSIncrementSeed
PUBLIC 8a8c 0 _FSGetSessionUID
PUBLIC 8ac0 0 FSCacheableClient_GetCacheableSessionUID()
PUBLIC 8b1c 0 scRunningInCacheServer
PUBLIC 8b5c 0 VolFSMount::VolFSMount(CachedVolumeInfo const*)
PUBLIC 8ba8 0 FSMount::FSMount(CachedVolumeInfo const*)
PUBLIC 8e9e 0 FSMount::setDiskArbDisk(__DADisk*)
PUBLIC 8ecc 0 EnqueueVolume(VolumeInfo**, VolumeInfo*)
PUBLIC 8eea 0 _GetDefaultiDiskLocalVRefNum
PUBLIC 8efc 0 ReleaseVolumeListLock()
PUBLIC 8f1e 0 INIT_VolumeNotifications()
PUBLIC 8fb8 0 SetDADiskForVRefNumIfThereIsNotOneAlready(short, __DADisk*)
PUBLIC 8ff4 0 GetRawVCBByVRefNum(short)
PUBLIC 904c 0 VNDiskArbIdleCallback(void*)
PUBLIC 9096 0 GetDiskRefForHeadOfUnmountingVolumeList()
PUBLIC 90be 0 SCServerSession::handleMessage(mach_msg_header_t*)
PUBLIC 9351 0 SharedCacheSession_server_routine
PUBLIC 937a 0 SharedCacheSession_server
PUBLIC 93f9 0 _XFindService
PUBLIC 94a0 0 _scsserver_FindService
PUBLIC 94e0 0 SCSession::sessionForPort(unsigned int)
PUBLIC 9502 0 _equal(void const*, void const*)
PUBLIC 9531 0 _csseed_client_InitializeSeedService
PUBLIC 96bf 0 _csseed_client_CreateSeedIndexFromName
PUBLIC 9845 0 FSFindFolder
PUBLIC 98d4 0 FolderManagerReentrancyLock
PUBLIC 991b 0 FindFolderGuts
PUBLIC 9d8d 0 INIT_Folders
PUBLIC 9df0 0 CreateFolderCacheList
PUBLIC 9e69 0 NewAVLCompareItemsUPP
PUBLIC 9e71 0 NewAVLItemSizeUPP
PUBLIC 9e79 0 AVLInit
PUBLIC 9f01 0 InitializeFolderRouting
PUBLIC 9f96 0 NewStackListSys
PUBLIC 9fcd 0 NewStackListCommon
PUBLIC a047 0 NewHandleClear
PUBLIC a067 0 CSMemNewHandleClear
PUBLIC a0bf 0 CSMemNewEmptyHandle
PUBLIC a0ef 0 AllocateHandleFromPool
PUBLIC a179 0 TSAcquireReader
PUBLIC a1ec 0 CompareAndSwap
PUBLIC a203 0 AllocateHandleBlock
PUBLIC a2e0 0 TSReaderToWriter
PUBLIC a434 0 TSTryLockMutex
PUBLIC a482 0 BlockZero
PUBLIC a4a8 0 TSWriterToReader
PUBLIC a4f6 0 AllocateHandleFromHandleBlock
PUBLIC a5b3 0 IncrementAtomic
PUBLIC a5e3 0 AddAtomic
PUBLIC a616 0 TSReleaseReader
PUBLIC a6c6 0 AddFolderRoutingInternal
PUBLIC a7dd 0 SearchStackList
PUBLIC a86e 0 LockStackList
PUBLIC a89b 0 HGetState
PUBLIC a903 0 CSMemHGetState
PUBLIC a9fc 0 LMSetMemErr
PUBLIC aa16 0 HLock
PUBLIC aa3b 0 CSMemHModifyState
PUBLIC ab7b 0 HSetState
PUBLIC abd7 0 CSMemHSetState
PUBLIC abf4 0 PushStackListElement
PUBLIC ac19 0 InsertStackListElement
PUBLIC acc0 0 BlockMoveData
PUBLIC acd4 0 BlockMove
PUBLIC ace7 0 RoutingExactCompareProc
PUBLIC ad10 0 GrowStackList
PUBLIC ad66 0 GetHandleSize
PUBLIC ad98 0 CSMemGetHandleSize
PUBLIC ae85 0 SetHandleSize
PUBLIC aea9 0 CSMemSetHandleSize
PUBLIC afba 0 CSMemSetPtrSize
PUBLIC b00a 0 MemError
PUBLIC b01d 0 LMGetMemErr
PUBLIC b02f 0 CreateGlobalFolderDescList
PUBLIC b05d 0 CheckForChangedClassicSeed
PUBLIC b0b7 0 GetInternalFolderDesc
PUBLIC b10c 0 FindFolderDesc
PUBLIC b158 0 InternalFolderDescCompareFunc
PUBLIC b169 0 GetFromFolderCache
PUBLIC b2ed 0 AVLFind
PUBLIC b3d2 0 ExtractFromFolderServerCache
PUBLIC b432 0 FolderMgrClientSideCache::GetFolderCacheForDomain(short)
PUBLIC b538 0 sharedCacheServerExists
PUBLIC b57a 0 FolderMgrClientSideCache::FolderMgrClientSideCache(unsigned char)
PUBLIC b6bc 0 SCClientSession::createCacheable(SCCacheableName, char const*)
PUBLIC b751 0 _scsclient_CreateCacheableFromFrameworkSymbol
PUBLIC b8e7 0 _XCreateCacheableFromFrameworkSymbol
PUBLIC b984 0 _scsserver_CreateCacheableFromFrameworkSymbol
PUBLIC b9c6 0 _CreateFoldersCacheable
PUBLIC b9f2 0 FoldersCacheable::FoldersCacheable(char const*)
PUBLIC ba7a 0 RemoteCacheable::RemoteCacheable(unsigned int, int, char const*)
PUBLIC baba 0 RemoteCacheable::Get(unsigned long, unsigned long, unsigned int*, unsigned int*)
PUBLIC bb1f 0 _scsclient_CacheableGetData
PUBLIC bc61 0 _XCacheableGetData
PUBLIC bd42 0 _scsserver_CacheableGetData
PUBLIC bd9a 0 SCSession::cacheableFromSession(unsigned int, int)
PUBLIC be0a 0 SCSession::findCacheable(int)
PUBLIC be36 0 FolderMgrClientSideCache::LookUpFolderInCache(short, unsigned long, unsigned int, FSRef*)
PUBLIC bfbe 0 FolderMgrClientSideCache::FetchFolderServerCacheFromServer()
PUBLIC c052 0 FoldersCacheable::Get(unsigned long, unsigned long, unsigned int*, unsigned int*)
PUBLIC c082 0 ResolveRelativeFolder
PUBLIC c115 0 CopyPascalStringToC
PUBLIC c148 0 FSMount::init()
PUBLIC c228 0 VolFSMount::volumeid()
PUBLIC c234 0 VolFSMount::_init()
PUBLIC c3bc 0 GetVolFSAttributes(VolumeInfo*, unsigned long, char const*, unsigned long, unsigned long, FSAttributeInfo*, unsigned long, unsigned long, FSVolAttributeInfo*, unsigned char*)
PUBLIC cc50 0 VolFSMount::hfsstandard()
PUBLIC cc7e 0 getattrlist_retry(unsigned int, unsigned long, char const*, unsigned long, attrlist*, void*, unsigned long, unsigned long)
PUBLIC ce76 0 CreateVolFSPath(unsigned int, unsigned long, char const*, unsigned long, char*)
PUBLIC cfc2 0 CreateFSRef(VolumeInfo const*, unsigned long, unsigned long, char const*, unsigned long, unsigned char, FSRef*)
PUBLIC d124 0 FSOpenIterator
PUBLIC d14e 0 PBOpenIteratorSync
PUBLIC d3ac 0 GetVCBByVRefNum(short)
PUBLIC d3f0 0 FSMount::capabilities(unsigned long*)
PUBLIC d43e 0 GetFSRefAttributes(FSMount*, FSRefPrivate const*, unsigned long, FSAttributeInfo*, unsigned long, char*)
PUBLIC d4f8 0 FSMount::getattrs(unsigned long, char const*, unsigned long, unsigned long, FSAttributeInfo*, unsigned long, unsigned char*)
PUBLIC d602 0 VolFSMount::_getattrs(unsigned long, char const*, unsigned long, unsigned long, FSAttributeInfo*, unsigned long, unsigned char*)
PUBLIC d68c 0 VolFSMount::startbulk(unsigned long, char const*)
PUBLIC d720 0 VolFSMount::makepath(unsigned long, char const*, unsigned long, char*)
PUBLIC d786 0 UNIXToUTC(bool, timespec const*, UTCDateTime*)
PUBLIC d85a 0 FSGetCatalogInfoBulk
PUBLIC d8b8 0 PBGetCatalogInfoBulkSync
PUBLIC deae 0 RetainVolume(VolumeInfo*)
PUBLIC decc 0 VolFSMount::getattrsbulk(void*, unsigned long, unsigned long*, unsigned long, unsigned long, FSAttributeInfo*, unsigned char*)
PUBLIC dfca 0 GetBulkAttrCore(VolumeInfo*, int, unsigned long, unsigned long, unsigned long*, unsigned long, FSAttributeInfo*, unsigned long, unsigned char*)
PUBLIC e44a 0 ReleaseVolume(VolumeInfo*)
PUBLIC e4b2 0 ConvertToCatalogInfoAtIndex(VolumeInfo*, unsigned char, unsigned long, FSCatalogBulkParam*, FSAttributeInfo const*, unsigned char const*, unsigned long)
PUBLIC e616 0 ColonsToSlashes(char*)
PUBLIC e634 0 ConvertPOSIXNametoUTF16(unsigned char const*, unsigned short*, unsigned short const*)
PUBLIC e6a8 0 ConvertUTF8toUTF16
PUBLIC e72e 0 LLConvertUTF8toUCS2
PUBLIC e76f 0 LLConvertUTF8toUTF16
PUBLIC e912 0 SaveToFolderCache
PUBLIC eb05 0 AVLRemove
PUBLIC eb7f 0 AVLDeleteFromSubtree
PUBLIC ee0d 0 FSGetFolderVolumeAndDirID
PUBLIC ef72 0 FSGetCatalogInfo
PUBLIC efaa 0 PBGetCatalogInfoSync
PUBLIC f2f8 0 FSCloseIterator
PUBLIC f312 0 PBCloseIteratorSync
PUBLIC f39c 0 VolFSMount::endbulk(void*)
PUBLIC f3d4 0 ConvertFSAttributesToFSCatalogInfo(unsigned char, unsigned long, FSAttributeInfo const*, FSCatalogInfo*)
PUBLIC f68f 0 AVLInsert
PUBLIC f70c 0 InvokeAVLItemSizeUPP
PUBLIC f726 0 FolderCacheRecordSizeFunc
PUBLIC f733 0 AVLInsertInSubtree
PUBLIC f852 0 SendItemToServerCache
PUBLIC f8ba 0 FolderMgrClientSideCache::SaveFolderInCache(short, unsigned long, unsigned int, FSRef*, short)
PUBLIC fa26 0 _FSFlattenFSRef
PUBLIC fb86 0 PackFlattenedFSData(void*, unsigned long, unsigned long, void const*, unsigned long*)
PUBLIC fbd8 0 InsertItemIntoFlattenedCache(short, unsigned long, unsigned int, void const*, unsigned long, BE_FlatFolderCache*)
PUBLIC ffce 0 AllocateFlatFolderCache(short, unsigned long)
PUBLIC 1008a 0 GetConstantPoolPtr(BE_FlatFolderCache const*, unsigned long)
PUBLIC 100bc 0 RemoteCacheable::Control(unsigned long, unsigned long, unsigned int, unsigned int, unsigned int*, unsigned int*)
PUBLIC 10131 0 _scsclient_CacheableControl
PUBLIC 10297 0 _XCacheableControl
PUBLIC 10388 0 _scsserver_CacheableControl
PUBLIC 103ee 0 FoldersCacheable::Control(unsigned long, unsigned long, unsigned int, unsigned int, unsigned int*, unsigned int*)
PUBLIC 108e6 0 FoldersCacheable::IncrementSeed()
PUBLIC 1094e 0 DisposeFlatFolderCache(BE_FlatFolderCache*)
PUBLIC 1098a 0 FolderMgrClientSideCache::SetFlatFolderCache(BE_FlatFolderCache*)
PUBLIC 109d5 0 GetFolderSubFolder
PUBLIC 10aaa 0 PBMakeFSRefSync
PUBLIC 10b80 0 FindHFSName2(void*, VolumeInfo**, unsigned long, unsigned long, FSAttributeInfo*, char*)
PUBLIC 10ed4 0 DetermineVolume3(VolumeParam*, VolumeInfo**, char**, unsigned char*)
PUBLIC 10fca 0 DetermineVolume1(VolumeParam*, VolumeInfo**)
PUBLIC 1100c 0 GetTextEncoding
PUBLIC 11062 0 __SMgrGetUserDefaultEncoding
PUBLIC 112c6 0 FSSetDefaultTextEncoding
PUBLIC 112f8 0 SlashesToColons
PUBLIC 11314 0 CStringToUTF8
PUBLIC 1135e 0 CharsToUTF8(unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned char*)
PUBLIC 114ee 0 HasNonASCIIChars(unsigned char const*, unsigned long)
PUBLIC 11519 0 InvokeAVLCompareItemsUPP
PUBLIC 11540 0 CompareFolderCacheRecordFunc
PUBLIC 11574 0 balance
PUBLIC 11666 0 FlatFolderCacheCompareFunc(void const*, void const*)
PUBLIC 116fb 0 FolderManagerReentrancyUnlock
PUBLIC 11740 0 CSRefCreateInstance
PUBLIC 117ac 0 FSRefMakePath
PUBLIC 11982 0 _FSGetStrippedPath
PUBLIC 11aec 0 CSRefRelease
PUBLIC 11b5e 0 CSStoreCreateWithBytesNoCopy
PUBLIC 11ca4 0 _CSStoreInit(void const*)
PUBLIC 11cda 0 _CSStoreIsValid(__CSStore const*)
PUBLIC 11d30 0 CSStoreCopyMutable
PUBLIC 11e5a 0 _CSStoreInsertBytes(__CSStore*, unsigned long, unsigned long)
PUBLIC 1201c 0 _BytesCopy(void const*, unsigned long, void*)
PUBLIC 120f2 0 CSStoreGetTableWithName
PUBLIC 12188 0 CSStoreGetFirstUnit
PUBLIC 12326 0 CSStoreGetNextUnit
PUBLIC 1248c 0 CSStoreGetGeneration
PUBLIC 1249e 0 CSStoreGetHeader
PUBLIC 124f6 0 CSStoreGetUnit
PUBLIC 12593 0 TSInitReaderWriterLock
PUBLIC 125eb 0 TSInitCondition
PUBLIC 12608 0 _FreeSegGetLength(void const*, unsigned long)
PUBLIC 1266c 0 _FreeSegGetNext(void const*, unsigned long)
PUBLIC 126dc 0 CSStoreGetUnitCount
PUBLIC 12704 0 CSStoreGetBytes
PUBLIC 12710 0 CSStoreGetBytesLength
PUBLIC 1271d 0 CSRefRetain
PUBLIC 1275c 0 CSStoreSetGeneration
PUBLIC 12770 0 _CSWriteSeed
PUBLIC 1280b 0 GetIntlResource
PUBLIC 12856 0 GetScriptManagerVariable
PUBLIC 12a42 0 LMGetIntlSpec
PUBLIC 12a9e 0 Gestalt
PUBLIC 12b69 0 FindGestaltEntry
PUBLIC 12be8 0 InitGestalt
PUBLIC 12c6d 0 InstallInitialGestaltValues
PUBLIC 12cd2 0 SetGestaltValuesBulk
PUBLIC 12d7d 0 SetGestaltValue
PUBLIC 12d99 0 SetGestaltEntry
PUBLIC 12e2b 0 AddGestaltEntryAt
PUBLIC 12ed5 0 NewSelectorFunctionUPP
PUBLIC 12ee0 0 NewGestalt
PUBLIC 12ef8 0 AddGestaltEntry
PUBLIC 12f72 0 InstallLazyGestaltValues
PUBLIC 12fe2 0 CLVVisitValuesForKey
PUBLIC 1317a 0 getAllCarbonLazyValues2000()
PUBLIC 132c8 0 _CLV_GetCacheableOnce()
PUBLIC 132f6 0 InvokeSelectorFunctionUPP
PUBLIC 1330f 0 _Gestalt_SystemVersion
PUBLIC 13679 0 ReplaceGestaltValue
PUBLIC 1369b 0 ReplaceGestaltEntry
PUBLIC 1372e 0 _CSStoreDestroy(void const*)
PUBLIC 13768 0 _CreateCarbonLazyValuesCacheable
PUBLIC 13794 0 CLVCacheable::CLVCacheable(char const*)
PUBLIC 137e8 0 CLVCacheable::Flush(unsigned long)
PUBLIC 13858 0 flushCheckFix
PUBLIC 13886 0 ScanForGnomes(BEBuffer*)
PUBLIC 13f24 0 ProcessGnomes(void const*, char const*, CLVMergeContext*)
PUBLIC 13ff8 0 processOneLazyValueDict(CLVMergeContext*, unsigned long, __CFString const*, __CFDictionary const*)
PUBLIC 1422f 0 ResolveSpecialFolder
PUBLIC 14386 0 GetDomainRootRef
PUBLIC 1461a 0 CLVCacheable::Get(unsigned long, unsigned long, unsigned int*, unsigned int*)
PUBLIC 1464c 0 _InstallLazyGestaltValue
PUBLIC 146e2 0 CLVGetConstantString
PUBLIC 146ee 0 SetGestalt
PUBLIC 14706 0 LazyGestaltResolver
PUBLIC 14781 0 DeleteGestaltValue
PUBLIC 14804 0 _updateSelector
PUBLIC 14863 0 GetDYLDEntryPoint
PUBLIC 14895 0 GetDYLDEntryPointWithImage
PUBLIC 1493b 0 SetGetFontFromPortProc
PUBLIC 14950 0 SetGetFontScriptProc
PUBLIC 14963 0 SetInitializeScriptHLProc
PUBLIC 14979 0 IntlSetInitIntlValueProc
PUBLIC 1498c 0 SetSwapKeyboardProc
PUBLIC 149a0 0 SMInitIntlSpec
PUBLIC 149bb 0 InitScriptBundleComponent
PUBLIC 14a71 0 NewFileInterrogatorUPP
PUBLIC 14a7a 0 IntlFCOpenComponentData
PUBLIC 14ba6 0 CCFCreateNewCCFDescriptor
PUBLIC 14c0c 0 CCFFetchComponentData
PUBLIC 14dfe 0 OpenCCFFile
PUBLIC 14f8f 0 ConstructFilePath
PUBLIC 15036 0 CCFSafeOpen
PUBLIC 15091 0 SetCCFFileLock
PUBLIC 15109 0 ReadFileHeader
PUBLIC 15170 0 SearchReplaceDeactivateComponentSignatures
PUBLIC 1566a 0 IOComponentData
PUBLIC 15774 0 CacheFMMapData
PUBLIC 15f02 0 CCFIsCCFRootFile
PUBLIC 15f0e 0 CCFIsCCFRootUser
PUBLIC 15f24 0 GetPathFromSearchDirectoryInfo
PUBLIC 15fc4 0 SetModificationDateToPasteboard
PUBLIC 161eb 0 CCFMapCachedData
PUBLIC 163f6 0 CCFDisposeCCFDescriptor
PUBLIC 1643d 0 DisposeFileInterrogatorUPP
PUBLIC 16444 0 InitializeScriptManager
PUBLIC 164ed 0 OpenOnlyScriptBundleComponent
PUBLIC 16580 0 InstallScriptBundles
PUBLIC 16b3b 0 CountInterntaionalResources
PUBLIC 16b9b 0 GetIndexedInternationalResource
PUBLIC 16c99 0 GetInternationalResource
PUBLIC 16d76 0 LMSetIntlSpec
PUBLIC 16d8f 0 SetSMgrSystemScriptInfo
PUBLIC 16e04 0 SetSysDirection
PUBLIC 16e19 0 _InitCarbonCore
PUBLIC 16e1e 0 SCSession::_taskPortInvalidation(__CFMachPort*, void*)
PUBLIC 16e36 0 SCSession::noteTaskGone(__CFMachPort*)
PUBLIC 16ef2 0 SCServerSession::noteTaskGone(int, unsigned int)
PUBLIC 16f46 0 SCSession::noteTaskGone(int, unsigned int)
PUBLIC 16f94 0 FSMakeFSRefUnicode
PUBLIC 16fc8 0 PBMakeFSRefUnicodeSync
PUBLIC 171a2 0 ConvertUTF16toCanonicalUTF8
PUBLIC 17270 0 LLConvertUCS2toUTF8
PUBLIC 17428 0 HasColons(char const*)
PUBLIC 1744c 0 _CSDestroySeed
PUBLIC 1746a 0 _CS_vm_deallocate(void*, unsigned long)
PUBLIC 1749a 0 TSDestroyReaderWriterLock
PUBLIC 174fc 0 TSDestroyMutex
PUBLIC 17508 0 TSDestroyCondition
PUBLIC 17514 0 SetSymbolicLinkInfo(unsigned short, FSAttributeInfo*)
PUBLIC 17596 0 SetSymbolicLinkFinderInfo(unsigned short, FInfo*)
PUBLIC 175ec 0 canonpath(char const*, char*, int*)
PUBLIC 17ab8 0 CleanPath(char const*, char*)
PUBLIC 17da2 0 GetBestVCBByMountPoint(char const*)
PUBLIC 17eb6 0 UTF8ToFSSpecName
PUBLIC 17ef2 0 UTF8ToClassicHFS(char const*, unsigned long, unsigned long, unsigned long, unsigned char*)
PUBLIC 17f80 0 UTF8ToCString
PUBLIC 182e8 0 c2pstrcpy
PUBLIC 1835e 0 CopyCStringToPascal
PUBLIC 183d4 0 PBHGetVolParmsSync
PUBLIC 18698 0 _CSCheckFix
PUBLIC 189ca 0 _FSProcessPath
PUBLIC 189f8 0 _FSGetFSRefInformationFast
PUBLIC 18b22 0 FSGetResourceForkName
PUBLIC 18b7c 0 RMOpenResourceFileRef
PUBLIC 18eee 0 _FSGetFileIDAndVRefNum
PUBLIC 18f16 0 LMGetBootDrive
PUBLIC 18f5e 0 LMSetBootDrive
PUBLIC 18f74 0 FSOpenFork
PUBLIC 18fac 0 PBOpenForkSync
PUBLIC 19220 0 FSMount::openfork(unsigned long, unsigned long, char const*, char const*, unsigned long, unsigned char, unsigned char, FSOpenForkInfo*, unsigned short, _filesec*, unsigned long, short*, unsigned long*)
PUBLIC 197c0 0 FindNamedFileRecordUncachedInfo(short, unsigned long, char const*, char const*, OpenFileInfo*)
PUBLIC 19840 0 FindNamedFileRecordCommon(short, unsigned long, char const*, char const*, unsigned char, unsigned char)
PUBLIC 19904 0 VolFSMount::_openfork(char const*, unsigned char, unsigned long, unsigned short, _filesec*, int*, int*, FSOpenForkInfo*)
PUBLIC 19ae0 0 open_validfd(char const*, int, unsigned short, _filesec*)
PUBLIC 19b62 0 NewFileRecord(FSMount*, int, unsigned long, unsigned long, char const*, unsigned long, char const*, FSOpenForkInfo*)
PUBLIC 19df8 0 LockFileRecordList()
PUBLIC 19e28 0 NewVDIMacFileRefNum()
PUBLIC 19eaa 0 UnlockFileRecordList()
PUBLIC 19ed8 0 GetEOF
PUBLIC 19efe 0 PBGetEOFSync
PUBLIC 19f2c 0 PBGetForkSizeSync
PUBLIC 19f86 0 FindFileRecord(short, unsigned long, OpenFileInfo*, char*)
PUBLIC 19ff2 0 PackFileRecord(FileRecord*, unsigned long, OpenFileInfo*, char*)
PUBLIC 1a0be 0 GetForkLength(FileRecord*)
PUBLIC 1a11c 0 IsFileForkInfoCached(FileRecord*)
PUBLIC 1a12a 0 FSCloseFork
PUBLIC 1a148 0 PBCloseForkSync
PUBLIC 1a172 0 PBCloseSync
PUBLIC 1a196 0 BasicCloseFork(short)
PUBLIC 1a244 0 FindLockFileRecord(short)
PUBLIC 1a2b0 0 UnlockFileRecord(FileRecord*)
PUBLIC 1a2cc 0 DisposeFileRecord(short)
PUBLIC 1a3ae 0 FSMount::ejectable()
PUBLIC 1a3d8 0 FSMount::removable()
PUBLIC 1a402 0 FSMount::internal()
PUBLIC 1a42c 0 FSMount::external()
PUBLIC 1a452 0 FSMount::diskID()
PUBLIC 1a4c4 0 CSStoreWriteToUnit
PUBLIC 1a579 0 GetAliasSizeFromPtr
PUBLIC 1a58f 0 _FSCopyAliasInfoFromAliasPtr
PUBLIC 1a5d7 0 _FSCopyExtendedAliasInfoFromAliasPtr
PUBLIC 1a8f8 0 ALI_GetAliasDataFromAliasPtr
PUBLIC 1b237 0 AL_validateAliasPointer
PUBLIC 1b323 0 validateVariableLengthBlock
PUBLIC 1b44b 0 ALI_GetUnicodeLeafName
PUBLIC 1b57d 0 AL_getVarPtr
PUBLIC 1b5bf 0 ALI_GetUnicodeVolumeName
PUBLIC 1b65a 0 ALI_GetAliasVolumeKind
PUBLIC 1b701 0 ALI_HasPersistentFileIDs
PUBLIC 1b774 0 ALI_GetUTF8Path
PUBLIC 1ba71 0 ALI_CompareUTCDateTimes
PUBLIC 1baa2 0 FSGetVolumeInfo
PUBLIC 1baf2 0 PBGetVolumeInfoSync
PUBLIC 1bc98 0 _FSNewVersion3Alias
PUBLIC 1bd29 0 AL_fillVersion3Alias
PUBLIC 1c2d0 0 AL_fillInternalAliasRecord
PUBLIC 1c87a 0 FSMount::volumeattrs(unsigned long, FSVolAttributeInfo*, unsigned long, unsigned char*)
PUBLIC 1c94c 0 VolFSMount::_volumeattrs(unsigned long, FSVolAttributeInfo*, unsigned long, unsigned char*)
PUBLIC 1c99c 0 ConvertFSVolAttributesToFSVolumeInfo(unsigned char, unsigned long, FSVolAttributeInfo const*, FSVolumeInfo*)
PUBLIC 1cc0a 0 AL_getVolumeAliasForDiskImage
PUBLIC 1ced8 0 _FSIsVolumeDiskImage
PUBLIC 1cf17 0 AL_getVolType
PUBLIC 1d01a 0 _FSGetVolumeDeviceType
PUBLIC 1d056 0 FSMount::devicetype()
PUBLIC 1d0ae 0 _CopyiDiskUserNameForVolume
PUBLIC 1d176 0 GetVolumeMountfrom
PUBLIC 1d1ae 0 GetVolumeMountpoint
PUBLIC 1d1e7 0 AL_getHomeFolderRelativeOffset
PUBLIC 1d233 0 ALI_GetHomeDirPath
PUBLIC 1d2a4 0 GetUserDomainRootRef
PUBLIC 1d371 0 AL_fillDirectoryBlock
PUBLIC 1d558 0 _FSGetCatalogInfoByName
PUBLIC 1d6df 0 AL_addVarEntryToBlock
PUBLIC 1d75a 0 _FSGetFileContents
PUBLIC 1d81a 0 CreateIOPathFromFSRef
PUBLIC 1d870 0 ErrorTranslate
PUBLIC 1daaa 0 CSStoreWriteToHeader
PUBLIC 1db14 0 CSStoreFreeUnit
PUBLIC 1dc2e 0 _CSStoreUnitSetMarker(__CSStore*, void*, unsigned long, unsigned long)
PUBLIC 1dc5e 0 _TableFreeBytes(void*, unsigned long, unsigned long)
PUBLIC 1de26 0 _FreeSegSet(void*, unsigned long, unsigned long, unsigned long)
PUBLIC 1deba 0 _FreeSegSetNext(void*, unsigned long, unsigned long)
PUBLIC 1df0e 0 CSStoreAllocUnitWithData
PUBLIC 1dffa 0 _CSStoreAllocBytes(__CSStore*, unsigned long, unsigned long, unsigned long*)
PUBLIC 1e148 0 _TableAllocBytes(void*, unsigned long, unsigned long*)
PUBLIC 1e2c2 0 CSStoreAllocUnit
PUBLIC 1e2f2 0 CSStoreAllocFixedUnitWithData
PUBLIC 1e409 0 DisposeHandle
PUBLIC 1e426 0 CSMemDisposeHandle
PUBLIC 1e48f 0 CSMemDisposePtr
PUBLIC 1e4bd 0 ReleaseHandleFromPool
PUBLIC 1e4cb 0 ReleaseHandleTypeFromPool
PUBLIC 1e674 0 MakeBitmapIndexFree
PUBLIC 1e6c0 0 DecrementAtomic
PUBLIC 1e6f0 0 _Gestalt_PhysicalRAMSize
PUBLIC 1e7b8 0 TSInstallExceptionCatcher
PUBLIC 1e9fe 0 TSCreateThread
PUBLIC 1ea1e 0 TSCreateThreadCommon
PUBLIC 1eb80 0 TS_exception_listener_thread
PUBLIC 1ec7c 0 TSSetPriority
PUBLIC 1edf0 0 TSGetDefaultPriority
PUBLIC 1ee6c 0 CSStoreReallocUnit
PUBLIC 1f0e6 0 FindFolder
PUBLIC 1f232 0 _FSUnflattenFSRef
PUBLIC 1f314 0 FSMakeFSSpec
PUBLIC 1f348 0 PBMakeFSSpecSync
PUBLIC 1f400 0 GetEmbeddedFileID
PUBLIC 1f4e0 0 GetUTF8Extension(short, char const*, char*)
PUBLIC 1f54a 0 FSpCreate
PUBLIC 1f5de 0 PBHCreateSync
PUBLIC 1f6ca 0 VolFSMount::create(unsigned long, char const*, unsigned long, unsigned short, _filesec*)
PUBLIC 1f7d0 0 PBGetCatInfoSync
PUBLIC 1f7f0 0 PBGetCatInfoCommon(CInfoPBRec*, unsigned char)
PUBLIC 1fc0a 0 DoUNIXToMacDate
PUBLIC 1fc6c 0 FindNamedFileRecord(short, unsigned long, char const*, char const*, unsigned long, OpenFileInfo*)
PUBLIC 1fcec 0 ConvertScriptCodeToDiskForm
PUBLIC 1fd04 0 PBSetCatInfoSync
PUBLIC 1fe52 0 DoMacToUNIXDate
PUBLIC 1fec2 0 FSMount::setattrs(unsigned long, char const*, unsigned long, unsigned long, unsigned long, FSAttributeInfo*)
PUBLIC 2001a 0 VolFSMount::_setattrs(unsigned long, char const*, unsigned long, unsigned long, unsigned long, FSAttributeInfo*)
PUBLIC 201a4 0 SetVolFSAttributes(VolumeInfo*, unsigned long, char const*, unsigned long, unsigned long, unsigned long, FSAttributeInfo*, unsigned long, FSVolumeInfo const*)
PUBLIC 209ce 0 IsPOSIXSymLinkType(unsigned long)
PUBLIC 20a0a 0 FSpDelete
PUBLIC 20a40 0 PBHDeleteSync
PUBLIC 20ad2 0 BasicDelete(VolumeInfo*, unsigned long, char const*, unsigned char)
PUBLIC 20cbc 0 VolFSMount::remove(unsigned long, char const*, unsigned long)
PUBLIC 20d42 0 FSMount::updatedircachefordelete(unsigned long, char const*)
PUBLIC 20d6c 0 RemoveLastElementFromEnumerationCacheIfItMatches(VolumeInfo*, unsigned long, char const*)
PUBLIC 20e24 0 FSMount::killdircache(unsigned long)
PUBLIC 20e36 0 KillEnumerationCache(VolumeInfo*, unsigned long)
PUBLIC 20e99 0 NewHandle
PUBLIC 20eb9 0 CSMemNewHandle
PUBLIC 20f14 0 CSMemNewPtr
PUBLIC 20f6d 0 FSResolveAlias
PUBLIC 20fa0 0 FSResolveAliasWithMountFlags
PUBLIC 20fd2 0 FSResolveAliasWithMountFlagsInternal
PUBLIC 2107b 0 FSMatchAliasInternal
PUBLIC 21990 0 AL_validateHandle
PUBLIC 219e6 0 ALI_FindHomeDirectoryPathRelative
PUBLIC 21ac5 0 ALI_GetUTCVolumeCreateDate
PUBLIC 21aee 0 ALI_GetUTCCreateDate
PUBLIC 21bbb 0 ALI_GetUTCLeafCreateDate
PUBLIC 21be3 0 AL_findVolume
PUBLIC 21c68 0 AL_checkIfMounted
PUBLIC 21e5b 0 AL_findVolByName
PUBLIC 21e8e 0 _FSGetVolumeInfoByName
PUBLIC 22000 0 GetVCBByVolumeUTF8Name(char const*)
PUBLIC 22074 0 FindTarget
PUBLIC 2252b 0 AL_findByAbsPath
PUBLIC 2267f 0 NewCandidate
PUBLIC 226c4 0 UpdateAliasListAndFlag
PUBLIC 22807 0 UCCompareTextNoLocale
PUBLIC 229c8 0 PostProcessNeedsUpdateFlag
PUBLIC 22ae5 0 NewFNSubscriptionUPP
PUBLIC 22af0 0 FNSubscribe
PUBLIC 22b7a 0 _FN_SubscribeCommon(FSRef const*, unsigned char const*, void (*)(unsigned long, unsigned long, void*, OpaqueFNSubscriptionRef*), void*, unsigned long, OpaqueFNSubscriptionRef**)
PUBLIC 22cc0 0 _FN_CreateNotificationObject(FSRef const*)
PUBLIC 22d2a 0 FSCompareFSRefs
PUBLIC 22d4c 0 PBCompareFSRefsSync
PUBLIC 22dfa 0 InitializeDiskArbitrationMessages(__CFRunLoopObserver*, CFRunLoopActivity, void*)
PUBLIC 22f5d 0 _FSGetAliasInfoFromAliasPtr
PUBLIC 23047 0 AL_checkIfAnyMatchesCriterion
PUBLIC 23230 0 GetVCBByVolumeIndex(short)
PUBLIC 232a8 0 ALI_DoUnicodeNamesMatch
PUBLIC 23302 0 GetScriptVariable
PUBLIC 2376a 0 MapScript
PUBLIC 237f8 0 SetUnicodeConverterInstalledScripts
PUBLIC 23878 0 SetGetScriptFontFlagsCallback
PUBLIC 2388b 0 SetScriptFontValidatorCallback
PUBLIC 238a1 0 LMGetLangMapPtr
PUBLIC 238ca 0 SetScriptLangMap
PUBLIC 23b9e 0 GetIntlXResource
PUBLIC 2411c 0 GetCachedItlbValue
PUBLIC 2416c 0 IntlIsInitIntlValueDone
PUBLIC 241a4 0 FSGetDataForkName
PUBLIC 241b6 0 GetForkPhysicalInfo
PUBLIC 241ee 0 GetForkPhysicalInfoInternal
PUBLIC 2426d 0 RMNewMappedRefFromMappedFork
PUBLIC 24319 0 CheckMapHeaderCommon
PUBLIC 2438d 0 FillInForkReferenceInfo
PUBLIC 243ce 0 CheckMapCommon
PUBLIC 24567 0 MaxResourceFileEOF
PUBLIC 2458e 0 GetTypes
PUBLIC 245bc 0 GetResource
PUBLIC 245e7 0 GetResourceCommon
PUBLIC 24757 0 StandardEntry
PUBLIC 248c2 0 INIT_ResourceManager
PUBLIC 24bfd 0 LMSetResOneDeep
PUBLIC 24c11 0 LMSetResLoad
PUBLIC 24c25 0 LMSetTmpResLoad
PUBLIC 24c3a 0 LMSetSysMap
PUBLIC 24c50 0 LMSetROMMapHndl
PUBLIC 24c63 0 LMSetResErr
PUBLIC 24c78 0 LMSetBrianBits
PUBLIC 24c8e 0 LMGetResErr
PUBLIC 24ca0 0 InstallAtExitRoutine
PUBLIC 24cd1 0 _openFrameworkResourceFiles
PUBLIC 24da5 0 CurResFile
PUBLIC 24de3 0 FSOpenResourceFileMapped
PUBLIC 24e6f 0 RMInsertMappedResourceFileInChain
PUBLIC 25029 0 LMGetSysMap
PUBLIC 2503a 0 GetCurrentMapHandle
PUBLIC 25088 0 GetMapHandle
PUBLIC 250d3 0 CheckMapHeader
PUBLIC 250f4 0 CheckMap
PUBLIC 25111 0 NewFileMapInfoRecord
PUBLIC 25178 0 NewPtr
PUBLIC 25197 0 PreLoad
PUBLIC 25304 0 GetEntries
PUBLIC 25360 0 LMGetResLoad
PUBLIC 25373 0 FirstResource
PUBLIC 25452 0 FlushResourceCache
PUBLIC 2548c 0 StandardExit
PUBLIC 25514 0 UseResFile
PUBLIC 255d8 0 InsertSystemOverrideFile
PUBLIC 256b0 0 GetMap
PUBLIC 25704 0 GetMapAbove
PUBLIC 2575b 0 InsertOverrideFile
PUBLIC 257a5 0 InsertOverrideMapCommon
PUBLIC 258f2 0 GetOverrideMapFromChain
PUBLIC 25955 0 TypeAndIDScan
PUBLIC 25a70 0 vCheckLoad
PUBLIC 25d2f 0 FindFileMapInfoRecord
PUBLIC 25d53 0 CSMemNewHandleFromExternalPtr
PUBLIC 25d9c 0 AllocateExternalHandleFromPool
PUBLIC 25f1b 0 SetPL
PUBLIC 25f74 0 StoreIntoHandleScanCache
PUBLIC 26036 0 ClearHandleScanCache
PUBLIC 260a1 0 IntlSetCache
PUBLIC 262dd 0 GetDefaultResID
PUBLIC 26331 0 LoadIntlCacheData
PUBLIC 263c8 0 RetrieveCachedSize
PUBLIC 264a5 0 SetIntlCacheData
PUBLIC 26526 0 EqualString
PUBLIC 2658a 0 TextCompare
PUBLIC 26740 0 MakeCharUpperCase
PUBLIC 2676b 0 IntlGetCache
PUBLIC 26a6b 0 HNoPurge
PUBLIC 26a82 0 DetachResource
PUBLIC 26a8d 0 DetachResourceCommon
PUBLIC 26b78 0 HandleScan
PUBLIC 26d5d 0 LMGetHSCHndl
PUBLIC 26d6e 0 DetachHandleFromExternalPtr
PUBLIC 26e14 0 NormalizeExternalHandleFromPool
PUBLIC 26e83 0 HClrRBit
PUBLIC 26ea5 0 LMSetHSCHndl
PUBLIC 26eb8 0 _FSDisableAutoDiskArbHandling
PUBLIC 26f30 0 CarbonCoreGetMainRunLoop
PUBLIC 26f3a 0 TickCount
PUBLIC 26f7a 0 MPCreateCriticalRegion
PUBLIC 27046 0 AssignOpaqueID
PUBLIC 27204 0 MPEnterCriticalRegion
PUBLIC 27343 0 RetrieveDataFromOpaqueID
PUBLIC 273ca 0 MPCurrentTaskID
PUBLIC 273d3 0 MPExitCriticalRegion
PUBLIC 2748a 0 TSSignalCondition
PUBLIC 27496 0 _standalone_CopyCheckFixForBundleID
PUBLIC 2764e 0 flattenPlist(void const*)
PUBLIC 276de 0 CLVCacheable::Control(unsigned long, unsigned long, unsigned int, unsigned int, unsigned int*, unsigned int*)
PUBLIC 27804 0 unflattenPlist
PUBLIC 2786e 0 copyAppCheckFix(__CFDictionary const*)
PUBLIC 27b77 0 MPTaskIsPreemptive
PUBLIC 27b9b 0 ThreadIsCooperative
PUBLIC 27bfa 0 CreateMainThread
PUBLIC 27cc3 0 TSGetStackBase
PUBLIC 27ccc 0 TSGetStackSize
PUBLIC 27cd6 0 CreateSchedulingToken
PUBLIC 27d3f 0 FindThreadByID
PUBLIC 27d8c 0 _CSStoreValidate
PUBLIC 2810a 0 _CSStoreValidateTable(__CSStore const*, unsigned long, unsigned char)
PUBLIC 28704 0 CSStoreGetFirstTable
PUBLIC 28784 0 CSStoreGetNextTable
PUBLIC 287fe 0 scAddReconnectProc
PUBLIC 2883c 0 _ccSetGetHandleSizeCallout
PUBLIC 28858 0 NumToString
PUBLIC 288df 0 Enqueue
PUBLIC 2895b 0 Dequeue
PUBLIC 28a12 0 RMGetResource
PUBLIC 28a43 0 GetResourcePtrCommon
PUBLIC 28c5d 0 RMScanForType
PUBLIC 28cd8 0 FixMul
PUBLIC 28d66 0 PBXGetVolInfoSync
PUBLIC 28d9c 0 PBGetVolumeInfoCommon(XVolumeParam*, VolumeInfo**)
PUBLIC 29168 0 GetAdjustedVolumeFlags(VolumeInfo*, unsigned short)
PUBLIC 291cc 0 FindIndexedFileRecord(short, short, unsigned long, OpenFileInfo*, char*)
PUBLIC 29262 0 GetDefaultVolume()
PUBLIC 292ae 0 GetApplicationFSSpecPtr
PUBLIC 29314 0 NativePathNameToFSSpec
PUBLIC 293fe 0 PathMakeFSSpec(char const*, FSSpec*, unsigned char*)
PUBLIC 294a2 0 SetDefaultVolumeAndDir(VolumeInfo*, unsigned long)
PUBLIC 294c8 0 FSpMakeFSRef
PUBLIC 294f8 0 _FSGetVolumeDeviceAttributes
PUBLIC 296d9 0 CreateFolder
PUBLIC 29c7a 0 FSCreateDirectoryNonUnicode
PUBLIC 29d42 0 DirCreate
PUBLIC 29d9e 0 PBDirCreateSync
PUBLIC 29efa 0 GetTextEncodingFromScriptInfo
PUBLIC 2a09b 0 GetTrueTextEncoding
PUBLIC 2a250 0 ResolveDefaultTextEncoding
PUBLIC 2a25a 0 InitializeLowLevelTextEncodingConverter
PUBLIC 2a2cf 0 InitializeTECMasterCacheGlobals
PUBLIC 2a44c 0 PostProcessLowLevelGlobals
PUBLIC 2a47d 0 ResolveDefaultTextEncodingImplementation
PUBLIC 2a5df 0 TranslateDefaultTextEncodingBase
PUBLIC 2a60b 0 LocaleStringToLangAndRegionCodes
PUBLIC 2a87c 0 LocStringToPartString
PUBLIC 2a95b 0 LocaleStringToTag
PUBLIC 2aa8c 0 LocaleRefGeneralContainsSpecific
PUBLIC 2ab30 0 PtrToHand
PUBLIC 2ab63 0 CSMemPtrToHand
PUBLIC 2abc2 0 FSCatalogSearch
PUBLIC 2ac26 0 PBCatalogSearchSync
PUBLIC 2afd6 0 ConvertFSCatalogInfoToSearchInfo(VolumeInfo const*, unsigned long, FSCatalogInfo const*, CatalogAttributeInfo*)
PUBLIC 2b25c 0 UTCToUNIX(bool, UTCDateTime const*, timespec*)
PUBLIC 2b33a 0 SearchCatalog(VolumeInfo*, unsigned long, SearchParam*, unsigned char, unsigned char*, unsigned long, FSCatalogInfo*, unsigned long, FSRef*, FSSpec*, HFSUniStr255*)
PUBLIC 2ba7c 0 DoPackSearchInfo(attrlist*, CatalogAttributeInfo*, char*, unsigned long, void**, void**)
PUBLIC 2bd67 0 TSDurationToTimeval
PUBLIC 2bdf6 0 FSpGetFInfo
PUBLIC 2be52 0 PBHGetFInfoSync
PUBLIC 2bed4 0 DoUpdateSearchState(CatPositionRec*, searchstate*)
PUBLIC 2bfb0 0 FSSpecToNativePathName
PUBLIC 2bfec 0 HUnlock
PUBLIC 2c00e 0 DoFindPreviousState(CatPositionRec*, searchstate*)
PUBLIC 2c068 0 DoFreeSearchState(CatPositionRec*)
PUBLIC 2c0e1 0 ccAtExitRoutine
PUBLIC 2c10a 0 SCServerSession::_scSessionCallback(__CFMachPort*, void*, long, void*)
PUBLIC 2c142 0 SCSession::markForDeletion()
PUBLIC 2c22c 0 SCServerSession::notePendingDeletion(unsigned int)
PUBLIC 2c274 0 SCSession::notePendingDeletion(unsigned int)
PUBLIC 2c2e6 0 SCCacheable::NoteSessionPendingDeletion(unsigned int)
PUBLIC 2c2ee 0 FoldersCacheable::NoteSessionPendingDeletion(unsigned int)
PUBLIC 2c2fa 0 FoldersCacheable::KillCache()
PUBLIC 2c34c 0 MungePathForAutomountsAsAppropriate
PUBLIC 2c408 0 AL_mountVolume
PUBLIC 2c6d9 0 AL_aliasVolumeMount
PUBLIC 2c740 0 PBVolumeMount
PUBLIC 2c88a 0 IsSymLink
PUBLIC 2c8e6 0 ResolveSyntheticAliasFileByPath(unsigned char const*, unsigned long, unsigned char*, unsigned char*, FSRef*)
PUBLIC 2cb2a 0 RealMountName(char const*)
PUBLIC 2cba8 0 GetUnmountVCBByMountPointName(char const*)
PUBLIC 2cbec 0 StatFS_NoWait(char const*, statfs*)
PUBLIC 2cc9c 0 POSIXMount::POSIXMount(CachedVolumeInfo const*)
PUBLIC 2cce4 0 VolumeNotification(unsigned short, short, short)
PUBLIC 2cd8f 0 FolderManagerVolumeNotificationHandler
PUBLIC 2ce41 0 NewAVLWalkUPP
PUBLIC 2ce4b 0 AVLWalk
PUBLIC 2cebb 0 AVLWalkSubtree
PUBLIC 2d04c 0 InvokeAVLWalkUPP
PUBLIC 2d08b 0 InvalidateDomainItemsInCacheWithErrorEntries
PUBLIC 2d0ce 0 POSIXMount::volumeid()
PUBLIC 2d0e0 0 POSIXMount::_init()
PUBLIC 2d47c 0 POSIXMount::createVolumeName()
PUBLIC 2d608 0 _FileIDTreeGetSKServiceDescription
PUBLIC 2d6f6 0 fmodWatchConsumer
PUBLIC 2dc69 0 fmodWatchProducer
PUBLIC 2de72 0 fmod_watching
PUBLIC 2df73 0 FileIDTree_InitConnection_rpc
PUBLIC 2e0d2 0 FileIDTreeStorageServer_server_routine
PUBLIC 2e0fb 0 FileIDTreeStorageServer_server
PUBLIC 2e17a 0 _XFileIDTree_InitConnection_rpc
PUBLIC 2e26c 0 ServerFileIDTree_InitConnection_rpc
PUBLIC 2e52c 0 FileIDTree_ShareMemory
PUBLIC 2e61e 0 ServerFileIDTree_MapSharedSegment
PUBLIC 2e6a2 0 FileIDTree_MapSharedSegment_rpc
PUBLIC 2e7ab 0 _XFileIDTree_MapSharedSegment_rpc
PUBLIC 2e834 0 ServerFileIDTree_MapSharedSegment_rpc
PUBLIC 2e8c4 0 FileIDTree_LockClientSharedUniverse
PUBLIC 2e8eb 0 FileIDTreeGetChildIDFromName
PUBLIC 2e947 0 FileIDTree_GetChildIDFromNameInternal
PUBLIC 2eda5 0 CalculateHashValue
PUBLIC 2f1ee 0 FSNodeEntry_FindChildByName
PUBLIC 2f549 0 FileIDTree_GetByRelativePath_rpc
PUBLIC 2f70b 0 _XFileIDTree_GetByRelativePath_rpc
PUBLIC 2f7e7 0 ServerFileIDTree_GetByRelativePath_rpc
PUBLIC 2f891 0 FileIDTree_GetFileIDFromPathInternal
PUBLIC 2fa20 0 FSNodeEntry_GetByRelativePath
PUBLIC 2fd28 0 FSNodeEntry_AddChild
PUBLIC 30017 0 SystemFileIDAllocator
PUBLIC 301a5 0 FileIDTreeSetVolumeProperties
PUBLIC 301ff 0 FileIDTreeSetVolumePropertiesInternal
PUBLIC 302f4 0 FileIDTree_SetVolumeProperties_rpc
PUBLIC 30409 0 _XFileIDTree_SetVolumeProperties_rpc
PUBLIC 304bd 0 ServerFileIDTree_SetVolumeProperties_rpc
PUBLIC 30546 0 POSIXMount::_getattrs(unsigned long, char const*, unsigned long, unsigned long, FSAttributeInfo*, unsigned long, unsigned char*)
PUBLIC 3060a 0 POSIXMount::makepath(unsigned long, char const*, unsigned long, char*)
PUBLIC 30883 0 FileIDTreeGetPathFromFileID
PUBLIC 3095e 0 FSNodeGetPathFromFileIDInternal
PUBLIC 30a20 0 FSNodeEntry_GetPath
PUBLIC 30b0a 0 POSIXMount::getattrscore(bool, char const*, unsigned long, char const*, unsigned long, FSAttributeInfo*, unsigned long, unsigned char*)
PUBLIC 31794 0 FileIDTreeGetEntryInfoFromFileID
PUBLIC 31882 0 FileIDTreeGetInfoFromFileIDInternal
PUBLIC 319a0 0 FindTargetNoPersistentFileIDs
PUBLIC 32036 0 POSIXMount::nodeType(unsigned long, char const*, unsigned char, FSAttributeInfo*)
PUBLIC 32287 0 FileIDTreeGetVolumeProperties
PUBLIC 322fd 0 FileIDTreeGetVolumePropertiesInternal
PUBLIC 32370 0 FileIDTreeSetNodeType
PUBLIC 324df 0 FileIDTreeSetNodeTypeInternal
PUBLIC 32614 0 FileIDTree_SetNodeType_rpc
PUBLIC 32724 0 _XFileIDTree_SetNodeType_rpc
PUBLIC 327c9 0 ServerFileIDTree_SetNodeType_rpc
PUBLIC 3284a 0 POSIXMount::_volumeattrs(unsigned long, FSVolAttributeInfo*, unsigned long, unsigned char*)
PUBLIC 32a42 0 FSlstatx(char const*, stat*, _filesec*)
PUBLIC 32a6c 0 IsForkedDirectoryItem(VolumeInfo*, unsigned long, char const*, unsigned char*)
PUBLIC 32b4e 0 BytesToAllocationBlocks(unsigned long long, unsigned long long)
PUBLIC 32bc4 0 POSIXGetADInfo(char const*, stat*, unsigned char, FInfo*, FXInfo*, unsigned long*, unsigned long*)
PUBLIC 32d34 0 MakeResForkPath(char const*, char*, unsigned int, unsigned long)
PUBLIC 32e1c 0 pathOf(char const*, char*, unsigned int)
PUBLIC 32e92 0 nameOf(char const*)
PUBLIC 32ecc 0 CompareNames
PUBLIC 3300f 0 FSResolveAliasFile
PUBLIC 3304d 0 FSResolveAliasFileWithMountFlags
PUBLIC 33089 0 ResolveAliasFileWithMountFlagsCommon
PUBLIC 334aa 0 ResolveSyntheticAliasFile
PUBLIC 33564 0 SCSession::_timerCallback(__CFRunLoopTimer*, void*)
PUBLIC 335b8 0 SCServerSession::~SCServerSession()
PUBLIC 3368e 0 SCSession::noteSessionDeath(unsigned int)
PUBLIC 336d4 0 SCSession::~SCSession()
PUBLIC 33898 0 MsgDebug::~MsgDebug()
PUBLIC 338c6 0 GetAppleDoubleBulk(int, unsigned char, FInfo*, FXInfo*, unsigned long*, unsigned long*)
PUBLIC 33ade 0 GetASDEntryOffsetAndLength(long, char*, long, unsigned long*, unsigned long*)
PUBLIC 33b71 0 FolderManagerDeleteUserSpecificItems
PUBLIC 33d5c 0 scCreateCacheable
PUBLIC 33dc2 0 InvalidateFolderDescriptorCache
PUBLIC 33e2a 0 InvalidateFolderDescriptorCacheInternal
PUBLIC 33fd0 0 AVLDispose
PUBLIC 34048 0 AVLFreeSubtree
PUBLIC 3410d 0 DisposePtr
PUBLIC 34142 0 InvalidateFolderTypeInServerCache
PUBLIC 341a2 0 FolderMgrClientSideCache::InvalidateInCache(short, unsigned long)
PUBLIC 34246 0 RepackFlattenedCache(BE_FlatFolderCache*)
PUBLIC 34428 0 IncrementClassicSeedValue
PUBLIC 34496 0 _csseed_client_IncrementSeed
PUBLIC 345ba 0 GetClassicSeedValue
PUBLIC 34638 0 DomainIsVolumeReference
PUBLIC 34649 0 FolderManagerDeleteUserSpecificItemsForVRefNum
PUBLIC 34706 0 GetUserSpecificTempFolder
PUBLIC 34c63 0 VolumeExists
PUBLIC 34c88 0 GetVolumeParms
PUBLIC 34cfd 0 VolumeIsBootVolume
PUBLIC 34d96 0 VolumeContainsUserDomain
PUBLIC 34e28 0 FindTrashFolderForDomainOrVolume
PUBLIC 3505b 0 VolumeContainsUserHome
PUBLIC 350d2 0 IsFolderEmpty
PUBLIC 35202 0 FSDeleteContainer
PUBLIC 352ad 0 FSDeleteContainerLevel
PUBLIC 353c8 0 FSDeleteObject
PUBLIC 353e2 0 PBDeleteObjectSync
PUBLIC 354be 0 FSCacheableClient_ConvertAbsoluteToVolumeRelativePath
PUBLIC 355f4 0 registerForClassicBootVolumeChangeNotification
PUBLIC 356b1 0 InvalidateVRefNumAndDirIDInCacheProc
PUBLIC 35739 0 FindClassicDomainFolderDesc
PUBLIC 35b81 0 OpenClassicSystemFile
PUBLIC 35e15 0 GetClassicDomainSystemFolder
PUBLIC 35f1e 0 ClassicVolumeGetStartupInfo
PUBLIC 363d9 0 TryPreferenceValues
PUBLIC 36414 0 GetNumericPreferenceValue
PUBLIC 364d4 0 CSRefRetainCallbackForCF
PUBLIC 364ec 0 GetVRefNumFromVolumeID
PUBLIC 36526 0 GetVCBByVolumeID(unsigned long)
PUBLIC 3658c 0 FileIDTreeStorageServerClientDeath
PUBLIC 366db 0 InvalidateTransactionsByPID
PUBLIC 36767 0 CSRefReleaseCallbackForCF
PUBLIC 3677f 0 GetTextEncodingBase
PUBLIC 3678b 0 CreateUnicodeToTextInfoByEncoding
PUBLIC 367bb 0 CreateUnicodeToTextInfoImplementation
PUBLIC 368db 0 INIT_UnicodeConverter
PUBLIC 36904 0 GetTextEncodingFormat
PUBLIC 36917 0 UmapOpenMapping
PUBLIC 36b8b 0 CompareEncAndUBitToEncAndUMask
PUBLIC 36bd9 0 ResetUnicodeToTextInfo
PUBLIC 36c03 0 ConvertFromUnicodeToText
PUBLIC 36c0e 0 ConvertFromUnicodeToTextImplementation
PUBLIC 37420 0 CheckFromUnicodeParams
PUBLIC 374b8 0 ValidateContext
PUBLIC 374d7 0 UmapSetLookupInfo
PUBLIC 37634 0 UmapScanUCharElement
PUBLIC 37dc6 0 UprpLookupElemDirClass
PUBLIC 37e27 0 UmapUCharElementToBChars
PUBLIC 37fb9 0 UmapLookupFromUnicode
PUBLIC 3838c 0 GetScriptInfoFromTextEncoding
PUBLIC 384a7 0 GetTextEncodingToScriptValues
PUBLIC 3854e 0 DisposeUnicodeToTextInfo
PUBLIC 3855a 0 DisposeUnicodeToTextInfoImplementation
PUBLIC 385a1 0 UmapCloseMapping
PUBLIC 385ca 0 NewCollection
PUBLIC 385ea 0 AddCollectionItem
PUBLIC 3867f 0 AL_findVolByVRefNum
PUBLIC 386c3 0 FSUpdateAlias
PUBLIC 38796 0 UpgradeScriptInfoToTextEncoding
PUBLIC 387b8 0 UpgradeScriptInfoToTextEncodingImplementation
PUBLIC 38b4f 0 GetSystemScriptAndRegionCode
PUBLIC 38ddd 0 CreateTextToUnicodeInfoByEncoding
PUBLIC 38e0b 0 CreateTextToUnicodeInfoImplementation
PUBLIC 38f55 0 CreateTextEncoding
PUBLIC 38f77 0 TECCreateConverter
PUBLIC 391d3 0 InitializeHighLevelTextEncodingConverter
PUBLIC 39251 0 InitializeTECHighLevelCacheGlobals
PUBLIC 392cc 0 FindConversionPlugin
PUBLIC 3944d 0 GetPluginPtr
PUBLIC 39474 0 Plugin_GetCountAvailableTextEncodingConversions
PUBLIC 395ad 0 TECMemError
PUBLIC 395be 0 TECLoadPlugin
PUBLIC 396b5 0 CountUnicodeMappings
PUBLIC 396c1 0 CountUnicodeMappingsImplementation
PUBLIC 399d7 0 UmapGetMappingList
PUBLIC 399ea 0 QueryUnicodeMappings
PUBLIC 399f3 0 QueryUnicodeMappingsImplementation
PUBLIC 39f8c 0 GetTextEncodingVariant
PUBLIC 39f9f 0 MakeTECObject
PUBLIC 3a070 0 TECClearConverterContextInfo
PUBLIC 3a111 0 ValidateConverter
PUBLIC 3a135 0 TECConvertText
PUBLIC 3a216 0 TECConvertTextInternal
PUBLIC 3a756 0 GetCollectionItem
PUBLIC 3a7ba 0 GetCollectionExceptionProc
PUBLIC 3a7c8 0 RemoveCollectionItem
PUBLIC 3a81e 0 _CSGetNamedData
PUBLIC 3a8bc 0 _createNamedDataCacheable()
PUBLIC 3a8ec 0 _FSSamePhysicalDevice
PUBLIC 3aab0 0 FSClose
PUBLIC 3aacc 0 MPCreateQueue
PUBLIC 3aba5 0 MPCreateTask
PUBLIC 3acb7 0 TSCreateThreadWithStackSize
PUBLIC 3acd9 0 PrivateMPEntryPoint
PUBLIC 3ad19 0 MPNotifyQueue
PUBLIC 3adec 0 MPWaitOnQueue
PUBLIC 3afcd 0 AddDurationToAbsolute
PUBLIC 3affa 0 DurationToAbsolute
PUBLIC 3b082 0 AddAbsoluteToAbsolute
PUBLIC 3b0f2 0 _MPIsFullyInitialized
PUBLIC 3b0fe 0 _CreateNamedDataCacheable
PUBLIC 3b12c 0 CSNamedDataCacheable::CSNamedDataCacheable(char const*)
PUBLIC 3b1b6 0 RemoteCacheable::GetWithStringKey(unsigned long, char const*, unsigned int*, unsigned int*)
PUBLIC 3b21c 0 _scsclient_CacheableGetDataWithStringKey
PUBLIC 3b3ca 0 _XCacheableGetDataWithStringKey
PUBLIC 3b4a8 0 _scsserver_CacheableGetDataWithStringKey
PUBLIC 3b500 0 CSNamedDataCacheable::GetWithStringKey(unsigned long, char const*, unsigned int*, unsigned int*)
PUBLIC 3b596 0 _CSSetNamedData
PUBLIC 3b636 0 RemoteCacheable::ControlWithStringKey(unsigned long, char const*, unsigned int, unsigned int, unsigned int*, unsigned int*)
PUBLIC 3b6a8 0 _scsclient_CacheableControlWithStringKey
PUBLIC 3b898 0 _XCacheableControlWithStringKey
PUBLIC 3b98c 0 _scsserver_CacheableControlWithStringKey
PUBLIC 3b9f2 0 CSNamedDataCacheable::ControlWithStringKey(unsigned long, char const*, unsigned int, unsigned int, unsigned int*, unsigned int*)
PUBLIC 3bae5 0 SetGetFNumProc
PUBLIC 3bafb 0 SetGetFontNameProc
PUBLIC 3bb0f 0 NewGestaltValue
PUBLIC 3bb29 0 LMSetQDExist
PUBLIC 3bb3c 0 LMGetQDExist
PUBLIC 3bb50 0 _FSCreateFSPackedFSRef
PUBLIC 3bc0a 0 LMSetCurApRefNum
PUBLIC 3bc1e 0 _FSGetFSRefFromPackedFSRef
PUBLIC 3bcf7 0 NextMap
PUBLIC 3bd27 0 MPDeleteCriticalRegion
PUBLIC 3bdd3 0 DeleteOpaqueID
PUBLIC 3be87 0 TSBroadcastCondition
PUBLIC 3be90 0 _MP_DeleteCriticalRegion
PUBLIC 3beb1 0 TSDurationToTimeSpec
PUBLIC 3bf69 0 TSWaitOnConditionTimedRelative
PUBLIC 3bfa1 0 TSWaitOnCondition
PUBLIC 3bfbc 0 CountCollectionItems
PUBLIC 3bfcc 0 DisposeCollection
PUBLIC 3c052 0 EmptyCollection
PUBLIC 3c09c 0 IntlGetInitValues
PUBLIC 3c2ba 0 _FSCopyFSPackedFSRef
PUBLIC 3c2cc 0 _FSDisposeFSPackedFSRef
PUBLIC 3c2f1 0 CharacterByteType
PUBLIC 3c324 0 FWMapScript
PUBLIC 3c37e 0 FontScript
PUBLIC 3c395 0 GetFontFromThePort
PUBLIC 3c3dc 0 FontToScript
PUBLIC 3c460 0 LMGetSysFontFam
PUBLIC 3c48c 0 InitLowMemFonts
PUBLIC 3c523 0 ValidateScriptFontInfo
PUBLIC 3c688 0 GetScriptVariable_FontValue
PUBLIC 3c88e 0 GetFontScript
PUBLIC 3c8dd 0 TUCharacterByteType
PUBLIC 3c982 0 PLstrcpy
PUBLIC 3c9a8 0 FSRenameUnicode
PUBLIC 3c9da 0 PBRenameUnicodeSync
PUBLIC 3cc08 0 BasicRename(VolumeInfo*, long, char const*, long, char const*, unsigned char)
PUBLIC 3cf5c 0 VolFSMount::rename(unsigned long, char const*, unsigned long, char const*, unsigned char)
PUBLIC 3d00e 0 RenameFileRecords(VolumeInfo*, long, char const*, long, char const*)
PUBLIC 3d0ba 0 CopyCollection
PUBLIC 3d2c8 0 ReleaseCollection
PUBLIC 3d2e8 0 GetDateTime
PUBLIC 3d2fb 0 GetTimeSeconds
PUBLIC 3d338 0 UCCompareTextDefault
PUBLIC 3d48e 0 InitUnicodeUtilities
PUBLIC 3d582 0 SetICUCollator
PUBLIC 3d679 0 MapAttributes
PUBLIC 3d80b 0 SetDefaultLocaleString
PUBLIC 3d970 0 UCCompareText
PUBLIC 3de4a 0 CountTaggedCollectionItems
PUBLIC 3deb3 0 _AL_UnflattenAliasRecordFromPtr
PUBLIC 3debc 0 FSMatchAlias
PUBLIC 3df05 0 AL_findByAbsPathOnOtherVolume
PUBLIC 3dff8 0 _AL_FlattenAliasRecordFromPtr
PUBLIC 3e002 0 CleanupThreadGlobals
PUBLIC 3e052 0 SetCollectionDefaultAttributes
PUBLIC 3e077 0 UCConvertCFAbsoluteTimeToUTCDateTime
PUBLIC 3e1e6 0 FSGetForkSize
PUBLIC 3e216 0 FSReadFork
PUBLIC 3e266 0 PBReadForkSync
PUBLIC 3e326 0 BasicRead(FileRecord*, short, long long, unsigned long long*, void*, unsigned long long*)
PUBLIC 3e8e2 0 SetForkPosition(FileRecord*, short, long long, unsigned long long*, unsigned char)
PUBLIC 3ea32 0 SetCurrentForkPosition(FileRecord*, unsigned long long)
PUBLIC 3ea3e 0 ToggleIOCaching(FileRecord*)
PUBLIC 3eaa2 0 UpdateCurrentForkPosition(FileRecord*, unsigned long long)
PUBLIC 3eab0 0 FSResolveAliasFileWithMountFlagsThreadSafe
PUBLIC 3eae9 0 CleanupMPTask
PUBLIC 3ebaf 0 _MP_DamageCriticalRegionsFor
PUBLIC 3ec03 0 ApplyAllOpaqueIDs
PUBLIC 3ec81 0 _MP_DamageCriticalRegionIfHeldby
PUBLIC 3ecce 0 DetermineClassicFolderRedirectionStatus
PUBLIC 3ee2a 0 MyCFPreferencesCopyValueNoCache
PUBLIC 3ef32 0 _IsiDisk
PUBLIC 3ef9c 0 IsiDiskFilesystemMount(char const*, char const*)
PUBLIC 3f0de 0 _FSIsOtherUsersLocalIDisk
PUBLIC 3f10b 0 FSMakeFSRefWithVolumeAndDirID
PUBLIC 3f13a 0 AL_getVolMountInfo
PUBLIC 3f1c4 0 PBGetVolMountInfoSize
PUBLIC 3f25a 0 CarbonInternal_GetMountInfo(VolumeInfo const*, char*, unsigned long*)
PUBLIC 3f370 0 PBGetVolMountInfo
PUBLIC 3f43c 0 AL_findByHomeDirRelative
PUBLIC 3f4fc 0 _FSGetFileVaultHomeDirectoryVRefNum
PUBLIC 3f560 0 _iDiskIsMounted
PUBLIC 3f6a4 0 cfStringToCString
PUBLIC 3f6fc 0 SetCollectionItemInfo
PUBLIC 3f76a 0 SetIndexedCollectionItemInfo
PUBLIC 3f831 0 ValidateScriptFont
PUBLIC 3f8a3 0 Font2RealScript
PUBLIC 3f8ce 0 MoveHHi
PUBLIC 3f8e1 0 SetScriptManagerVariable
PUBLIC 3fade 0 FixRound
PUBLIC 3fb04 0 POSIXMount::autoRemountVolume()
PUBLIC 3fc80 0 FilterReleventFilesFromDirectory
PUBLIC 40136 0 FilterReleventBundlesFromDirectory
PUBLIC 40415 0 CreateBundlesFromDirectoryArray
PUBLIC 40520 0 FindNextComponent
PUBLIC 40562 0 FindNextComponentInternal(ComponentRecord*, ComponentDescription*)
PUBLIC 405f6 0 lazyInitComponentManager
PUBLIC 4067c 0 InitComponentManager
PUBLIC 40704 0 GrowRegisteredComponentTable()
PUBLIC 4081c 0 registerSystemComponents
PUBLIC 409be 0 _ClientGetDiscoveredComponentArray(DiscoveredComponentArray**, DiscoveredComponentArray**, DiscoveredComponentArray**)
PUBLIC 40cca 0 scGetServerOptions
PUBLIC 40d72 0 _CreateComponentCacheable
PUBLIC 40da0 0 SCComponentsCacheable::SCComponentsCacheable(char const*)
PUBLIC 40e06 0 SCComponentsCacheable::Get(unsigned long, unsigned long, unsigned int*, unsigned int*)
PUBLIC 40e6c 0 initializeComponentLists
PUBLIC 40ef0 0 initializeOneArray(DiscoveredArray**, unsigned long, unsigned long)
PUBLIC 40fa8 0 searchForComponents
PUBLIC 41560 0 RemoteCacheable::ControlWithDomains(unsigned long, unsigned long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
PUBLIC 41643 0 _scsclient_CacheableControlWithDomains
PUBLIC 41826 0 _XCacheableControlWithDomains
PUBLIC 41974 0 _scsserver_CacheableControlWithDomains
PUBLIC 41a10 0 SCComponentsCacheable::ControlWithDomains(unsigned long, unsigned long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
PUBLIC 41b10 0 freeDiscoveredHolder
PUBLIC 41b24 0 freeComponentLists(DiscoveredHolder*)
PUBLIC 41b6e 0 SCComponentsCacheable::GetWithDomains(unsigned long, unsigned long, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
PUBLIC 41ce8 0 InitializeOrUpdateDomainArray
PUBLIC 41dbc 0 FSRead
PUBLIC 41e1a 0 PBReadSync
PUBLIC 41e8c 0 GetForkPosition(FileRecord*, unsigned long long*)
PUBLIC 41f08 0 neSetString(HFSUniStr255*, HFSUniStr255 const&)
PUBLIC 41f3e 0 getNextFileReference(DiscoveredHolder*, FSRef const*)
PUBLIC 41fce 0 growIfNecessary(DiscoveredArray**)
PUBLIC 42148 0 preRegisterSystemComponent
PUBLIC 422a8 0 freeOneArray(DiscoveredArray*)
PUBLIC 422f6 0 RegisterComponentResourcePtr
PUBLIC 4255e 0 RegisterComponent
PUBLIC 42754 0 BumpTypeModificationSeed(unsigned long)
PUBLIC 427fc 0 RegisteredComponentPointerToComponentID(RegisteredComponent*)
PUBLIC 4289e 0 ComponentIDtoRegisteredComponentPointer(ComponentRecord*)
PUBLIC 42904 0 CSMemEmptyHandle
PUBLIC 4299c 0 DestroyOlder(RegisteredComponent*, long)
PUBLIC 42a7a 0 getComponentVersion(RegisteredComponent*)
PUBLIC 42b70 0 ValidComponent
PUBLIC 42bdc 0 ValidComponentNoSetup(ComponentRecord*)
PUBLIC 42c32 0 ComponentRegistryIDToFileReference
PUBLIC 42d80 0 _ClientGetDiscoveredFileReferenceArray(DiscoveredFileReferenceArray**, DiscoveredFileReferenceArray**, DiscoveredFileReferenceArray**)
PUBLIC 42eaa 0 RemoteCacheable::GetWithDomains(unsigned long, unsigned long, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
PUBLIC 42f60 0 _scsclient_CacheableGetDataWithDomains
PUBLIC 430de 0 _XCacheableGetDataWithDomains
PUBLIC 431f6 0 _scsserver_CacheableGetDataWithDomains
PUBLIC 43268 0 UnflattenFSRefs(DiscoveredFileReferenceArray*, FSRef**)
PUBLIC 432dc 0 AddComponentFSRef
PUBLIC 43546 0 RegisterCFBundleFile
PUBLIC 43582 0 UnregisterComponentInternal(ComponentRecord*)
PUBLIC 43786 0 RemoveComponentResFile
PUBLIC 43898 0 processSerialKissers
PUBLIC 439a6 0 releaseOrFreeDiscoveredComponentArray
PUBLIC 439b4 0 FindMatchingComponent(ComponentDescription*, RegisteredComponent*)
PUBLIC 43a20 0 IsAliasToNotNativeOrMissingComponent(RegisteredComponent*)
PUBLIC 43a4c 0 GetComponentInfo
PUBLIC 43b12 0 GetComponentInfoPrivate(ComponentRecord*, RegisteredComponent*, char**, char**, char**)
PUBLIC 43f92 0 OpenMappedComponentFile(ComponentRecord*, CMCombinedResRef*, PerOpenedResFile**)
PUBLIC 440b0 0 _firsttime_cf_openResourceFork(rtFile*, CMCombinedResRef*)
PUBLIC 440e8 0 realizeBundle(rtFile*)
PUBLIC 441f6 0 _cf_openResourceFork(rtFile*, CMCombinedResRef*)
PUBLIC 44216 0 CMOpenBundleResourceFilesMapped
PUBLIC 44608 0 CMOpenResourcesMapped(__CFURL const*, unsigned char)
PUBLIC 44692 0 CMGetOneResource
PUBLIC 44712 0 CloseMappedComponentResFile(CMCombinedResRef*, short)
PUBLIC 44832 0 CSMemMunger
PUBLIC 44892 0 MungeGuts
PUBLIC 44b8c 0 _cf_closeResourceFork(rtFile*, CMCombinedResRef*)
PUBLIC 44ba2 0 CMCloseBundleResourceFilesMapped
PUBLIC 44bd2 0 RMCloseResourceFile
PUBLIC 44c39 0 ResError
PUBLIC 44c47 0 ResErrorCommon
PUBLIC 44c65 0 StandardClearExit
PUBLIC 44c8e 0 HandToXHand(char**, char**)
PUBLIC 44d17 0 CSMemPtrAndHand
PUBLIC 44d9b 0 SetResLoad
PUBLIC 44dcc 0 SetScriptVariable
PUBLIC 45116 0 SetCachedItlbValue
PUBLIC 4515a 0 _CopyComponentBundleIdentifier
PUBLIC 45206 0 _GetComponentFSRef
PUBLIC 4527e 0 GetPtrSize
PUBLIC 4529f 0 CSMemGetPtrSize
PUBLIC 4530d 0 LMSetKeyboardSwitchingState
PUBLIC 45322 0 _FSIsItemHomeDirectory
PUBLIC 453dc 0 _FSGetVolumeDeviceTypeAndBackingStoreVolume
PUBLIC 4543a 0 PBDTGetPath
PUBLIC 45469 0 PBDTOpenInform
PUBLIC 457f1 0 PBDTFindEntryFromVRefNum
PUBLIC 4585b 0 PBDTLocked
PUBLIC 45898 0 PBDTSupportIOCTLs
PUBLIC 4591c 0 DTDBInit
PUBLIC 459a0 0 DTDBOpen_rpc
PUBLIC 45ae2 0 FSpOpenDF
PUBLIC 45b30 0 PBHOpenDFSync
PUBLIC 45b46 0 PBHOpenCommon(HParamBlockRec*, unsigned char)
PUBLIC 45d04 0 FindNamedFileRecordWritable(short, unsigned long, char const*, char const*, OpenFileInfo*)
PUBLIC 45d86 0 SetFPos
PUBLIC 45dae 0 PBSetFPosSync
PUBLIC 45e2e 0 _FSCreateRelativeFSRef
PUBLIC 45ec4 0 GetTaggedCollectionItem
PUBLIC 45f4b 0 GetSysDirection
PUBLIC 45f5d 0 CSCopyUserName
PUBLIC 45fdc 0 CreateTextToUnicodeInfoNoInit
PUBLIC 45fe7 0 CreateTextToUnicodeInfo
PUBLIC 45ff2 0 DisposeTextToUnicodeInfoNoInit
PUBLIC 45ffd 0 DisposeTextToUnicodeInfo
PUBLIC 46008 0 DisposeTextToUnicodeInfoImplementation
PUBLIC 46050 0 ConvertFromTextToUnicodeNoInit
PUBLIC 4605b 0 ConvertFromTextToUnicode
PUBLIC 46067 0 ConvertFromTextToUnicodeImplementation
PUBLIC 46aab 0 ResetTextToUnicodeInfo
PUBLIC 46abb 0 UmapBCharToUChars
PUBLIC 46e24 0 UmapLookupToUnicode
PUBLIC 471e2 0 ConvertAllUTF32toUTF16
PUBLIC 47253 0 UCCreateTextBreakLocator
PUBLIC 474ee 0 LocaleLoadPlugIn
PUBLIC 4777c 0 ScanLocalePlugins
PUBLIC 47d75 0 AddRangeToArray
PUBLIC 47de6 0 AddLocalePlugin
PUBLIC 47e54 0 AddPluginToArray
PUBLIC 47eb8 0 LocaleRefGetPartString
PUBLIC 4803a 0 LocaleRefOrNULLToTagEntryPtr
PUBLIC 480be 0 INIT_Locales
PUBLIC 4819b 0 LocaleRefAddToList
PUBLIC 482af 0 Include_ICU_Locale
PUBLIC 483a5 0 LocaleRefFromLocaleString
PUBLIC 48495 0 LocaleRefFromLangOrRegionCode
PUBLIC 4863b 0 LocaleRefToTagEntryPtr
PUBLIC 48664 0 UCFindTextBreak
PUBLIC 48b50 0 LocaleInvokePlugIn
PUBLIC 49072 0 didComponentDirectoryChange
PUBLIC 49191 0 UCKeyTranslate
PUBLIC 496e8 0 UCKeyboardLayoutStringMax
PUBLIC 4983f 0 LMGetKeyCache
PUBLIC 49890 0 LMSetKeyCache
PUBLIC 498e6 0 RevertTextEncodingToScriptInfo
PUBLIC 498f2 0 RevertTextEncodingToScriptInfoImplementation
PUBLIC 49ade 0 _FSGetObjectAccess
PUBLIC 49bb4 0 FSMount::getacuser(unsigned long, char const*, long*, long*, long*)
PUBLIC 49c4a 0 FSWriteFork
PUBLIC 49c9a 0 PBWriteForkSync
PUBLIC 49d4e 0 BasicWrite(FileRecord*, short, long long, unsigned long long*, void*, unsigned long long*)
PUBLIC 49f44 0 IsFileModifiable(FileRecord*)
PUBLIC 49f58 0 BasicWriteSetup(FileRecord*, short, long long, unsigned long long, unsigned long long*)
PUBLIC 4a10e 0 MPDeleteQueue
PUBLIC 4a1e6 0 DeclineVolumeNotification
PUBLIC 4a20c 0 FileIDTreeStorage_FreeEntry
PUBLIC 4a3df 0 GetVolumeFileSystemID
PUBLIC 4a43f 0 VolumeIsRemoteForTrashPurposes
PUBLIC 4a488 0 DisposeStackList
PUBLIC 4a4a2 0 FoldersCacheable::~FoldersCacheable()
PUBLIC 4a4e8 0 SCCacheable::~SCCacheable()
PUBLIC 4a500 0 SCComponentsCacheable::~SCComponentsCacheable()
PUBLIC 4a558 0 RMDisposeMappedFileRef
PUBLIC 4a582 0 FNUnsubscribe
PUBLIC 4a5e4 0 _CSReleaseNamedData
PUBLIC 4a650 0 _SameIOKitDevice
PUBLIC 4a69e 0 _GetWholeDeviceForBSDName
PUBLIC 4a76c 0 GetCurrentUserIDAsString
PUBLIC 4a7de 0 CSStoreCreateMutable
PUBLIC 4a954 0 CSStoreAddTable
PUBLIC 4ab72 0 CSStoreGetMaxAvailableUnitLength
PUBLIC 4ac02 0 CSStoreReserveCapacity
PUBLIC 4ad2a 0 _CSStoreTableIDIsValid(__CSStore const*, unsigned long)
PUBLIC 4ada9 0 RMFSOpenResourceFile
PUBLIC 4ae7a 0 FSNewMap
PUBLIC 4b0c2 0 FSSetCatalogInfo
PUBLIC 4b0ea 0 PBSetCatalogInfoSync
PUBLIC 4b288 0 ConvertFSCatalogInfoToFSAttributes(bool, unsigned long, FSCatalogInfo const*, FSAttributeInfo*)
PUBLIC 4b428 0 CreateUnicodeToTextInfo
PUBLIC 4b431 0 ConvertFromUnicodeToNormalized
PUBLIC 4c1a3 0 GetUnicodeInputChar
PUBLIC 4c305 0 DecomposeUnicode
PUBLIC 4c466 0 UprpLookupCombiningClass
PUBLIC 4c4c2 0 CopyElementToOutput
PUBLIC 4c548 0 POSIXMount::startbulk(unsigned long, char const*)
PUBLIC 4c5ce 0 POSIXMount::getattrsbulk(void*, unsigned long, unsigned long*, unsigned long, unsigned long, FSAttributeInfo*, unsigned char*)
PUBLIC 4c94a 0 GetIndexedDirectoryItem(VolumeInfo*, unsigned long, unsigned long, unsigned long, char*, unsigned char*)
PUBLIC 4d2e8 0 IsResourceForkName(int, char*)
PUBLIC 4d33a 0 POSIXMount::endbulk(void*)
PUBLIC 4d351 0 FSNodeEntry_BackwardIndexLookup
PUBLIC 4d39a 0 FSNodeEntry_ForwardEntryLookup
PUBLIC 4d43c 0 DCBlock_Release(DCBlock*)
PUBLIC 4d47c 0 FSNodeEntry_ForwardIndexLookup
PUBLIC 4d4c4 0 FSNodeEntry_BackwardEntryLookup
PUBLIC 4d562 0 POSIXMount::_openfork(char const*, unsigned char, unsigned long, unsigned short, _filesec*, int*, int*, FSOpenForkInfo*)
PUBLIC 4d6c8 0 GetResourceForkSizeInfo(int, unsigned long long*, unsigned long long*)
PUBLIC 4d72c 0 GetAppleDoubleOffsetLength(int, unsigned long*, unsigned long*, unsigned long)
PUBLIC 4d768 0 fetchAppleDoubleDataIntoBuffer(int, unsigned long*, unsigned long*, unsigned long, char*, unsigned long)
PUBLIC 4d8ac 0 NewUFSMacFileRefNum()
PUBLIC 4d92b 0 RMGetResourceCountByFileRef
PUBLIC 4d98e 0 RMGetResourceByFileRef
PUBLIC 4da12 0 _FSCompareAliasRecords
PUBLIC 4dc3b 0 RMCloseResourceFileByFileRef
PUBLIC 4dd13 0 RMUpdateResourceFileByFileRef
PUBLIC 4dd31 0 UpdateTheFile
PUBLIC 4e1d6 0 IsMapReadOnly
PUBLIC 4e1f7 0 GetResourceCount
PUBLIC 4e264 0 AllocateMemoryForResource
PUBLIC 4e2d3 0 ComputeResourceSize
PUBLIC 4e3e2 0 SizeOnDisk
PUBLIC 4e421 0 ReadFromMap
PUBLIC 4e461 0 PBReadSyncAndBuffer
PUBLIC 4e689 0 UpdateSizeCacheData
PUBLIC 4e791 0 ReadInResource
PUBLIC 4e80f 0 RMReleaseResourceByFileRef
PUBLIC 4e886 0 ScanMapForHandle
PUBLIC 4e93c 0 RMGetIndexedResourceByFileRef
PUBLIC 4ea28 0 FileIDTreeServer_FSObjectChangedHook
PUBLIC 4ecd1 0 FileIDTree_ProcessSucceededTransactionInternal
PUBLIC 4ee23 0 FileIDTree_FSObjectChangedInternal
PUBLIC 4f3d7 0 RemoveTransactionRecord
PUBLIC 4f43a 0 FileIDTreeGetEntryValence
PUBLIC 4f505 0 FileIDTreeGetEntryValenceInternal
PUBLIC 4f599 0 FileIDTreeSetEntryValence
PUBLIC 4f753 0 FileIDTreeSetEntryValenceInternal
PUBLIC 4f8c2 0 FileIDTree_SetEntryValence_rpc
PUBLIC 4f9d7 0 _XFileIDTree_SetEntryValence_rpc
PUBLIC 4fa8c 0 ServerFileIDTree_SetEntryValence_rpc
PUBLIC 4fb15 0 UCKeyEmitCharOrSequence
PUBLIC 4fb84 0 UCKeyEmitStateTerminator
PUBLIC 4fbf8 0 FSSetFolderFlags
PUBLIC 4fc84 0 Get1Resource
PUBLIC 4fcaf 0 CloseResFile
PUBLIC 4fcbf 0 CloseResFileCommon
PUBLIC 4ffd1 0 InvalidateResourceManagerReadCache
PUBLIC 50026 0 UpdateResFile
PUBLIC 50038 0 UpdateResFileCommon
PUBLIC 5014f 0 DisposeFileMapInfoRecord
PUBLIC 501a7 0 ReleaseExternalHandleFromPool
PUBLIC 501b8 0 GetComponentTypeModSeed
PUBLIC 50225 0 GetString
PUBLIC 50242 0 SetDefaultComponent
PUBLIC 5037d 0 ConvertUTCToLocalDateTime
PUBLIC 5040f 0 InitUTCUtils
PUBLIC 5048d 0 ConvertUTCToLocalTime
PUBLIC 5051a 0 UCConvertUTCDateTimeToCFAbsoluteTime
PUBLIC 505d3 0 FSCopyAliasInfo
PUBLIC 50635 0 PLstrcmp
PUBLIC 506e7 0 X2Fix
PUBLIC 50809 0 Fix2X
PUBLIC 5082c 0 IntlSetInitValues
PUBLIC 5094b 0 FSOpenResourceFile
PUBLIC 50a36 0 InitSizeCacheForFile
PUBLIC 50b7e 0 GetIndexedCollectionItem
PUBLIC 50bca 0 GetTaggedCollectionItemInfo
PUBLIC 50c70 0 GetIndexedCollectionItemInfo
PUBLIC 50d0a 0 RemoveIndexedCollectionItem
PUBLIC 50d4b 0 GetTopResourceFile
PUBLIC 50da6 0 GetNextResourceFile
PUBLIC 50e27 0 CloseResourceFork
PUBLIC 50e52 0 InvalidateSizeCacheDataForFile
PUBLIC 50ece 0 PBGetFCBInfoSync
PUBLIC 51066 0 FSWrite
PUBLIC 510c6 0 PBWriteSync
PUBLIC 511ca 0 CalculateNewEndOfFork(FileRecord*, short, long long, unsigned long long, unsigned long long*)
PUBLIC 51280 0 SetForkLength(FileRecord*, unsigned char, unsigned long long, unsigned long long*)
PUBLIC 51418 0 TempNewHandle
PUBLIC 51441 0 LMGetCurApRefNum
PUBLIC 51452 0 EntryToType
PUBLIC 514ea 0 NextResource
PUBLIC 515ce 0 HomeResFile
PUBLIC 515e2 0 HomeResFileCommon
PUBLIC 51686 0 FSGetForkCBInfo
PUBLIC 51700 0 PBGetForkCBInfoSync
PUBLIC 51908 0 FileRecordFlagsToFCBFlags(unsigned long)
PUBLIC 51960 0 AL_UnicodeFileNameSuffixMatches
PUBLIC 519ea 0 FSOpenResFile
PUBLIC 51a52 0 OpenADefaultComponent
PUBLIC 51b2e 0 OpenAComponent
PUBLIC 51d4c 0 CSGetComponentsThreadMode
PUBLIC 51d74 0 LoadComponent
PUBLIC 51f12 0 _firsttime_cf_lookupLibraryEntry(rtFile*, RegisteredComponent*)
PUBLIC 51f48 0 _cf_lookupLibraryEntry(rtFile*, RegisteredComponent*)
PUBLIC 51fe6 0 getRegisteredComponentEntryPointName
PUBLIC 520c0 0 loadComponentResource(RegisteredComponent*, unsigned long, short, char***, CMCombinedResRef*, unsigned char)
PUBLIC 524fa 0 CSMemHandToHand
PUBLIC 52572 0 GrowRegisteredComponentInstanceTable()
PUBLIC 5265c 0 FindNextComponentInstance(RegisteredComponentInstance*, RegisteredComponent*)
PUBLIC 52720 0 ComponentInstancePointerToComponentInstanceID(RegisteredComponentInstance*)
PUBLIC 527af 0 CallComponentOpen
PUBLIC 527de 0 CallComponentDispatch
PUBLIC 52804 0 CallComponent
PUBLIC 528f0 0 CallComponentFunctionWithStorageProcInfo
PUBLIC 5291a 0 CallComponentFunctionCommon
PUBLIC 52dac 0 SetComponentInstanceStorage
PUBLIC 52dd4 0 ValidComponentInstance
PUBLIC 52e70 0 GetComponentResource
PUBLIC 52fe4 0 PtrAndHand
PUBLIC 5301a 0 doResolveComponentAlias(RegisteredComponent*, CMCombinedResRef*)
PUBLIC 530f0 0 SetEOF
PUBLIC 53114 0 PBSetEOFSync
PUBLIC 5314e 0 PBSetForkSizeSync
PUBLIC 531f8 0 PBFlushFileSync
PUBLIC 53280 0 SetFileRecordFlags(short, unsigned long)
PUBLIC 532d0 0 PBFlushVolSync
PUBLIC 533b6 0 HandToHand
PUBLIC 533de 0 GetComponentPublicResourceList
PUBLIC 53722 0 getUpstreamSymbols()
PUBLIC 53826 0 getUltimateFile(RegisteredComponent*)
PUBLIC 538ea 0 internalGetComponentPublicResource(RegisteredComponent*, unsigned long, short, char***, CMCombinedResRef*)
PUBLIC 53b6c 0 ResolveComponentAlias
PUBLIC 53ba8 0 ResolveComponentAliasInternal(ComponentRecord*)
PUBLIC 53c04 0 CloseComponent
PUBLIC 53c42 0 CloseComponentInternal(ComponentInstanceRecord*)
PUBLIC 53d50 0 CallComponentClose
PUBLIC 53d7e 0 UnloadComponent
PUBLIC 53e14 0 _generic_disposeLibraryEntry(rtFile*, void*)
PUBLIC 53e1a 0 SetA5
PUBLIC 53e24 0 GetTextEncodingName
PUBLIC 53e35 0 GetTextEncodingNameImplementation
PUBLIC 54090 0 GetTextEncodingNameString
PUBLIC 54344 0 TECGetTextEncodingInternetName
PUBLIC 543e8 0 TECResolveTextEncoding
PUBLIC 54402 0 Plugin_GetTextEncodingInternetName
PUBLIC 544fc 0 FSpCreateResFile
PUBLIC 54615 0 HCreateResFile
PUBLIC 54640 0 CreateResFileCommon
PUBLIC 5474c 0 FSCreateResourceFork
PUBLIC 54832 0 FSCreateFork
PUBLIC 54858 0 PBCreateForkSync
PUBLIC 549c3 0 FSpOpenResFile
PUBLIC 549f8 0 HOpenResFile
PUBLIC 54a2d 0 OpenResFileCommon
PUBLIC 54afa 0 AddResource
PUBLIC 54b0c 0 AddResourceCommon
PUBLIC 54d1f 0 CheckGrow
PUBLIC 54dbb 0 GrowFile
PUBLIC 54e21 0 SetResourceEOF
PUBLIC 54e59 0 AddNewRef
PUBLIC 55073 0 UpdateOverriddenChangedBits
PUBLIC 550c8 0 TypeScan
PUBLIC 5512a 0 MoveNames
PUBLIC 551b6 0 ResizeMap
PUBLIC 551db 0 UpdateTypeOffsets
PUBLIC 5520d 0 HSetRBit
PUBLIC 5522f 0 AddName
PUBLIC 552db 0 AllocRes
PUBLIC 55364 0 MaxBlock
PUBLIC 5537e 0 FreeMem
PUBLIC 55396 0 DoActualCompact
PUBLIC 554cb 0 CompressFromMemory
PUBLIC 556dd 0 PartWrite
PUBLIC 5575d 0 SetNewResourceLocation
PUBLIC 5577d 0 WriteData
PUBLIC 557c2 0 FSpSetFInfo
PUBLIC 55842 0 PBHSetFInfoSync
PUBLIC 55988 0 FNNotify
PUBLIC 5599a 0 _FN_PostNotification(unsigned long, unsigned long, FSRef const*)
PUBLIC 55a19 0 GetDiskFragment
PUBLIC 55a25 0 CCFM_InitializeCrutchCFM
PUBLIC 55a2f 0 CCFM_FSGetFileRef
PUBLIC 55a36 0 MPProcessors
PUBLIC 55a9f 0 ThreadBeginCritical
PUBLIC 55ac3 0 ThreadEndCritical
PUBLIC 55afb 0 FindSymbol
PUBLIC 55b05 0 MakeDataExecutable
PUBLIC 55b10 0 MakeExecutable
PUBLIC 55b28 0 ReleaseResource
PUBLIC 55b32 0 ReleaseResourceCommon
PUBLIC 55c20 0 BitTst
PUBLIC 55c50 0 sysctlbynameuint64
PUBLIC 55cbe 0 Munger
PUBLIC 55d1a 0 HOpenDF
PUBLIC 55d62 0 GetVCBByVolumeName(unsigned char*)
PUBLIC 55f98 0 PStringToUTF8
PUBLIC 55fbc 0 YieldToAnyThread
PUBLIC 55fd3 0 YieldToThread
PUBLIC 561fc 0 HPurge
PUBLIC 56211 0 TECSetBasicOptions
PUBLIC 5626e 0 TECFlushText
PUBLIC 562e6 0 FSNewAlias
PUBLIC 5630d 0 AL_newAliasCommon
PUBLIC 56395 0 AL_fillAlias
PUBLIC 5686c 0 UTF8ToVolumeName
PUBLIC 56891 0 AL_CreateVersion2VariableDataStructure
PUBLIC 5713b 0 ALI_GetDirSpecNameFromID
PUBLIC 571d5 0 AL_copyPString
PUBLIC 571fc 0 ALI_ConvertUTCDateTimeToOldStyleDate
PUBLIC 57239 0 FillParseTable
PUBLIC 572ba 0 TUFillParseTable
PUBLIC 5733c 0 OpenComponent
PUBLIC 5735a 0 CallComponentRegister
PUBLIC 57382 0 GetComponentRefcon
PUBLIC 5739c 0 SetComponentRefcon
PUBLIC 573bc 0 CountComponentInstances
PUBLIC 573d8 0 ReserveMem
PUBLIC 573ec 0 OpenDefaultComponent
PUBLIC 57413 0 NewComponentRoutineUPP
PUBLIC 5741e 0 DelegateComponentCall
PUBLIC 57435 0 _Gestalt_NativeCPUType
PUBLIC 57459 0 native_cpu_type
PUBLIC 57520 0 InsTime
PUBLIC 57535 0 InstallTimeTask
PUBLIC 57549 0 UnsignedFixedMulDiv
PUBLIC 57679 0 RmvTime
PUBLIC 5768e 0 RemoveTimeTask
PUBLIC 5774c 0 PBHGetVInfoSync
PUBLIC 577cc 0 HCreate
PUBLIC 57876 0 HRename
PUBLIC 578ac 0 PBHRenameSync
PUBLIC 579a9 0 TECDisposeConverter
PUBLIC 57a91 0 _dictionaryContainsValue
PUBLIC 57aeb 0 DateToSeconds
PUBLIC 57bc6 0 PBDTGetIconSync
PUBLIC 57d24 0 PBDTFindEntryFromDBRefNum
PUBLIC 57d8e 0 DTDBGetIcon_rpc
PUBLIC 57faa 0 FSPathMakeRefWithOptions
PUBLIC 57fda 0 FSGetHFSUniStrFromString
PUBLIC 5802c 0 FNNotifyByPath
PUBLIC 58072 0 LMGetSysFontSize
PUBLIC 5809d 0 FixRatio
PUBLIC 5818f 0 CCFM_IdentifyApplication
PUBLIC 58199 0 CCFM_LaunchApplication
PUBLIC 581a4 0 ALI_ConvertPStringToUnicodeUsingDefaultFSEncoding
PUBLIC 58216 0 ConvertLocalToUTCDateTime
PUBLIC 582a6 0 ConvertLocalTimeToUTC
PUBLIC 58345 0 AL_findByRelPath
PUBLIC 585f8 0 FilterThisMatch
PUBLIC 58872 0 AL_fillRelativeInfo
PUBLIC 5893b 0 FSResourceFileAlreadyOpen
PUBLIC 58a98 0 RMOpenResourceFile
PUBLIC 58aac 0 RMOpenResourceFileCommon
PUBLIC 58b39 0 GetCurrentThread
PUBLIC 58b56 0 LMGetCurApName
PUBLIC 58b69 0 GetIndString
PUBLIC 58bea 0 FSIsAliasFile
PUBLIC 58c92 0 MoreMasterPointers
PUBLIC 58ca8 0 LMGetSysFontFamNoInit
PUBLIC 58ccf 0 UppercaseText
PUBLIC 58cef 0 CaseConversionEngine
PUBLIC 58f48 0 IUGetItlScript
PUBLIC 58f72 0 LMGetApFontID
PUBLIC 58f9c 0 LoadResource
PUBLIC 58fb9 0 LoadResourceCommon
PUBLIC 590b3 0 GetResAttrs
PUBLIC 590c7 0 GetResAttrsCommon
PUBLIC 5915d 0 CSMemReallocateHandle
PUBLIC 591d8 0 LMGetApFontIDNoInit
PUBLIC 591fe 0 _FSGetVolumeByName
PUBLIC 592de 0 GetVCBByUTF8VolumeName(unsigned char const*)
PUBLIC 5938b 0 GetSharedLibrary
PUBLIC 59398 0 Count1Resources
PUBLIC 593b7 0 CountResourcesCommon
PUBLIC 59448 0 CacheResource
PUBLIC 596f2 0 SkipToEntry
PUBLIC 5971e 0 Get1IndResource
PUBLIC 5974c 0 GetIndexedResourceCommon
PUBLIC 59836 0 GetResInfo
PUBLIC 59842 0 GetResInfoCommon
PUBLIC 59958 0 Get1NamedResource
PUBLIC 59982 0 GetNamedResourceCommon
PUBLIC 59b05 0 WalkMaps
PUBLIC 59b58 0 ScanMapForType
PUBLIC 59bc0 0 WalkTypes
PUBLIC 59c4c 0 ScanForType
PUBLIC 59c73 0 WalkResourceEntries
PUBLIC 59cfa 0 ScanEntriesForName
PUBLIC 59d72 0 GetFPos
PUBLIC 59d98 0 PBGetFPosSync
PUBLIC 59ddc 0 PBGetForkPositionSync
PUBLIC 59e36 0 FSpExchangeFiles
PUBLIC 59e8a 0 PBExchangeFilesSync
PUBLIC 59ff0 0 FSMount::exchangedata(unsigned long, char const*, unsigned long, char const*)
PUBLIC 5a206 0 IsVolumeModifiable(VolumeInfo*)
PUBLIC 5a224 0 ExchangeFileRecords(VolumeInfo*, unsigned long, char const*, unsigned long, unsigned long, char const*, unsigned long)
PUBLIC 5a2fa 0 FlushVol
PUBLIC 5a31e 0 RecoverHandle
PUBLIC 5a35e 0 CSMemRecoverHandle
PUBLIC 5a394 0 FindHandleForPtrFromPool
PUBLIC 5a40b 0 NewAlias
PUBLIC 5a488 0 PtrToXHand
PUBLIC 5a4bb 0 CSMemPtrToXHand
PUBLIC 5a51b 0 HandAndHand
PUBLIC 5a55e 0 LowercaseText
PUBLIC 5a580 0 FindMapHandle
PUBLIC 5a69e 0 FSCreateFileUnicode
PUBLIC 5a6dc 0 PBCreateFileUnicodeSync
PUBLIC 5a740 0 CreateObjectCommon(FSMount*, FSRefParam*, unsigned char)
PUBLIC 5abaf 0 ResolveAliasFile
PUBLIC 5abe3 0 ResolveAliasFileWithMountFlags
PUBLIC 5acb9 0 NewString
PUBLIC 5ace9 0 HLockHi
PUBLIC 5acf3 0 SetPtrSize
PUBLIC 5ad18 0 TECGetInfo
PUBLIC 5ad58 0 TECGetInfoImplementation
PUBLIC 5adf1 0 SetFallbackUnicodeToText
PUBLIC 5adfd 0 DoSetFallbackUnicodeToText
PUBLIC 5ae43 0 SecondsToDate
PUBLIC 5af86 0 ReadLocation
PUBLIC 5b133 0 GetTime
PUBLIC 5b159 0 CreateUnicodeToTextRunInfoByEncoding
PUBLIC 5b1a7 0 CreateUnicodeToTextRunInfoHub
PUBLIC 5b3d5 0 GetInstalledScriptsPtr
PUBLIC 5b413 0 LookupInstalledScripts
PUBLIC 5b694 0 AddEncodingVariantsFromBase
PUBLIC 5b740 0 GetTextEncodingFontname
PUBLIC 5b782 0 CreateNewContext
PUBLIC 5b7d3 0 ResetUnicodeToTextRunInfo
PUBLIC 5b806 0 PrepareUnicodeEncodingForMapping
PUBLIC 5b861 0 NewUnicodeToTextFallbackUPP
PUBLIC 5b86a 0 SetFallbackUnicodeToTextRun
PUBLIC 5b8ce 0 ConvertFromUnicodeToTextRun
PUBLIC 5b9b4 0 ConvertFromUnicodeToTextRunImplementation
PUBLIC 5d0ea 0 LookupUmapBCharOrOffset
PUBLIC 5d295 0 StripDiacriticsFromChar
PUBLIC 5d2c1 0 DoesFontnameMatchScript
PUBLIC 5d33f 0 RelString
PUBLIC 5d37e 0 ScriptOrder
PUBLIC 5d449 0 LMGetScriptMapPtr
PUBLIC 5d473 0 IUTextOrderSys
PUBLIC 5d511 0 LangScriptOrder
PUBLIC 5d611 0 CompareText
PUBLIC 5d656 0 HandleItl2Resource
PUBLIC 5d738 0 LoadItl2Handle
PUBLIC 5d7a6 0 HandleCollateTable
PUBLIC 5ded7 0 TextOrder
PUBLIC 5df78 0 FixDiv
PUBLIC 5e05d 0 NewExceptionHandlerUPP
PUBLIC 5e066 0 InstallExceptionHandler
PUBLIC 5e132 0 GetVolumeEncodingsBitmap(unsigned long, unsigned long long*)
PUBLIC 5e174 0 VolFSMount::encodingsBitmap(unsigned long long*)
PUBLIC 5e282 0 GetNextTextEncoding(unsigned long long*, unsigned long*)
PUBLIC 5e336 0 UpdateTextEncodingBitmapForEncoding(unsigned long long*, unsigned long)
PUBLIC 5e3b3 0 LookupUmapUCharOrOffset
PUBLIC 5e5a3 0 WideMultiply
PUBLIC 5e611 0 WideAdd
PUBLIC 5e632 0 GetComponentPublicResource
PUBLIC 5e6e0 0 GetComponentInstanceError
PUBLIC 5e715 0 CallComponentTarget
PUBLIC 5e744 0 NewHandleFromExternalPtr
PUBLIC 5e790 0 CallComponentGetPublicResource
PUBLIC 5e7ca 0 ComponentSetTarget
PUBLIC 5e7f8 0 CaptureComponent
PUBLIC 5e86d 0 _Gestalt_ProcClkSpeed
PUBLIC 5e8bd 0 maxCPUFrequency
PUBLIC 5e94e 0 GetComponentInstanceStorage
PUBLIC 5e971 0 CallComponentCanDo
PUBLIC 5e9a2 0 InvokeComponentMPWorkFunctionUPP
PUBLIC 5e9bc 0 GetResFileAttrs
PUBLIC 5e9d2 0 GetResFileAttrsCommon
PUBLIC 5ea6d 0 GetThreadCurrentTaskRef
PUBLIC 5eaa4 0 FSSetForkPosition
PUBLIC 5ead2 0 PBSetForkPositionSync
PUBLIC 5eb57 0 SetThreadSwitcher
PUBLIC 5eb9e 0 LookupComposTrieTwo
PUBLIC 5ebfa 0 Fix2Long
PUBLIC 5ec0a 0 GetDefaultDirectoryID(short)
PUBLIC 5ec34 0 IsHandleValid
PUBLIC 5ec95 0 IsPointerValid
PUBLIC 5ecb4 0 NewThread
PUBLIC 5eea5 0 CooperativeThread
PUBLIC 5f009 0 SetThreadGlobalsAreCooperative
PUBLIC 5f031 0 SetThreadStateEndCritical
PUBLIC 5f0c1 0 SetThreadState
PUBLIC 5f169 0 InvokeThreadSwitchUPP
PUBLIC 5f183 0 CallThreadInitHooks
PUBLIC 5f1a3 0 InvokeThreadEntryUPP
PUBLIC 5f1b6 0 FSGetForkPosition
PUBLIC 5f1e6 0 FSFlushFork
PUBLIC 5f202 0 PBFlushForkSync
PUBLIC 5f224 0 DisposeThread
PUBLIC 5f373 0 PassSchedulingToken
PUBLIC 5f419 0 ReleaseThreadEntryAndDie
PUBLIC 5f4b9 0 TSExit
PUBLIC 5f4cd 0 StringToNum
PUBLIC 5f54f 0 InsertResourceFile
PUBLIC 5f74d 0 GetResourceSizeOnDisk
PUBLIC 5f756 0 SizeResourceCommon
PUBLIC 5f843 0 GetMemFragment
PUBLIC 5f84f 0 IdenticalText
PUBLIC 5f893 0 WideWideDivide
PUBLIC 5f9d0 0 CreateUnicodeToTextRunInfoByScriptCode
PUBLIC 5fa28 0 CreateUnicodeToTextRunInfoByScriptCodeImplementation
PUBLIC 5fbaf 0 ConvertFromUnicodeToScriptCodeRun
PUBLIC 5fcc4 0 ConvertUTF16toOneUTF32
PUBLIC 5fd5b 0 CompareUmapUBkey
PUBLIC 5fdd1 0 CompareUmapUBRangeKey
PUBLIC 5fdf5 0 UpperString
PUBLIC 5fe4b 0 StripDiacUpperText
PUBLIC 5fe8d 0 TECGetTextEncodingFromInternetName
PUBLIC 5fefa 0 Plugin_GetTextEncodingFromInternetName
PUBLIC 5ffe9 0 GetUTCDateTime
PUBLIC 60068 0 FSpDirCreate
PUBLIC 600fa 0 UniqueID
PUBLIC 60119 0 UniqueIDCommon
PUBLIC 60241 0 WriteResource
PUBLIC 6024a 0 WriteResourceCommon
PUBLIC 603d6 0 WrResource
PUBLIC 6046e 0 CompressFromDisk
PUBLIC 606f5 0 PartRead
PUBLIC 6075f 0 ReadFromFile
PUBLIC 60792 0 RemoveResource
PUBLIC 6079c 0 RemoveResourceCommon
PUBLIC 60a62 0 RemoveName
PUBLIC 60bc7 0 NameUsedByOthers
PUBLIC 60c65 0 IDScan
PUBLIC 60caa 0 StackSpace
PUBLIC 60ce8 0 TranslateNegativeScriptID
PUBLIC 60d33 0 FSMatchAliasNoUI
PUBLIC 60d7f 0 MoreMasters
PUBLIC 60d94 0 HGetVol
PUBLIC 60dde 0 PBHGetVolSync
PUBLIC 60e61 0 PurgeSpace
PUBLIC 60e9d 0 IsMetric
PUBLIC 60f1c 0 HSetVol
PUBLIC 60f46 0 PBHSetVolSync
PUBLIC 60fca 0 ReadDateTime
PUBLIC 60fe9 0 Long2Fix
PUBLIC 6101e 0 HGetFInfo
PUBLIC 61098 0 PLstrncmp
PUBLIC 610f8 0 GetVRefNum
PUBLIC 6113d 0 CloseConnection
PUBLIC 61148 0 DisposeUnicodeToTextRunInfo
PUBLIC 6118b 0 DisposeUnicodeToTextRunInfoImplementation
PUBLIC 611fd 0 RMGetResourceCount
PUBLIC 61261 0 GetResourceMapOffsets
PUBLIC 612a6 0 RMGetIndexedResource
PUBLIC 612da 0 LongSecondsToDate
PUBLIC 6161f 0 LongDateToSeconds
PUBLIC 618a2 0 UCTokenizerCreate
PUBLIC 618b2 0 UCTokenizerCreate_ZZZ
PUBLIC 61a40 0 InitUCTokenization
PUBLIC 61b24 0 ReloadLocaleData
PUBLIC 61cbb 0 GetSTContext
PUBLIC 6222e 0 SaveSubTokenizer
PUBLIC 62239 0 DefaultCreateTokenizer_en
PUBLIC 62350 0 BuildOptionSets
PUBLIC 62451 0 SetCharacterSetFromICUPattern
PUBLIC 62533 0 SetCharacterSetBitmap
PUBLIC 625b3 0 UCTokenizerSetOptions
PUBLIC 62675 0 DefaultSetOptions
PUBLIC 6271c 0 UCTokenCreate
PUBLIC 62752 0 HandleVolumeNotification(VolumeNoticeBlk*)
PUBLIC 6275c 0 FSCacheableVNCallBack(VolumeNoticeBlk*)
PUBLIC 627b0 0 GetURLRemountInfoSize
PUBLIC 6282c 0 POSIXMount::create(unsigned long, char const*, unsigned long, unsigned short, _filesec*)
PUBLIC 62982 0 POSIXMount::createDirectory(char const*, _filesec*)
PUBLIC 62a2e 0 POSIXMount::resolveAndCreateNodePath(char const*, unsigned long)
PUBLIC 62acb 0 FileIDTreeGetFileIDFromPath
PUBLIC 62b2a 0 FSCacheableClient_POSIXSetVolumeModDate(VolumeInfo*, timespec*)
PUBLIC 62c56 0 POSIXMount::modDate(timespec*)
PUBLIC 62c72 0 _FSCacheable::ControlSetPOSIXVolumeModDate(char const*, unsigned int, unsigned int*, unsigned int*)
PUBLIC 62cdc 0 POSIXMount::_setattrs(unsigned long, char const*, unsigned long, unsigned long, unsigned long, FSAttributeInfo*)
PUBLIC 635b8 0 IsMinimalFinderInfo(char const*, FInfo const*, FXInfo const*)
PUBLIC 6362c 0 CreateAndOpenADFile(char const*, int, unsigned short, _filesec*)
PUBLIC 63774 0 MakeDataForkPath(char const*, char*, unsigned int, unsigned long)
PUBLIC 6387e 0 WriteAppleDoubleHeader(int, FInfo const*, FXInfo const*, unsigned long long*)
PUBLIC 63a4d 0 FSNewAliasMinimal
PUBLIC 63a73 0 SetThreadScheduler
PUBLIC 63a88 0 ConsultCustomScheduler
PUBLIC 63ad8 0 InvokeThreadSchedulerUPP
PUBLIC 63aec 0 PBXGetVolInfoAsync
PUBLIC 63b26 0 DoAsyncFileRequest
PUBLIC 63c22 0 TSInitSemaphore
PUBLIC 63c76 0 TSCreateThreadWithPolicy
PUBLIC 63c98 0 AsyncFileThread(void*)
PUBLIC 63d9c 0 TSWaitOnSemaphoreRelative
PUBLIC 63db1 0 TSWaitOnSemaphoreCommon
PUBLIC 63ec9 0 TSSignalSemaphore
PUBLIC 63f45 0 _Gestalt_NativeCPUFamily
PUBLIC 63fbc 0 CountResources
PUBLIC 63fd9 0 IsDuplicate
PUBLIC 6402f 0 GetIndResource
PUBLIC 6405b 0 GetComponentVersion
PUBLIC 64084 0 PBReadForkAsync
PUBLIC 64120 0 NewComponentFunctionUPP
PUBLIC 64152 0 CallComponentFunction
PUBLIC 641d6 0 DisposeComponentFunctionUPP
PUBLIC 64286 0 OpenComponentResFile
PUBLIC 642a4 0 OpenAComponentResFile
PUBLIC 64328 0 OpenComponentFile
PUBLIC 64412 0 CoreEndianInstallFlipper
PUBLIC 644e8 0 _FlipperTable_Find
PUBLIC 6453e 0 GetIntlResourceTable
PUBLIC 6465d 0 StringToFormatRec
PUBLIC 64d02 0 CheckPartsIntegrity
PUBLIC 64e3d 0 CharComp
PUBLIC 64ea2 0 RetrieveChar
PUBLIC 64f5f 0 ProcessLead
PUBLIC 64fb3 0 MakeExp
PUBLIC 65086 0 IsSubString
PUBLIC 65118 0 CloseComponentResFile
PUBLIC 651b1 0 IdenticalString
PUBLIC 651ea 0 NewAliasFilterUPP
PUBLIC 651f2 0 DisposeAliasFilterUPP
PUBLIC 651fa 0 FSCacheableClient_POSIXUpdateVolume(VolumeInfo*)
PUBLIC 6553a 0 _FSCacheable::ControlGetPOSIXVolumeInfo(char const*, unsigned int, unsigned int*, unsigned int*)
PUBLIC 65628 0 _FSCacheable::ControlSetPOSIXVolumeInfo(char const*, unsigned int, unsigned int*, unsigned int*)
PUBLIC 6569c 0 UCGetCharProperty
PUBLIC 656a7 0 UCGetCharPropertyImplementation
PUBLIC 657c8 0 FSCreateDirectoryUnicode
PUBLIC 6581c 0 PBCreateDirectoryUnicodeSync
PUBLIC 65882 0 FSIterateForks
PUBLIC 65906 0 PBIterateForksSync
PUBLIC 65a30 0 InvokeDeferredTaskUPP
PUBLIC 65a44 0 SetThreadReadyGivenTaskRef
PUBLIC 65aca 0 FSExchangeObjects
PUBLIC 65aec 0 PBExchangeObjectsSync
PUBLIC 65c36 0 CountUnicodeMappingsNoInit
PUBLIC 65c3f 0 QueryUnicodeMappingsNoInit
PUBLIC 65c4b 0 GetThreadState
PUBLIC 65c7d 0 IntlScript
PUBLIC 65d18 0 DTCurrentContextIsDeferredTask
PUBLIC 65d3c 0 RegisterCFMBundle
PUBLIC 65d94 0 RMGetResourceSize
PUBLIC 65db6 0 CountComponents
PUBLIC 65e4c 0 FSGetVolumeParent
PUBLIC 6600d 0 FSDetermineIfRefIsEnclosedByFolder
PUBLIC 66491 0 S64Compare
PUBLIC 664cb 0 UCConvertLongDateTimeToCFAbsoluteTime
PUBLIC 6660a 0 FSMoveObject
PUBLIC 66632 0 PBMoveObjectSync
PUBLIC 667d2 0 FSCreateVolumeOperation
PUBLIC 6680c 0 FSMountServerVolumeAsync
PUBLIC 66b48 0 _OKToUseVolumeOp(FSVolumeOperationRecord*)
PUBLIC 66b9a 0 GetURLMountFlagsForFSServerVolumeFlags(unsigned long)
PUBLIC 66bcb 0 MountServerURLAsync
PUBLIC 66c6b 0 GetURLMountPID
PUBLIC 66cd2 0 FSGetAsyncMountStatus
PUBLIC 66d50 0 GestaltUserName
PUBLIC 66d62 0 AFPFSMount::AFPFSMount(CachedVolumeInfo const*)
PUBLIC 66d9a 0 VolFSMount::VolFSMount(CachedVolumeInfo const*)
PUBLIC 66de5 0 PBDTVolumesMountNotificationHook
PUBLIC 66eb5 0 GetURLRemountInfo
PUBLIC 66f3c 0 _FSURLMountProcessComplete(__CFMachPort*, void*)
PUBLIC 67138 0 CompleteURLMount
PUBLIC 671a2 0 _FSFinishAsyncServerMount(FSVolumeOperationRecord*)
PUBLIC 67254 0 _TempCleanPathFromURLMountUntilURLMountReturnsCleanPaths(char const*, char*)
PUBLIC 6753c 0 AFPFSMount::openfork(unsigned long, unsigned long, char const*, char const*, unsigned long, unsigned char, unsigned char, FSOpenForkInfo*, unsigned short, _filesec*, unsigned long, short*, unsigned long*)
PUBLIC 67734 0 AFPFSMount::openforkcore(unsigned long, unsigned long, char const*, char const*, unsigned long, unsigned char, unsigned char, FSOpenForkInfo*, short*, unsigned char, unsigned short, _filesec*, unsigned long, unsigned long*)
PUBLIC 67c0c 0 FSDisposeVolumeOperation
PUBLIC 67c42 0 AFPFSMount::getacuser(unsigned long, char const*, long*, long*, long*)
PUBLIC 67ce2 0 _FSTransferExtendedAttributes
PUBLIC 67ffa 0 FSPathCopyMutableExtendedAttributeList
PUBLIC 6823e 0 FSFileSecurityCreateUsing_filesec_t
PUBLIC 6827e 0 _FSForkAdvise
PUBLIC 6833f 0 Delay
PUBLIC 68414 0 AddNanosecondsToAbsolute
PUBLIC 6844a 0 NanosecondsToAbsolute
PUBLIC 684d1 0 MPDelayUntil
PUBLIC 68509 0 AL_findByAbsPathToRoot
PUBLIC 68640 0 AL_findByID
PUBLIC 686e0 0 VNVolumePathChangedCallback(__DADisk*, __CFArray const*, void*)
PUBLIC 6877e 0 GetVRefNumByDADiskRef(__DADisk*)
PUBLIC 687e0 0 FSMount::diskArbDisk()
PUBLIC 68814 0 CFDictionaryCreateMutableFromIOKitObject
PUBLIC 68888 0 GetBestVRefNumByMountPointNoInitialization
PUBLIC 68966 0 VNUnmountApprovalCallback(__DADisk*, void*)
PUBLIC 68a24 0 GetVCBByDADiskRef(__DADisk*)
PUBLIC 68a9f 0 RemoveChewableItemsFromVolume
PUBLIC 68b18 0 IsVolumeBusy(short)
PUBLIC 68b56 0 KillVolumeEnumerationCaches(VolumeInfo*)
PUBLIC 68bb8 0 VolumeListUnmount(VolumeInfo*)
PUBLIC 68c30 0 _FSGetDiskImageBackingStoreAlias
PUBLIC 68c52 0 _FSSetDiskImageBackingStoreAlias
PUBLIC 68cb2 0 GetUnmountVCBByDADiskRef(__DADisk*)
PUBLIC 68d00 0 InvalidateAnyDomainsRootedOnVRefNum
PUBLIC 68eaa 0 DisposeVolumeUnlocked(VolumeInfo*)
PUBLIC 68f26 0 VolFSMount::~VolFSMount()
PUBLIC 68f70 0 FSMount::~FSMount()
PUBLIC 69006 0 VNDiskDisappearedCallback(__DADisk*, void*)
PUBLIC 6904e 0 _FSCacheable::removeMountForVRefNum(short)
PUBLIC 690cd 0 FSNodeStorage_VolumeRemovedFromCacheable
PUBLIC 6911f 0 FSNode_VolumeUnmounted
PUBLIC 691ad 0 FSNodeStorage_ScheduleTypedEntryForDeletion
PUBLIC 6922b 0 InvalidateTransactionsByVolume
PUBLIC 692a8 0 NewFSVolumeUnmountUPP
PUBLIC 692b0 0 FSEjectVolumeAsync
PUBLIC 694ba 0 AFPFSMount::~AFPFSMount()
PUBLIC 694ea 0 VolFSMount::~VolFSMount()
PUBLIC 6952e 0 _FSEjectVolumeAsyncCallback(__DADisk*, __DADissenter const*, void*)
PUBLIC 6962e 0 _FSUnscheduleFileVolumeOperations
PUBLIC 697d8 0 RunLoopAndModeAreSameAsCurrent(__CFRunLoop*, __CFString const*)
PUBLIC 6983e 0 MakeEjectCallback(void*)
PUBLIC 698a8 0 InvokeFSVolumeEjectUPP
PUBLIC 698d6 0 ServerFileIDTree_GarbageCollectorCallback
PUBLIC 6997d 0 ServerFileIDTree_ProcessTrashItems
PUBLIC 69a14 0 FSNodeVolumeEntry_Deallocator
PUBLIC 69a7f 0 FSNodeEntry_Clean
PUBLIC 69c7f 0 FSNodeEntry_FindChild
PUBLIC 69f13 0 FSNodeEntry_CleanFileIDTree
PUBLIC 6a012 0 IdentifyFolderInDomain
PUBLIC 6a09d 0 CreateThreadPool
PUBLIC 6a0b5 0 NavServicesCanRun
PUBLIC 6a0c2 0 GetNamedResource
PUBLIC 6a0ef 0 NavLoad
PUBLIC 6a0f8 0 FSFollowFinderAliasInternal
PUBLIC 6a33d 0 RMChangedResourceByFileRef
PUBLIC 6a3bf 0 SetGrowZone
PUBLIC 6a3e8 0 InitDateCache
PUBLIC 6a694 0 Block2String
PUBLIC 6a745 0 CopyArray
PUBLIC 6a793 0 IntlTokenize
PUBLIC 6aaf3 0 GetNextSymbol
PUBLIC 6ab53 0 AddTheToken
PUBLIC 6ac0d 0 PrimeTime
PUBLIC 6ac29 0 PrimeTimeTask
PUBLIC 6add9 0 TimerThread
PUBLIC 6af41 0 ExpirationTimeRemaining
PUBLIC 6afc1 0 AbsoluteDeltaToDuration
PUBLIC 6aff4 0 SubAbsoluteFromAbsolute
PUBLIC 6b070 0 AbsoluteToDuration
PUBLIC 6b129 0 NewEmptyHandle
PUBLIC 6b15d 0 ReallocateHandle
PUBLIC 6b181 0 GetThreadStateGivenTaskRef
PUBLIC 6b1e4 0 FSSetForkSize
PUBLIC 6b214 0 FSpRename
PUBLIC 6b252 0 SetPhysicalInfo(PhysicalFileInfo*, long, char const*)
PUBLIC 6b2a6 0 HDelete
PUBLIC 6b2ef 0 CompareString
PUBLIC 6b328 0 ResolveAlias
PUBLIC 6b359 0 ResolveAliasWithMountFlags
PUBLIC 6b41f 0 GetAliasInfo
PUBLIC 6b61f 0 StringToTime
PUBLIC 6bbc4 0 DateTimeEntry
PUBLIC 6bc8a 0 StringToDate
PUBLIC 6c8df 0 CharacterType
PUBLIC 6c913 0 TUCharacterType
PUBLIC 6ca7a 0 TestAndSet
PUBLIC 6ca96 0 TestAndSetClear
PUBLIC 6cb0f 0 CompareAndSwap8
PUBLIC 6cb2a 0 _Gestalt_ProcClkSpeedMHz
PUBLIC 6cb96 0 UCTokenizerDispose
PUBLIC 6cccc 0 DefaultDisposeTokenizer
PUBLIC 6cd9e 0 CleanupOptionSets
PUBLIC 6ce06 0 DisposeOptionSet
PUBLIC 6ce35 0 UCTokenDispose
PUBLIC 6ce99 0 x80tod
PUBLIC 6d0e1 0 p2cstrcpy
PUBLIC 6d114 0 MoveFSRefIntoTrashAndRenameItOrDeleteIt
PUBLIC 6d2a3 0 MPSetTaskWeight
PUBLIC 6d324 0 FindMPTaskData
PUBLIC 6d370 0 FindMPTaskData_Locked
PUBLIC 6d3fa 0 NewAliasMinimal
PUBLIC 6d446 0 MatchAlias
PUBLIC 6d546 0 ALI_ConvertAliasRefListToAliasSpecList
PUBLIC 6d5c6 0 U64Compare
PUBLIC 6d602 0 PBReadAsync
PUBLIC 6d692 0 BasicAIORead(FileRecord*, void*, unsigned char)
PUBLIC 6d846 0 QueueAIORequest(unsigned long, void*, FSAIOQueueElement*)
PUBLIC 6d954 0 AIOFileThread(void*)
PUBLIC 6dda3 0 TSDestroySemaphore
PUBLIC 6de34 0 GetComponentIndString
PUBLIC 6deb2 0 internalGetIndString(unsigned char*, char**, short)
PUBLIC 6df04 0 MPCreateSemaphore
PUBLIC 6dfa6 0 CSSetComponentsThreadMode
PUBLIC 6dfd8 0 MPDeleteSemaphore
PUBLIC 6e068 0 MPWaitOnSemaphore
PUBLIC 6e234 0 MPSignalSemaphore
PUBLIC 6e3cf 0 CSMemHandAndHand
PUBLIC 6e411 0 ComponentFunctionImplemented
PUBLIC 6e440 0 MPProcessorsScheduled
PUBLIC 6e44a 0 WideShift
PUBLIC 6e4d7 0 FSCreateResourceFile
PUBLIC 6e5e3 0 Frac2X
PUBLIC 6e608 0 BitOrAtomic
PUBLIC 6e63a 0 CallComponentFunctionWithStorage
PUBLIC 6e6c7 0 FracDiv
PUBLIC 6e7ad 0 dtox80
PUBLIC 6e967 0 NewIOCompletionUPP
PUBLIC 6e970 0 PBWriteForkAsync
PUBLIC 6e9c6 0 DTInstall
PUBLIC 6e9f6 0 WakeUpDeferredTaskThread
PUBLIC 6ea58 0 DeferredTaskThread
PUBLIC 6eaf5 0 AL_findFileByNum
PUBLIC 6ebcd 0 ALI_CreateIteratorForDirectory
PUBLIC 6ec24 0 StoreHint
PUBLIC 6ed32 0 ALI_ConvertUnicodeToFSSpecNameUsingDefaultFSEncoding
PUBLIC 6ed9c 0 UpdateAlias
PUBLIC 6ee2e 0 FSNewAliasMinimalUnicode
PUBLIC 6ef8c 0 AL_fillAliasUnicode
PUBLIC 6f8b0 0 TempHLock
PUBLIC 6f8ce 0 TempHUnlock
PUBLIC 6f8ee 0 TempDisposeHandle
PUBLIC 6f90c 0 SwapFileRecordInfo(FileRecord*, unsigned long, char const*, unsigned long)
PUBLIC 6f95e 0 Unique1ID
PUBLIC 6f97a 0 SetResAttrs
PUBLIC 6f98d 0 SetResAttrsCommon
PUBLIC 6fa3a 0 ChangedResource
PUBLIC 6fa43 0 ChangedResourceCommon
PUBLIC 6fb59 0 ReallocRes
PUBLIC 6fbba 0 SpaceAt
PUBLIC 6fc81 0 CreateUnicodeToTextInfoNoInit
PUBLIC 6fc8d 0 ConvertFromUnicodeToTextNoInit
PUBLIC 6fc97 0 DisposeUnicodeToTextInfoNoInit
PUBLIC 6fca2 0 PBHGetDirAccessSync
PUBLIC 6fd28 0 PBHSetDirAccessSync
PUBLIC 6fdb6 0 FSMount::setacuser(unsigned long, char const*, long, long, long, unsigned long)
PUBLIC 6fec8 0 DoMacToUNIXPermissions(long)
PUBLIC 6ff70 0 _FSGetSpecificVolumeAttributes
PUBLIC 70068 0 FracMul
PUBLIC 700f6 0 TempFreeMem
PUBLIC 7010e 0 TECCountMailTextEncodings
PUBLIC 701cd 0 Plugin_GetCountMailTextEncodings
PUBLIC 7034e 0 TECGetMailTextEncodings
PUBLIC 70422 0 UCTokenizerReset
PUBLIC 70435 0 UCTokenizerReset_ZZZ
PUBLIC 705be 0 InvokeTokenizerReset
PUBLIC 706bb 0 DefaultResetTokenizer_ZZZ
PUBLIC 70772 0 UCTokenizerGetNextToken
PUBLIC 7077e 0 UCTokenizerGetNextToken_ZZZ
PUBLIC 70ac3 0 DefaultGetNextToken_ZZZ
PUBLIC 7195c 0 MyUCTGetCharactersPtrFromInlineBuffer
PUBLIC 71a0f 0 UCTokenSetTokenString
PUBLIC 71aa2 0 UCTokenSetOffset
PUBLIC 71abf 0 UCTokenSetProperties
PUBLIC 71adb 0 UCTokenGetTokenStringPtr
PUBLIC 71b32 0 TSYield
PUBLIC 71b40 0 cxa_atexit_check_2
PUBLIC 71b51 0 cxa_atexit_check_1
PUBLIC 71b95 0 check_cxa_atexit
PUBLIC 71c0a 0 get_globals
PUBLIC 71d77 0 add_routine
PUBLIC 71e10 0 run_routines
PUBLIC 71ecc 0 cxa_atexit_wrapper
PUBLIC 71f9d 0 atexit_common
PUBLIC 72134 0 atexit
PUBLIC 7216b 0 FileIDTree_DumpAppliedUID
PUBLIC 721e7 0 FileIDTree_DumpTransactionsList
PUBLIC 723e5 0 IsTransactionCompletedButNotVerified
PUBLIC 724ba 0 FindTransactionByID
PUBLIC 72523 0 PrintVolumeIDCallbacks_EnteringIndexEntryCallback
PUBLIC 72578 0 PrintVolumeIDCallbacks_LeavingIndexEntryCallback
PUBLIC 72583 0 FileIDStorage_IterateVolumesCallback
PUBLIC 725a3 0 FileIDTree_DumpUniverseList
PUBLIC 727ae 0 FSNodeStorage_VolumeMountRenamedInCacheable
PUBLIC 727d2 0 FileIDTree_PrintVolumeNodeCallback
PUBLIC 7296d 0 FSNodeString_InfoGetter
PUBLIC 72a0b 0 PrintVolumeIDCallbacks_LeafNodeFoundCallback
PUBLIC 72aeb 0 FSNodeFileEntry_InfoGetter
PUBLIC 72bf6 0 FSNodeIndexEntry_InfoGetter
PUBLIC 72cf4 0 FileIDTree_IterateInternal
PUBLIC 72df5 0 FileIDStorage_IterateVolumesInternal
PUBLIC 72e87 0 FileIDTreePrintVolumeIDsInternal
PUBLIC 72f9e 0 FileIDTreePrintNodeTreeInternal
PUBLIC 7321b 0 FileIDTreePrintVolumeTreeInternal
PUBLIC 732d8 0 FileIDTree_InvalidateChildrenIDs
PUBLIC 733cc 0 FSNodeEntry_ScheduleForDeletion
PUBLIC 735bd 0 FileIDTreeInvalidateEntryModDateInternal
PUBLIC 736d4 0 FSNodeVolumeEntry_InfoGetter
PUBLIC 73750 0 FSNodeString_Deallocator
PUBLIC 73810 0 FSNodeFileEntry_Deallocator
PUBLIC 7386f 0 FileIDTreeSetEntryADInfoInternal
PUBLIC 73a79 0 FSNodeEntry_AddChildFromTemplateEntry
PUBLIC 73cc4 0 FileIDTreeSetVolumeNameInternal
PUBLIC 73f1b 0 FileIDTree_FSObjectsExchangedInternal
PUBLIC 741ad 0 FileIDTreeEndTransaction
PUBLIC 742e7 0 FileIDTreeServer_TransactionCompleted
PUBLIC 743c0 0 FileIDTree_BeginTransactionInternal
PUBLIC 748dd 0 FileIDTreePrintVolumes
PUBLIC 74923 0 FileIDTreePrintVolumeIDs
PUBLIC 74963 0 FileIDTreePrintVolumeTree
PUBLIC 749a3 0 FileIDTreeBeginTransaction
PUBLIC 74a4f 0 FileIDTreeFSObjectChanged
PUBLIC 74ac7 0 FileIDTreeInvalidateEntryModDate
PUBLIC 74b10 0 FileIDTreeSetVolumeName
PUBLIC 74b59 0 FileIDTree_EndTransaction_rpc
PUBLIC 74c5d 0 FileIDTree_SetVolumeName_rpc
PUBLIC 74dca 0 FileIDTree_SetEntryADInfo_rpc
PUBLIC 74f29 0 FileIDTree_InvalidateEntryModDate_rpc
PUBLIC 75031 0 FileIDTree_BeginTransaction_rpc
PUBLIC 752a8 0 _XFileIDTree_SetVolumeName_rpc
PUBLIC 75341 0 _XFileIDTree_SetEntryADInfo_rpc
PUBLIC 75419 0 _XFileIDTree_InvalidateEntryModDate_rpc
PUBLIC 754a7 0 _XFileIDTree_BeginTransaction_rpc
PUBLIC 756ae 0 _XFileIDTree_EndTransaction_rpc
PUBLIC 75726 0 ServerFileIDTree_EndTransaction_rpc
PUBLIC 7581e 0 UpdateVolumesFilteringList
PUBLIC 758b4 0 FSNodeStorage_WatchedVolumesListHasChanged
PUBLIC 758e3 0 FileIDTreeStorageServerDump
PUBLIC 75ada 0 AddPOSIXVolumeCallback
PUBLIC 75b39 0 ServerFileIDTree_SetVolumeName_rpc
PUBLIC 75bb2 0 ServerFileIDTree_SetEntryADInfo_rpc
PUBLIC 75c5f 0 ServerFileIDTree_InvalidateEntryModDate_rpc
PUBLIC 75cd7 0 ServerFileIDTree_BeginTransaction_rpc
PUBLIC 75eef 0 CheckConnection
PUBLIC 75f23 0 annuity
PUBLIC 76300 0 axb2c
PUBLIC 7666e 0 tenpower
PUBLIC 766d0 0 dec2str
PUBLIC 76ba9 0 str2dec
PUBLIC 772cf 0 ext2big
PUBLIC 773a7 0 bigtenpower
PUBLIC 7744c 0 addL
PUBLIC 774b7 0 adivb2c
PUBLIC 779d8 0 dec2big
PUBLIC 77ba3 0 dec2l
PUBLIC 77d6b 0 dec2s
PUBLIC 77f4e 0 dec2f
PUBLIC 7825e 0 dec2num
PUBLIC 788f9 0 bigb2d
PUBLIC 78bb9 0 num2dec
PUBLIC 7923d 0 compound
PUBLIC 79440 0 relation
PUBLIC 7947e 0 randomx
PUBLIC 794e9 0 BitSet
PUBLIC 7950f 0 BitClr
PUBLIC 79537 0 BitAnd
PUBLIC 79542 0 BitOr
PUBLIC 7954d 0 BitXor
PUBLIC 79558 0 BitNot
PUBLIC 79562 0 BitShift
PUBLIC 79593 0 UInt64ToSInt64
PUBLIC 795a1 0 SInt64ToUInt64
PUBLIC 795af 0 S64Max
PUBLIC 795c1 0 S64Min
PUBLIC 795d0 0 S64Add
PUBLIC 795e4 0 S64Subtract
PUBLIC 795f8 0 S64Negate
PUBLIC 7960d 0 S64Absolute
PUBLIC 79626 0 S64Multiply
PUBLIC 7965b 0 S64Divide
PUBLIC 796c5 0 S64Set
PUBLIC 796d1 0 S64SetU
PUBLIC 796de 0 S32Set
PUBLIC 796e6 0 S64And
PUBLIC 79713 0 S64Or
PUBLIC 79740 0 S64Eor
PUBLIC 79764 0 S64Not
PUBLIC 79777 0 S64BitwiseAnd
PUBLIC 79796 0 S64BitwiseOr
PUBLIC 797b5 0 S64BitwiseEor
PUBLIC 797d4 0 S64BitwiseNot
PUBLIC 797e6 0 S64ShiftRight
PUBLIC 79809 0 S64ShiftLeft
PUBLIC 7982b 0 U64Max
PUBLIC 7983d 0 U64Add
PUBLIC 79851 0 U64Subtract
PUBLIC 79865 0 U64Multiply
PUBLIC 7989a 0 U64Divide
PUBLIC 79904 0 U64Set
PUBLIC 79910 0 U64SetU
PUBLIC 7991d 0 U32SetU
PUBLIC 79925 0 U64And
PUBLIC 79952 0 U64Or
PUBLIC 7997f 0 U64Eor
PUBLIC 799a3 0 U64Not
PUBLIC 799b6 0 U64BitwiseAnd
PUBLIC 799d5 0 U64BitwiseOr
PUBLIC 799f4 0 U64BitwiseEor
PUBLIC 79a13 0 U64BitwiseNot
PUBLIC 79a25 0 U64ShiftRight
PUBLIC 79a47 0 U64ShiftLeft
PUBLIC 79a69 0 Endian64_Swap
PUBLIC 79a90 0 Fix2Frac
PUBLIC 79ac3 0 Frac2Fix
PUBLIC 79ad3 0 X2Frac
PUBLIC 79bf3 0 RefX2Fix
PUBLIC 79c11 0 RefX2Frac
PUBLIC 79c31 0 FracSqrt
PUBLIC 7a0e3 0 FracSin
PUBLIC 7a2e9 0 FracCos
PUBLIC 7a4ad 0 FixATan2
PUBLIC 7a6be 0 x80told
PUBLIC 7a70d 0 WideSubtract
PUBLIC 7a72d 0 WideNegate
PUBLIC 7a73e 0 WideSquareRoot
PUBLIC 7a817 0 WideDivide
PUBLIC 7a88a 0 WideBitShift
PUBLIC 7a8d0 0 WideCompare
PUBLIC 7a926 0 RefFix2X
PUBLIC 7a946 0 ldtox80
PUBLIC 7a997 0 AL_GetIDiskUserNameFromMountInfo
PUBLIC 7a9f4 0 NewAliasMinimalFromFullPath
PUBLIC 7ab5a 0 AttributesMatch
PUBLIC 7ac1b 0 HandleiDisk
PUBLIC 7afd8 0 IsAliasFile
PUBLIC 7b029 0 _FSNewVersion3PathAlias
PUBLIC 7b0ba 0 FlattenAliasRecord
PUBLIC 7b0c1 0 UnflattenAliasRecord
PUBLIC 7b0c8 0 SetAliasUserTypeWithPtr
PUBLIC 7b0d7 0 _AddMountInfoToAlias
PUBLIC 7b14c 0 _FSNewHomeDirRelativeAliasByPath
PUBLIC 7b155 0 _FSSetStrictAliasPathMatchByDefault
PUBLIC 7b168 0 GetAliasUserType
PUBLIC 7b176 0 SetAliasUserType
PUBLIC 7b187 0 GetAliasUserTypeFromPtr
PUBLIC 7b193 0 GetAliasSize
PUBLIC 7b1ab 0 ExhaustiveSearchOneVolume
PUBLIC 7b736 0 SearchAllVolumes
PUBLIC 7b7fb 0 FastSearchAllVolumes
PUBLIC 7b892 0 MatchAliasNoUI
PUBLIC 7b8dd 0 ResolveAliasFileWithMountFlagsNoUI
PUBLIC 7b911 0 FSFollowFinderAlias
PUBLIC 7b94b 0 FollowFinderAlias
PUBLIC 7ba1a 0 FSNewAliasUnicode
PUBLIC 7bb79 0 AL_fillMinimalFromFullpathSpec
PUBLIC 7bd0f 0 ALI_AddMountInfoToVersion2Alias
PUBLIC 7bdf7 0 ALI_AddMountInfoToVersion3Alias
PUBLIC 7bed0 0 AL_fillVersion3HomeDirReleativeAlias
PUBLIC 7c039 0 AL_findVolumeByMountpathAndName
PUBLIC 7c114 0 returns_bad_int_result
PUBLIC 7c11e 0 DIAttachImage
PUBLIC 7c1c9 0 DIInitialize
PUBLIC 7c228 0 AL_getVolname
PUBLIC 7c26c 0 AL_getFilename
PUBLIC 7c2c7 0 AL_getDriverName
PUBLIC 7c3bf 0 AL_isAFPmedia
PUBLIC 7c3d4 0 _FSSetAliasHandleSizeValidation
PUBLIC 7c3e7 0 AL_getVarPtrFromBEBuffer
PUBLIC 7c439 0 AL_FlipVariableSection
PUBLIC 7c62e 0 AL_FlipVersion3AliasRecord
PUBLIC 7c6bc 0 AL_FlipVersion2AliasRecord
PUBLIC 7c742 0 ALI_ConvertBigToLittle
PUBLIC 7c785 0 ALI_ConvertLittleToBig
PUBLIC 7c7c5 0 CountSymbols
PUBLIC 7c7cf 0 GetIndSymbol
PUBLIC 7c7d9 0 NewCFMSymbolForMacho
PUBLIC 7c7e3 0 DisposeCFMSymbolForMacho
PUBLIC 7c7ed 0 _CFMGetHelperAppPath
PUBLIC 7c7fd 0 ConvertBundlePreLocator
PUBLIC 7c808 0 RetainCollection
PUBLIC 7c824 0 GetCollectionRetainCount
PUBLIC 7c82e 0 NewCollection2(void*, OpaqueCollection**)
PUBLIC 7c8e0 0 CloneCollection
PUBLIC 7c8ee 0 CountCollectionOwners
PUBLIC 7c8fc 0 GetCollectionDefaultAttributes
PUBLIC 7c90c 0 ReplaceIndexedCollectionItem
PUBLIC 7c964 0 CollectionTagExists
PUBLIC 7c98e 0 CountCollectionTags
PUBLIC 7c9fc 0 GetIndexedCollectionTag
PUBLIC 7ca64 0 PurgeCollectionTag
PUBLIC 7cac2 0 Flatten2(OpaqueCollection*, void*, unsigned char, void*)
PUBLIC 7cb22 0 FlattenCollection
PUBLIC 7cb44 0 SetCollectionExceptionProc
PUBLIC 7cb56 0 PurgeCollection
PUBLIC 7cbe6 0 GetCollectionItemInfo
PUBLIC 7cc68 0 UnflattenCollection
PUBLIC 7ce5a 0 FlattenPartialCollection
PUBLIC 7ced4 0 CheckVersion(long)
PUBLIC 7cef2 0 ResizeData(OpaqueCollection*, long)
PUBLIC 7cf38 0 ResizeCollectionMap(OpaqueCollection*, unsigned long)
PUBLIC 7cf7e 0 CallExceptionHandler(OpaqueCollection*, short)
PUBLIC 7cfb4 0 GetItemTag(OpaqueCollection*, long)
PUBLIC 7cfd0 0 FindCollectionTag(OpaqueCollection*, long, long*, unsigned long*)
PUBLIC 7d070 0 FindItem(OpaqueCollection*, unsigned long, long, unsigned long*)
PUBLIC 7d174 0 FindFirst(OpaqueCollection*, unsigned long, unsigned long*)
PUBLIC 7d1d4 0 FlushCache(OpaqueCollection*)
PUBLIC 7d222 0 AdjustMap(OpaqueCollection*, long, long)
PUBLIC 7d26e 0 SetItemSize(OpaqueCollection*, long, long)
PUBLIC 7d3b4 0 FlattenAllItems(OpaqueCollection*, void*, void*)
PUBLIC 7d4fe 0 FlattenMatchingItems(OpaqueCollection*, void*, void*, long, long)
PUBLIC 7d7e0 0 ReplaceItem(OpaqueCollection*, long, unsigned long, void const*)
PUBLIC 7d8c0 0 InsertItem(OpaqueCollection*, long, unsigned long, long, unsigned long, void const*)
PUBLIC 7da6c 0 GetCMItem(OpaqueCollection*, long, unsigned long*, void*)
PUBLIC 7db06 0 RemoveItem(OpaqueCollection*, long)
PUBLIC 7dc2a 0 GetNewCollection
PUBLIC 7dd64 0 GetIndexedCollectionItemHdl
PUBLIC 7de24 0 FlattenCollectionToHdl
PUBLIC 7ded0 0 UnflattenCollectionFromHdl
PUBLIC 7df10 0 AddCollectionItemHdl
PUBLIC 7dff2 0 ReplaceIndexedCollectionItemHdl
PUBLIC 7e0fa 0 GetCollectionItemHdl
PUBLIC 7e1b0 0 FlattenProc(long, char*, TFlattenBlock*)
PUBLIC 7e255 0 ClearStackList
PUBLIC 7e2ad 0 ShrinkStackList
PUBLIC 7e2f2 0 CountStackListElements
PUBLIC 7e2ff 0 ReplaceStackListElement
PUBLIC 7e342 0 RemoveStackListElement
PUBLIC 7e3d1 0 GetStackListElementFromIndex
PUBLIC 7e426 0 PopStackListElement
PUBLIC 7e46c 0 SearchStackListFirstFourBytes
PUBLIC 7e4ea 0 vm_clone(unsigned int*, unsigned int)
PUBLIC 7e556 0 FindComponentFileRefFromFlatPath(DiscoveredFileReferenceArray*, void*, unsigned long)
PUBLIC 7e5b8 0 GetPathRefFromFlatFSRef
PUBLIC 7e622 0 _rmReleaseResource(void*, unsigned long)
PUBLIC 7e628 0 CMCountResources
PUBLIC 7e672 0 _rmCountResources(void*, unsigned long)
PUBLIC 7e67c 0 CMGetIndexedResource
PUBLIC 7e708 0 _rmGetIndexedResource(void*, unsigned long, int, long*, long*, unsigned long*)
PUBLIC 7e712 0 _rmGetOneResource(void*, unsigned long, short, long*, unsigned long*)
PUBLIC 7e722 0 writeResourceData(short, void*, unsigned long, long, long)
PUBLIC 7e89e 0 beSetString(HFSUniStr255*, HFSUniStr255 const&)
PUBLIC 7e8d4 0 flushComponentCaches
PUBLIC 7e990 0 addActualComponentData(DiscoveredHolder*, ComponentResource*, unsigned long, short, long, unsigned long, void*, ResourceFileAccessors const*, unsigned char)
PUBLIC 7ee8e 0 addComponentsInResourceFile(DiscoveredHolder*, ResourceFileAccessors const*, void*, ComponentFileReference*, unsigned char, short, unsigned char)
PUBLIC 7f230 0 addOneComponent
PUBLIC 7f78e 0 searchOne(DiscoveredHolder*, FSRef*, long, unsigned char, short, unsigned char)
PUBLIC 80050 0 SCComponentsCacheable::~SCComponentsCacheable()
PUBLIC 8009e 0 SCComponentsCacheable::Flush(unsigned long)
PUBLIC 80106 0 SCComponentsCacheable::dump(char const*)
PUBLIC 802e0 0 CallSpecialComponentFunctionProcInfo
PUBLIC 8047c 0 _dummy_cf_openResourceFork(rtFile*, CMCombinedResRef*)
PUBLIC 804cc 0 _dummy_cf_lookupLibraryEntry(rtFile*, RegisteredComponent*)
PUBLIC 8051a 0 _cf_disposeThisFile(rtFile*)
PUBLIC 80540 0 _error_cfm_lookupLibraryEntry(rtFile*, RegisteredComponent*)
PUBLIC 80582 0 _cfm_disposeLibraryEntry(rtFile*, void*)
PUBLIC 8062e 0 _cfm_disposeFile(rtFile*)
PUBLIC 806d4 0 RegisterCFMFile
PUBLIC 80714 0 _cfm_lookupLibraryEntry(rtFile*, RegisteredComponent*)
PUBLIC 80e7a 0 _generic_openResourceFork(rtFile*, CMCombinedResRef*)
PUBLIC 80eec 0 _generic_closeResourceFork(rtFile*, CMCombinedResRef*)
PUBLIC 80f0c 0 _generic_lookupLibraryEntry(rtFile*, RegisteredComponent*)
PUBLIC 80f16 0 _generic_disposeThisFile(rtFile*)
PUBLIC 80f1e 0 AddComponentResFile
PUBLIC 81022 0 GetIconFromResource(unsigned long, char***, getIconRecord*)
PUBLIC 810f6 0 GetComponentIconSuite
PUBLIC 81372 0 ResolveComponentPlatformPtr(ComponentResource*, ComponentDescription*, ResourceSpec*, long, long)
PUBLIC 814e2 0 ResolveComponentPlatform(ComponentResource**, ComponentDescription*, ResourceSpec*, long)
PUBLIC 81540 0 checkGet1Resource(unsigned long, short, short, unsigned char*)
PUBLIC 815d0 0 GetComponentInstanceA5
PUBLIC 815da 0 GetComponentMgrFlags
PUBLIC 815fe 0 SetComponentMgrFlags
PUBLIC 81628 0 UncaptureComponent
PUBLIC 81688 0 GetComponentIDFromComponentInstance
PUBLIC 816bc 0 SetComponentInstanceError
PUBLIC 816ea 0 GDBComponentList
PUBLIC 81b3e 0 GetComponentListModSeed
PUBLIC 81b62 0 _FlattenComponent
PUBLIC 81c6c 0 _UnflattenComponent
PUBLIC 81d84 0 kissComponent(ComponentRecord*)
PUBLIC 81eb4 0 UnregisterComponent
PUBLIC 81ef4 0 GetComponentPublicIndString
PUBLIC 81f72 0 DestroyComponent
PUBLIC 81ffa 0 RegisterComponentResource
PUBLIC 82442 0 RegisterComponentResourceFile
PUBLIC 827ce 0 RegisterComponentFileRefEntries
PUBLIC 82b60 0 RegisterComponentFileRef
PUBLIC 82b8c 0 RegisterComponentFileEntries
PUBLIC 82bd4 0 RegisterComponentFile
PUBLIC 82c00 0 CallComponentFunctionWithStorageProcInfo_TVector
PUBLIC 82c0c 0 leafName(char const*)
PUBLIC 82c36 0 _flat_bundle_lookupLibraryEntry_withName(rtFile*, RegisteredComponent*, char const*)
PUBLIC 82c62 0 _flat_bundle_mismatch_lookupLibraryEntry_withName(rtFile*, RegisteredComponent*, char const*)
PUBLIC 82c70 0 _flat_bundle_disposeThisFile(rtFile*)
PUBLIC 82c9e 0 _flat_dyld_lookupLibraryEntry_withName(rtFile*, RegisteredComponent*, char const*)
PUBLIC 82cd2 0 _flat_dyld_mismatch_lookupLibraryEntry_withName(rtFile*, RegisteredComponent*, char const*)
PUBLIC 82ce0 0 _flat_generic_lookupLibraryEntry(rtFile*, RegisteredComponent*)
PUBLIC 82d36 0 _flat_generic_mismatch_lookupLibraryEntry(rtFile*, RegisteredComponent*)
PUBLIC 82d84 0 RegisterBundleOrDyldFile
PUBLIC 82d9c 0 _firsttime_lookupLibraryEntry(rtFile*, RegisteredComponent*)
PUBLIC 82f99 0 UCConvertSecondsToCFAbsoluteTime
PUBLIC 8300f 0 UCConvertCFAbsoluteTimeToSeconds
PUBLIC 830d2 0 UCConvertCFAbsoluteTimeToLongDateTime
PUBLIC 831a0 0 AppendNumberToString
PUBLIC 8328b 0 MakeShortDateString
PUBLIC 833c9 0 GetLoadedResoucePtr
PUBLIC 833f1 0 GetItlResourcePtr
PUBLIC 834a5 0 MakeTimeString
PUBLIC 835ea 0 LongTimeString
PUBLIC 83633 0 TimeString
PUBLIC 8367e 0 AppendDateStringToString
PUBLIC 8381b 0 AppendStringFromitl1List
PUBLIC 839f1 0 MakeLongDateString
PUBLIC 83ab8 0 LongDateString
PUBLIC 83b24 0 DateString
PUBLIC 83b94 0 SetDateTime
PUBLIC 83bd3 0 SetTime
PUBLIC 83bf8 0 ValidDate
PUBLIC 83c8d 0 ToggleDate
PUBLIC 84260 0 SetTimeSeconds
PUBLIC 842ac 0 InstallDebugAssertOutputHandler
PUBLIC 842bf 0 TaskLevel
PUBLIC 842c6 0 NewDebugComponent
PUBLIC 84396 0 DisposeDebugComponent
PUBLIC 84432 0 GetDebugComponentInfo
PUBLIC 844cc 0 ApplyToDebugComponent
PUBLIC 84558 0 NewDebugOption_Apply
PUBLIC 845ea 0 NewDebugOption
PUBLIC 84633 0 GetDebugOptionInfo_Apply
PUBLIC 846d9 0 GetDebugOptionInfo
PUBLIC 84709 0 SetDebugOptionValue_Apply
PUBLIC 8475d 0 SetDebugOptionValue
PUBLIC 8479c 0 DebugAssert
PUBLIC 8496f 0 PBDTGetVRefNumFromDBRefNum
PUBLIC 849c5 0 PBDTFindFileInfo
PUBLIC 84a37 0 PBDTGetAPPLAsync
PUBLIC 84a6e 0 PBDTRemoveAPPLAsync
PUBLIC 84aa5 0 PBDTGetIconAsync
PUBLIC 84adc 0 PBDTGetCommentAsync
PUBLIC 84b13 0 PBDTRemoveCommentAsync
PUBLIC 84b4a 0 PBDTSetCommentAsync
PUBLIC 84b81 0 PBDTAddAPPLAsync
PUBLIC 84bb8 0 PBDTGetIconInfoAsync
PUBLIC 84bef 0 PBDTAddIconAsync
PUBLIC 84c26 0 PBDTDeleteAsync
PUBLIC 84c5d 0 PBDTResetAsync
PUBLIC 84c94 0 PBDTFlushAsync
PUBLIC 84ccb 0 PBDTGetInfoAsync
PUBLIC 84d02 0 PBDTWaitForCallback
PUBLIC 84d9c 0 PBDTGetRebuildStatus
PUBLIC 84e79 0 DTDBGetRebuildStatus
PUBLIC 84f10 0 PBDTGetInfoSync
PUBLIC 84fb7 0 PBDTFlushSync
PUBLIC 8503b 0 PBDTResetSync
PUBLIC 850bf 0 PBDTDeleteSync
PUBLIC 85133 0 PBDTAddIconSync
PUBLIC 85286 0 PBDTGetIconInfoSync
PUBLIC 853b5 0 PBDTAddAPPLSync
PUBLIC 8552c 0 PBDTSetCommentSync
PUBLIC 8567d 0 PBDTRemoveCommentSync
PUBLIC 8578e 0 PBDTGetCommentSync
PUBLIC 858e5 0 PBDTRemoveAPPLSync
PUBLIC 85a27 0 PBDTGetAPPLSync
PUBLIC 85b7e 0 PBDTCloseDown
PUBLIC 85c6d 0 DTDBClose
PUBLIC 85cea 0 DTDBAddIcon
PUBLIC 85d8b 0 DTDBGetIcon
PUBLIC 85e49 0 DTDBGetIconInfo
PUBLIC 85ef9 0 DTDBAddAPPL
PUBLIC 85fa4 0 DTDBGetAPPL
PUBLIC 86063 0 DTDBRemoveAPPL
PUBLIC 8610e 0 DTDBSetComment
PUBLIC 861ef 0 DTDBGetComment
PUBLIC 862d7 0 DTDBRemoveComment
PUBLIC 863ac 0 DTDBReset
PUBLIC 8642f 0 DTDBDelete
PUBLIC 864bc 0 DTDBOpen
PUBLIC 8655e 0 PBDTRebuild
PUBLIC 866c8 0 PBDTRebuildSync
PUBLIC 866db 0 PBDTRebuildAsync
PUBLIC 866f1 0 PBDTCancelRebuild
PUBLIC 867ab 0 DTDBCancelRebuild
PUBLIC 86835 0 DTDBRebuild
PUBLIC 868c8 0 DTDBClose_rpc
PUBLIC 869c4 0 DTDBGoOffLine_rpc
PUBLIC 86ac0 0 DTDBGoOnLine_rpc
PUBLIC 86bbc 0 DTDBAddIcon_rpc
PUBLIC 86d51 0 DTDBAddAPPL_rpc
PUBLIC 86e8e 0 DTDBRemoveAPPL_rpc
PUBLIC 86fc6 0 DTDBSetComment_rpc
PUBLIC 87140 0 DTDBRemoveComment_rpc
PUBLIC 87242 0 DTDBReset_rpc
PUBLIC 8733e 0 DTDBDelete_rpc
PUBLIC 8743a 0 DTDBFlush_rpc
PUBLIC 87536 0 DTDBRebuild_rpc
PUBLIC 87647 0 DTDBCancelRebuild_rpc
PUBLIC 87743 0 DTDBGetRebuildStatus_rpc
PUBLIC 8786d 0 DTDBGetIconInfo_rpc
PUBLIC 879d2 0 DTDBGetAPPL_rpc
PUBLIC 87b63 0 DTDBGetComment_rpc
PUBLIC 87d4a 0 DTDBGetInfo_rpc
PUBLIC 87ec8 0 GetDCtlEntry
PUBLIC 87f09 0 PBWaitIOComplete
PUBLIC 87f4e 0 CreateURLForUser(__CFString const*)
PUBLIC 88068 0 CheckIfMirrorPreferenceIsSetandEnableIfNot(__CFString const*)
PUBLIC 88204 0 CheckForLocalMirrorForUser(__CFString const*, short*)
PUBLIC 8826c 0 _iDiskMount
PUBLIC 882e8 0 _iDiskMountAsync
PUBLIC 883b6 0 _GetiDiskMirrorUserName
PUBLIC 883c6 0 _GetiDiskUserNameFromWebDavURL
PUBLIC 88444 0 iDiskHasBeenUnmounted
PUBLIC 8847c 0 iDiskHasBeenMounted
PUBLIC 88534 0 _iDiskMountLocalMirror
PUBLIC 886ae 0 _FN_NotificationCallback(__CFNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*)
PUBLIC 886dc 0 FNGetDirectoryForSubscription
PUBLIC 88712 0 FNNotifyAll
PUBLIC 887a6 0 FNSubscribeByPath
PUBLIC 88800 0 FSMount::setvolumeattrs(unsigned long, FSVolumeInfo*)
PUBLIC 88858 0 FetchCreateDateAttr(char const*, timespec*)
PUBLIC 888ca 0 SetCreateDateAttr(char const*, timespec*)
PUBLIC 8892e 0 GetValidFSCatalogInfoBitmapFromVolumeAttrs(vol_attributes_attr const*, unsigned long*)
PUBLIC 88a56 0 PackAttributeBuffer(attrlist const*, FSAttributeInfo const*, void*, unsigned char (*) [16], unsigned char (*) [16], _acl*, long, unsigned char)
PUBLIC 88d4a 0 BulkSetFSVolumeAttrs(vol_attributes_attr const*, FSAttributeInfo*, char const*, char const*, unsigned long*)
PUBLIC 89120 0 _FSCachedMount_GetVRefNum(_FSCachedMount*)
PUBLIC 8919e 0 _FSCacheable::~_FSCacheable()
PUBLIC 891ba 0 _FSCacheable::~_FSCacheable()
PUBLIC 891e8 0 _FSCacheable::ControlRebuildServerList(char const*, unsigned int, unsigned int*, unsigned int*)
PUBLIC 891fe 0 _FSCacheable::renameMountForVRefNum(short)
PUBLIC 89288 0 _FSCacheable::ControlSetVolumeIconRef(char const*, unsigned int, unsigned int*, unsigned int*)
PUBLIC 892fc 0 _FSCacheable::ControlSetVolumeAttributes(char const*, unsigned int, unsigned int*, unsigned int*)
PUBLIC 89370 0 _FSCacheable::ControlGetVolumeIconRef(char const*, unsigned int, unsigned int*, unsigned int*)
PUBLIC 893e4 0 _FSCacheable::ControlGetVolumeAttributes(char const*, unsigned int, unsigned int*, unsigned int*)
PUBLIC 89458 0 _FSCacheable::ControlSetVolumeUUID(char const*, unsigned int, unsigned int*, unsigned int*)
PUBLIC 89600 0 FSCacheableClient_SetCachedVolumeIconRef(VolumeInfo*, unsigned long)
PUBLIC 896b2 0 _FSCacheable::dump(char const*)
PUBLIC 899ee 0 FSCacheableClient_SetCachedVolumeAttributes(VolumeInfo*, unsigned long)
PUBLIC 89aa0 0 FSCacheableClient_GetCachedVolumeAttributes(VolumeInfo*, unsigned long*)
PUBLIC 89bc6 0 FSCacheableClient_GetCachedVolumeIconRef(VolumeInfo*, unsigned long*)
PUBLIC 89cec 0 BasicIOError(long)
PUBLIC 89d00 0 CompleteAIOReadOrWriteOnError(IOParam*, short)
PUBLIC 89d26 0 SetFileRecordAppleDoubleLength(FileRecord*, unsigned long long)
PUBLIC 89db8 0 BasicAIOWrite(void*, unsigned char)
PUBLIC 8a044 0 BasicMoveAndRename(VolumeInfo*, long, char const*, long, char const*)
PUBLIC 8a14e 0 ForkReserveSpace(OpenFileInfo*, unsigned long long, unsigned long, unsigned long long*)
PUBLIC 8a21c 0 PrintEnumerationCache
PUBLIC 8a3a8 0 FSPathCopyExtendedAttribute
PUBLIC 8a5b3 0 FSCopyExtendedAttribute
PUBLIC 8a616 0 FSPathSetExtendedAttribute
PUBLIC 8a710 0 FSSetExtendedAttribute
PUBLIC 8a76c 0 FSPathRemoveExtendedAttribute
PUBLIC 8a815 0 FSRemoveExtendedAttribute
PUBLIC 8a86d 0 FSPathCopyExtendedAttributeList
PUBLIC 8a8ce 0 FSCopyExtendedAttributeList
PUBLIC 8a92a 0 FSRemoveExtendedAttributeByForkRefNum
PUBLIC 8a9fa 0 _FSSetExtendedAttributeByFileDescriptor
PUBLIC 8aaf1 0 FSSetExtendedAttributeByForkRefNum
PUBLIC 8ab2c 0 _FSCopyExtendedAttributeByFileDescriptor
PUBLIC 8ad2d 0 FSCopyExtendedAttributeByForkRefNum
PUBLIC 8ad6f 0 _FSCopyMutableExtendedAttributeListByFileDescriptor
PUBLIC 8af8c 0 _FSTransferExtendedAttributesByForkRefNum
PUBLIC 8b1dd 0 FSCopyExtendedAttributeListByForkRefNum
PUBLIC 8b253 0 returns_bad_OSStatus_return
PUBLIC 8b25d 0 _FSCopyOperation
PUBLIC 8b346 0 _FSFileOpCancelProc
PUBLIC 8b355 0 _FSFileOpWakeUpSource
PUBLIC 8b40c 0 __FSFileOperationInitialize
PUBLIC 8b4a9 0 __FSFileOperationDeallocate
PUBLIC 8b5a7 0 _FSFileOpUpdateStatusProc
PUBLIC 8b770 0 _FSFileOpSkipProc
PUBLIC 8b877 0 _FSFileOpErrorProc
PUBLIC 8ba01 0 _FSFileOperationOperate
PUBLIC 8bc29 0 _FSCreateStatusDictionaryFromFileOp
PUBLIC 8c156 0 _FSFileOpPerform
PUBLIC 8c50a 0 _FSOperateOnObjectAsyncInternal
PUBLIC 8c67a 0 _FSPathOperateOnObjectAsync
PUBLIC 8c736 0 FSFileOperationGetTypeID
PUBLIC 8c75e 0 FSFileOperationCreate
PUBLIC 8c965 0 FSCopyObjectAsync
PUBLIC 8c9b5 0 FSMoveObjectAsync
PUBLIC 8ca02 0 FSPathCopyObjectAsync
PUBLIC 8ca4b 0 FSPathMoveObjectAsync
PUBLIC 8ca91 0 FSFileOperationCancel
PUBLIC 8caa2 0 FSFileOperationCopyStatus
PUBLIC 8cb2b 0 FSPathFileOperationCopyStatus
PUBLIC 8cbf6 0 FSCreateStringFromHFSUniStr
PUBLIC 8cc1a 0 FSPathCopyObjectAsyncWithCallbacks
PUBLIC 8cc61 0 FSPathMoveObjectAsyncWithCallbacks
PUBLIC 8cca5 0 FSFileOperationScheduleWithRunLoop
PUBLIC 8cd9e 0 _FSPathOperateOnObjectSync
PUBLIC 8cf0b 0 FSPathMoveObjectSyncWithCallbacks
PUBLIC 8cf44 0 FSPathCopyObjectSyncWithCallbacks
PUBLIC 8cf80 0 FSPathMoveObjectSync
PUBLIC 8cfc1 0 FSPathCopyObjectSync
PUBLIC 8d005 0 FSFileOperationUnscheduleFromRunLoop
PUBLIC 8d10c 0 _FSOperateOnObjectSync
PUBLIC 8d227 0 FSMoveObjectSync
PUBLIC 8d268 0 FSCopyObjectSync
PUBLIC 8d2ac 0 FSMakePath(short, unsigned long, char const*, unsigned long, char*)
PUBLIC 8d562 0 POSIXMount::setMountpoint(char const*)
PUBLIC 8d56c 0 POSIXMount::removeOrphanedMetadata(char const*)
PUBLIC 8d960 0 POSIXMount::moveandrename(unsigned long, char const*, unsigned long, char const*)
PUBLIC 8d998 0 chflags_compat(char const*, unsigned long)
PUBLIC 8d9c6 0 KillParentEnumerationCache(char const*)
PUBLIC 8da90 0 POSIXMount::_setvolumeattrs(unsigned long, FSVolumeInfo*, unsigned long)
PUBLIC 8da98 0 POSIXMount::updatedircachefordelete(unsigned long, char const*)
PUBLIC 8dae4 0 POSIXMount::~POSIXMount()
PUBLIC 8db52 0 POSIXMount::~POSIXMount()
PUBLIC 8dbc8 0 POSIXMount::checkWithEUID()
PUBLIC 8dc9e 0 POSIXMount::setVolumeName(char const*)
PUBLIC 8dcd4 0 updatePOSIXFinderInfo(POSIXMount*, int, unsigned char, unsigned char*, unsigned long, FInfo const*, FXInfo const*, unsigned char)
PUBLIC 8ddf6 0 POSIXMount::killdircache(unsigned long)
PUBLIC 8de2a 0 POSIXMount::GetEntryType(stat*, unsigned char)
PUBLIC 8df4c 0 POSIXMount::rename(unsigned long, char const*, unsigned long, char const*, unsigned char)
PUBLIC 8e0ce 0 POSIXMount::remove(unsigned long, char const*, unsigned long)
PUBLIC 8e29a 0 POSIXMount::createFile(char const*, unsigned long, _filesec*)
PUBLIC 8e340 0 PrintOpenForks
PUBLIC 8e428 0 ConvertCatSearchCInfo(VolumeInfo const*, unsigned long, CInfoPBRec*, CatalogAttributeInfo*)
PUBLIC 8e5ee 0 VerifyCatSearchPB(CSParam const*)
PUBLIC 8e6d5 0 __FSFileSecurityInitialize
PUBLIC 8e72d 0 __FSFileSecurityDeallocate
PUBLIC 8e745 0 _FSFileSecurityGetfilesec_t
PUBLIC 8e754 0 FSACLSet
PUBLIC 8e7b7 0 GetProperLocationForNewAllowEntry
PUBLIC 8e854 0 AddPermsToPermSet
PUBLIC 8ecb0 0 RemovePermsFromPermSet
PUBLIC 8f10c 0 RemoveRightsFromACL
PUBLIC 8f24a 0 GetLocalACEFromACL
PUBLIC 8f386 0 AddRightsToACL
PUBLIC 8f61a 0 AddRightsWithDictionary
PUBLIC 8f6fb 0 RemoveRightsWithDictionary
PUBLIC 8f7d1 0 MergeRightsDictionariesIntoACL
PUBLIC 8f9c1 0 MungeAndAddValue
PUBLIC 8fb27 0 _FSCreateUserAccessRightsDictionaryForObject
PUBLIC 904f5 0 _FSModifyAccessRightsOfObjectForUser
PUBLIC 90663 0 _FSModifyAccessRightsOfObjectWithDictionaries
PUBLIC 90700 0 _FSRemoveUserFromObjectAccessControlList
PUBLIC 908c3 0 _FSReplaceAccessControlListWithDictionary
PUBLIC 9094f 0 _FSApplyAccessRightsToObjectWithDictionary
PUBLIC 90a32 0 _FSApplyAccessRightsToObjectForUser
PUBLIC 90cfb 0 _FSCreateFileDictionaryFromDirectoryDictionary
PUBLIC 90d93 0 FSFileSecurityGetTypeID
PUBLIC 90dbb 0 FSFileSecurityCreate
PUBLIC 90e25 0 FSFileSecurityCreateWith_filesec_t
PUBLIC 90e70 0 FSFileSecurityRefCreateCopy
PUBLIC 90e82 0 FSFileSecuritySetAccessControlList
PUBLIC 90ee0 0 _FSCreateFileSecurityRefForCopy
PUBLIC 91004 0 FSFileSecurityGetOwner
PUBLIC 91061 0 FSFileSecuritySetOwner
PUBLIC 910b8 0 FSFileSecurityGetGroup
PUBLIC 91115 0 FSFileSecuritySetGroup
PUBLIC 9116c 0 FSFileSecurityGetOwnerUUID
PUBLIC 911e0 0 FSFileSecuritySetOwnerUUID
PUBLIC 9124b 0 FSFileSecurityGetGroupUUID
PUBLIC 912bf 0 FSFileSecuritySetGroupUUID
PUBLIC 9132a 0 FSFileSecurityGetMode
PUBLIC 91389 0 FSFileSecuritySetMode
PUBLIC 913e1 0 FSFileSecurityCreateWithFSPermissionInfo
PUBLIC 91449 0 FSFileSecurityCopyAccessControlList
PUBLIC 9149a 0 _FSCreateFileSecurityRefForCopyWithFinalDestRef
PUBLIC 91682 0 _FSCreateStrippedFileSecurityRef
PUBLIC 917c3 0 _FSCreateFinalDestinationFileSecurityRef
PUBLIC 91888 0 SetTextEncodingBitmapForEncoding(unsigned long long*, unsigned long)
PUBLIC 918ec 0 GetEmbeddedFileIDForVolume(char const*, unsigned long*)
PUBLIC 919d2 0 CompareUTF8NamesCaseInsensitive(unsigned char const*, unsigned char const*)
PUBLIC 91b1e 0 FSGetDefaultTextEncoding
PUBLIC 91b36 0 _openforkErrorTranslate(int)
PUBLIC 91b5e 0 fsdelete(char const*)
PUBLIC 91b7a 0 LMSetCurApName
PUBLIC 91b80 0 CreateSymlinkFile(char const*, unsigned char*, unsigned char*)
PUBLIC 91c8a 0 SetAutoMountTriggerFinderInfo(stat const*, FInfo*)
PUBLIC 91cba 0 IsAMSymLinkType
PUBLIC 91cee 0 _FSSetDisableNetworkVolumes
PUBLIC 91d02 0 _FSGetDisableNetworkVolumes
PUBLIC 91d16 0 PrintFileInfo
PUBLIC 91f68 0 getmntinfobuf
PUBLIC 91fd2 0 _FSFlipAFPXVolMountInfo
PUBLIC 920b0 0 SetAppleDoubleLength(char const*, unsigned long, unsigned long)
PUBLIC 9220e 0 SetAppleDoubleFinderInfo(int, FInfo const*, FXInfo const*)
PUBLIC 9242c 0 SetLocalMountFinderInfo(FInfo*, short, unsigned long)
PUBLIC 92466 0 _FSIsSyntheticLink
PUBLIC 92528 0 CreateFileSecFromACLAndPerms(_acl*, unsigned int, unsigned int, unsigned short, unsigned char (*) [16], unsigned char (*) [16])
PUBLIC 92640 0 VolFSMount::~VolFSMount()
PUBLIC 92684 0 VolFSMount::moveandrename(unsigned long, char const*, unsigned long, char const*)
PUBLIC 926be 0 AFPFSMount::~AFPFSMount()
PUBLIC 926dc 0 AFPFSMount::create(unsigned long, char const*, unsigned long, unsigned short, _filesec*)
PUBLIC 927e2 0 AFPFSMount::setacuser(unsigned long, char const*, long, long, long, unsigned long)
PUBLIC 928de 0 AFPFSCopyFile(VolumeInfo*, unsigned long, char const*, unsigned long, char const*, char const*)
PUBLIC 929c0 0 AFPFSRangeLock(unsigned long, unsigned long, unsigned char, unsigned char, unsigned long long, unsigned long long, int, unsigned long long*)
PUBLIC 92ad0 0 AFPFSMount::lockrange(int, unsigned long, long long, long long, unsigned long, unsigned char, unsigned long long*)
PUBLIC 92b64 0 AFPFSMount::unlockrange(int, unsigned long, long long, long long, unsigned long, unsigned long long*)
PUBLIC 92bdc 0 AFPFSMapIDName(VolumeInfo*, unsigned char, unsigned char, unsigned long*, char*)
PUBLIC 92cbc 0 UnpackAttributeBuffer(attrlist const*, void const*, FSAttributeInfo*, FSVolAttributeInfo*, unsigned char*, unsigned long*, unsigned long*, unsigned char, unsigned char, _acl**, unsigned char (*) [16], unsigned char (*) [16])
PUBLIC 93564 0 VolFSMount::_setvolumeattrs(unsigned long, FSVolumeInfo*, unsigned long)
PUBLIC 935aa 0 AFPFSMount::_setattrs(unsigned long, char const*, unsigned long, unsigned long, unsigned long, FSAttributeInfo*)
PUBLIC 936bc 0 _ErrorTranslateNoErrnoForServerMount(int)
PUBLIC 937dc 0 MakeMountCallback(void*)
PUBLIC 9383e 0 MakeUnmountCallback(void*)
PUBLIC 938a8 0 _FSFinishUpAsyncServerMountSync(FSVolumeOperationRecord*)
PUBLIC 93944 0 FSCancelVolumeOperation
PUBLIC 9398c 0 _FSFinishLocalMountOperation(FSVolumeOperationRecord*, short, short)
PUBLIC 93a54 0 _FSMountLocalVolumeAsyncCallback(__DADisk*, __DADissenter const*, void*)
PUBLIC 93b5e 0 FSMountLocalVolumeAsync
PUBLIC 93cf8 0 FSMountLocalVolumeSync
PUBLIC 93de6 0 _FSUnmountVolumeAsyncCallback(__DADisk*, __DADissenter const*, void*)
PUBLIC 93ee6 0 FSGetAsyncUnmountStatus
PUBLIC 93f6a 0 _FSUnmountBeforeEjectVolumeCallback(__DADisk*, __DADissenter const*, void*)
PUBLIC 93fc2 0 FSGetAsyncEjectStatus
PUBLIC 94046 0 FSCopyDiskIDForVolume
PUBLIC 940a4 0 FSGetVolumeForDiskID
PUBLIC 9410e 0 FSCopyDADiskForVolume
PUBLIC 94144 0 FSGetVolumeForDADisk
PUBLIC 94166 0 FSCopyURLForVolume
PUBLIC 94268 0 _FSFinishUpAsyncIDiskMountSync
PUBLIC 942fe 0 FSUnmountVolumeAsync
PUBLIC 944aa 0 FSUnmountVolumeSync
PUBLIC 945ce 0 FSEjectVolumeSync
PUBLIC 946f0 0 FSMountServerVolumeSync
PUBLIC 94a20 0 _FSVolumeMount
PUBLIC 94a5a 0 _FSRemoveDiskFromVolumeList
PUBLIC 94a62 0 _GetURLFromVolMountInfo
PUBLIC 94aa8 0 GetUnmountVCBByVRefNum(short)
PUBLIC 94aca 0 FSMount::~FSMount()
PUBLIC 94b60 0 FSMount::~FSMount()
PUBLIC 94bfe 0 FSMount::setVolumeName(char const*)
PUBLIC 94c34 0 FSMount::setMountpoint(char const*)
PUBLIC 94c70 0 FSMount::_fetchiokitprops()
PUBLIC 94d66 0 FSMount::renameVolume(char const*)
PUBLIC 94d84 0 FSMount::lockrange(int, unsigned long, long long, long long, unsigned long, unsigned char, unsigned long long*)
PUBLIC 94d8e 0 FSMount::unlockrange(int, unsigned long, long long, long long, unsigned long, unsigned long long*)
PUBLIC 94d98 0 _keyCopyDescription(void const*)
PUBLIC 94dea 0 _keyHash(void const*)
PUBLIC 94df6 0 FSMount::setProperty(unsigned long, void const*)
PUBLIC 94e88 0 FSMount::_removeProperty(unsigned long)
PUBLIC 94ea6 0 PrintVolumeInfo
PUBLIC 95006 0 FSMount::supportedAttributes(vol_attributes_attr*)
PUBLIC 9512a 0 FSMount::getCachedIconRef()
PUBLIC 95160 0 FSMount::setCachedIconRef(unsigned long)
PUBLIC 95180 0 _FSMountVolumeWithStatFSBuf
PUBLIC 951ba 0 RefreshSlashVolumes
PUBLIC 95280 0 _FSJournalIsActive(char const*)
PUBLIC 952fc 0 VolumeListRemount(VolumeInfo*)
PUBLIC 95376 0 FSMount::property(unsigned long, void const**)
PUBLIC 9550e 0 _FSSetCachedIconRefForVolume
PUBLIC 95562 0 _FSGetCachedIconRefForVolume
PUBLIC 955b0 0 _FSIsItemFileVaultHomeDirectory
PUBLIC 9566e 0 _FSTagVolumeAsLocalIDisk
PUBLIC 956c6 0 _FSSetVolumeProperty
PUBLIC 9570a 0 _FSGetVolumeProperty
PUBLIC 95750 0 _FSGetVolumeMountpoint
PUBLIC 9577a 0 _FSGetVolumeEncoding
PUBLIC 9580e 0 _FSGetVolumePermissions
PUBLIC 958a6 0 GetDADiskRefByVRefNum(short)
PUBLIC 958cc 0 _FSSetVolumeEncoding
PUBLIC 95904 0 _FSSetVolumePermissions
PUBLIC 9594c 0 GetVolumeParent
PUBLIC 959b6 0 GetVCBByDiskID(char const*)
PUBLIC 95a32 0 FSpOpenRF
PUBLIC 95a80 0 FSpCatMove
PUBLIC 95aca 0 FSpRstFLock
PUBLIC 95afe 0 FSpSetFLock
PUBLIC 95b32 0 HOpenRF
PUBLIC 95b7a 0 HSetFInfo
PUBLIC 95c06 0 CatMove
PUBLIC 95c3a 0 HRstFLock
PUBLIC 95c68 0 HSetFLock
PUBLIC 95c98 0 Allocate
PUBLIC 95ccc 0 AllocContig
PUBLIC 95d02 0 UnmountVol
PUBLIC 95d26 0 FSAllocateFork
PUBLIC 95d82 0 FSSetVolumeInfo
PUBLIC 95dac 0 FSDeleteFork
PUBLIC 95dd2 0 CopySymLink(FSRef const*, FSRef const*, unsigned short const*, unsigned long)
PUBLIC 95f06 0 FSLockRange
PUBLIC 95f5e 0 FSUnlockRange
PUBLIC 95fb6 0 FSCreateFileAndOpenForkUnicode
PUBLIC 9600c 0 _FSCopyPOSIXSymlink
PUBLIC 96062 0 HOpen
PUBLIC 960aa 0 CopyNamedFork(FSRef const*, FSRef const*, unsigned short const*, unsigned long)
PUBLIC 962b2 0 _FSCopyAliasFileWithFlags
PUBLIC 96680 0 _FSCopyAliasFile
PUBLIC 966cc 0 FSIsFSRefValid
PUBLIC 96716 0 PBHOpenAsync
PUBLIC 9674e 0 PBHCreateAsync
PUBLIC 96786 0 PBHOpenSync
PUBLIC 9679e 0 PBHOpenDFAsync
PUBLIC 967d6 0 PBHOpenRFDenyAsync
PUBLIC 9680e 0 PBHOpenRFSync
PUBLIC 96822 0 PBHOpenRFAsync
PUBLIC 9685c 0 PBHGetDirAccessAsync
PUBLIC 96896 0 PBHSetDirAccessAsync
PUBLIC 968ce 0 UNIXMapIDName(unsigned char, unsigned char, unsigned long*, char*)
PUBLIC 96960 0 PBHMapIDSync
PUBLIC 96a5e 0 PBHMapIDAsync
PUBLIC 96a96 0 PBHMapNameSync
PUBLIC 96b66 0 PBHMapNameAsync
PUBLIC 96ba0 0 PBCloseAsync
PUBLIC 96bda 0 PBFlushFileAsync
PUBLIC 96c14 0 PBGetEOFAsync
PUBLIC 96c4c 0 PBSetEOFAsync
PUBLIC 96c86 0 PBGetFPosAsync
PUBLIC 96cc0 0 PBWriteAsync
PUBLIC 96d18 0 PBGetFCBInfoAsync
PUBLIC 96d50 0 PBHGetFInfoAsync
PUBLIC 96d88 0 PBHSetFInfoAsync
PUBLIC 96dc0 0 PBAllocateCommon(ParamBlockRec*, unsigned char)
PUBLIC 96eea 0 PBAllocateSync
PUBLIC 96f08 0 PBAllocateAsync
PUBLIC 96f40 0 PBAllocContigSync
PUBLIC 96f62 0 PBAllocContigAsync
PUBLIC 96f9c 0 PBSetFPosAsync
PUBLIC 96fd4 0 PBGetCatInfoAsync
PUBLIC 9700c 0 PBSetCatInfoAsync
PUBLIC 97046 0 PBHGetVolParmsAsync
PUBLIC 9707e 0 PBHGetVolAsync
PUBLIC 970b6 0 PBHSetVolAsync
PUBLIC 970f0 0 PBSetVInfoAsync
PUBLIC 9712a 0 PBMakeFSSpecAsync
PUBLIC 97162 0 PBHGetVInfoAsync
PUBLIC 9719a 0 PBHOpenDenyCommon(HParamBlockRec*, unsigned short, unsigned char)
PUBLIC 973f6 0 PBHOpenRFDenySync
PUBLIC 9740e 0 PBHOpenDenySync
PUBLIC 97428 0 PBHOpenDenyAsync
PUBLIC 97460 0 PBCreateFileIDRefSync
PUBLIC 97502 0 PBCreateFileIDRefAsync
PUBLIC 9753a 0 PBDeleteFileIDRefSync
PUBLIC 975a4 0 PBDeleteFileIDRefAsync
PUBLIC 975dc 0 PBResolveFileIDRefSync
PUBLIC 97764 0 PBResolveFileIDRefAsync
PUBLIC 9779c 0 PBFlushVolAsync
PUBLIC 977d6 0 PBHRenameAsync
PUBLIC 9780e 0 PBCatMoveSync
PUBLIC 97962 0 PBCatMoveAsync
PUBLIC 9799c 0 PBExchangeFilesAsync
PUBLIC 979d6 0 PBHDeleteAsync
PUBLIC 97a0e 0 PBDirCreateAsync
PUBLIC 97a46 0 PBCatSearchAsync
PUBLIC 97a7e 0 PBHSetFLockSync
PUBLIC 97b34 0 PBHSetFLockAsync
PUBLIC 97b6c 0 PBHRstFLockSync
PUBLIC 97c22 0 PBHRstFLockAsync
PUBLIC 97c5a 0 PBUnmountVol
PUBLIC 97cb2 0 PBLockRangeAsync
PUBLIC 97cea 0 PBUnlockRangeSync
PUBLIC 97e2a 0 PBUnlockRangeAsync
PUBLIC 97e62 0 PBHCopyFileSync
PUBLIC 98018 0 PBHCopyFileAsync
PUBLIC 98050 0 PBLockRangeSync
PUBLIC 981ce 0 PBCatSearchSync
PUBLIC 9852a 0 PBSetVInfoSync
PUBLIC 98706 0 PrintFSRef
PUBLIC 987d0 0 PBAllocateForkSync
PUBLIC 98a04 0 PBAllocateForkAsync
PUBLIC 98a3a 0 PBCatalogSearchAsync
PUBLIC 98a70 0 PBCloseForkAsync
PUBLIC 98aa6 0 PBCloseIteratorAsync
PUBLIC 98adc 0 PBCompareFSRefsAsync
PUBLIC 98b12 0 PBCreateFileUnicodeAsync
PUBLIC 98b6e 0 PBCreateDirectoryUnicodeAsync
PUBLIC 98bca 0 PBCreateForkAsync
PUBLIC 98c00 0 PBDeleteForkAsync
PUBLIC 98c36 0 PBIterateForksAsync
PUBLIC 98c6c 0 PBOpenForkAsync
PUBLIC 98ca4 0 PBGetForkPositionAsync
PUBLIC 98cda 0 PBSetForkPositionAsync
PUBLIC 98d10 0 PBGetForkSizeAsync
PUBLIC 98d48 0 PBSetForkSizeAsync
PUBLIC 98d7e 0 PBDeleteObjectAsync
PUBLIC 98db4 0 PBExchangeObjectsAsync
PUBLIC 98dec 0 PBFlushForkAsync
PUBLIC 98e22 0 PBGetCatalogInfoBulkAsync
PUBLIC 98e58 0 PBGetCatalogInfoAsync
PUBLIC 98e8e 0 PBGetForkCBInfoAsync
PUBLIC 98ec4 0 PBGetVolumeInfoAsync
PUBLIC 98efa 0 PBMakeFSRefAsync
PUBLIC 98f30 0 PBMakeFSRefUnicodeAsync
PUBLIC 98f66 0 PBMoveObjectAsync
PUBLIC 98f9c 0 PBOpenIteratorAsync
PUBLIC 98fd2 0 PBRenameUnicodeAsync
PUBLIC 99008 0 PBSetCatalogInfoAsync
PUBLIC 99064 0 PBSetVolumeInfoSync
PUBLIC 99128 0 PBSetVolumeInfoAsync
PUBLIC 9915e 0 _FSCompareFlattenedFSRefs
PUBLIC 991a8 0 PBXLockRangeAsync
PUBLIC 991e0 0 PBXUnlockRangeSync
PUBLIC 992f0 0 PBXUnlockRangeAsync
PUBLIC 99328 0 PBCreateFileAndOpenForkUnicodeAsync
PUBLIC 99386 0 _FSOpenForkWithCatalogInfo
PUBLIC 99620 0 PBXLockRangeSync
PUBLIC 99780 0 _FSPathGetCatalogInfo
PUBLIC 99a70 0 PBDeleteForkSync
PUBLIC 99ad0 0 _FSCopyFile
PUBLIC 99d0a 0 _FSMoveAndRenameObject
PUBLIC 99faa 0 PBCreateFileAndOpenForkUnicodeSync
PUBLIC 9a4a6 0 _FSSetObjectAccess
PUBLIC 9a582 0 _FSSetObjectOwnership
PUBLIC 9a660 0 _FSSetObjectAccessRights
PUBLIC 9a73e 0 VNListenerCallback()
PUBLIC 9a788 0 VNDiskClassicCallback(__DADisk*, void*)
PUBLIC 9a7d8 0 _FSSetBlueBoxVolume
PUBLIC 9a7f2 0 VNDiskArbHandleMessage
PUBLIC 9a7fa 0 Handler(__CFMachPort*, void*, long, void*)
PUBLIC 9a838 0 _VNRenameDiskCallback(__DADisk*, __DADissenter const*, void*)
PUBLIC 9a84e 0 VNEjectDisk(VolumeInfo*)
PUBLIC 9a8da 0 DeclineVolumeNotificationWithFlags
PUBLIC 9a9e2 0 VNRenameDisk(VolumeInfo*, char const*)
PUBLIC 9ab96 0 VNDiskNameChangedCallback(__DADisk*, __CFArray const*, void*)
PUBLIC 9ad34 0 RequestVolumeNotificationWithFlags
PUBLIC 9ae1a 0 VNGetDiskArbPort
PUBLIC 9ae43 0 FolderTypesEqualCompareProc
PUBLIC 9ae5b 0 GetBooleanFromCFType
PUBLIC 9af39 0 classicBootVolumeHasChanged
PUBLIC 9af5c 0 BlessedFolderCanBootClassic
PUBLIC 9b0c7 0 FindFolderRoutingForDomain
PUBLIC 9b166 0 CompleteFolderRouting
PUBLIC 9b186 0 InvalidateTypeInCacheProc
PUBLIC 9b1cc 0 InvalidateFolderTypeInCache
PUBLIC 9b299 0 GetFolderDescriptor
PUBLIC 9b2a3 0 GetFolderTypesInternal
PUBLIC 9b2f8 0 GetFolderTypes
PUBLIC 9b330 0 RemoveFolderDescriptor
PUBLIC 9b451 0 AddFolderDescriptor
PUBLIC 9b673 0 GetFolderName
PUBLIC 9b75a 0 ReleaseFolder
PUBLIC 9b761 0 FlndFolderGuts
PUBLIC 9b913 0 DetermineIfPathIsEnclosedByFolder
PUBLIC 9ba79 0 FSpDetermineIfSpecIsEnclosedByFolder
PUBLIC 9bad9 0 IdentifyFolder
PUBLIC 9bd6d 0 _FindFolderGuts
PUBLIC 9bda8 0 GetFolderRoutings
PUBLIC 9be62 0 FindFolderRouting
PUBLIC 9bf11 0 AddFolderRouting
PUBLIC 9bf58 0 RemoveFolderRouting
PUBLIC 9c034 0 FolderManagerGetCorrectUID
PUBLIC 9c052 0 FoldersCacheable::Check(unsigned long)
PUBLIC 9c05c 0 RemoveItemFromFlattenedCache(short, unsigned long, unsigned int, BE_FlatFolderCache*)
PUBLIC 9c172 0 FolderMgrClientSideCache::~FolderMgrClientSideCache()
PUBLIC 9c1a4 0 FolderMgrClientSideCache::RemoveFromFolderCache(short, unsigned long, unsigned int)
PUBLIC 9c27c 0 FoldersCacheable::Flush(unsigned long)
PUBLIC 9c294 0 FoldersCacheable::~FoldersCacheable()
PUBLIC 9c2d4 0 DumpFlattenedCacheItemToStr(char*, BE_FlatFolderCache*, BE_FlatFolderCacheItem*)
PUBLIC 9c540 0 FoldersCacheable::dump(char const*)
PUBLIC 9ca6e 0 FindFolderExtended
PUBLIC 9caa0 0 FSFindFolderExtended
PUBLIC 9cacb 0 FolderManagerRegisterCallNotificationProcs
PUBLIC 9cb0f 0 FolderManagerRegisterNotificationProc
PUBLIC 9cb53 0 FolderManagerUnregisterNotificationProc
PUBLIC 9cb97 0 FindFolderEx
PUBLIC 9cbdd 0 CreateTrashFolder
PUBLIC 9cbfb 0 GetSpecialFolderName
PUBLIC 9cd41 0 CreateUserTempFolder
PUBLIC 9cd60 0 getCString(__CFString const*, unsigned char*)
PUBLIC 9cdb2 0 CLVCacheable::dump(char const*)
PUBLIC 9cdfe 0 CLVCacheable::~CLVCacheable()
PUBLIC 9ce52 0 CLVCacheable::~CLVCacheable()
PUBLIC 9ceae 0 AddCarbonLazyValuesForKey
PUBLIC 9cf0c 0 CLVHup
PUBLIC 9cf64 0 _CSCopyLazyValuesForKey
PUBLIC 9cfde 0 _makeDict(CLVContext const*, CLVDatum const*, unsigned long, void*)
PUBLIC 9d158 0 GrowGestaltTable
PUBLIC 9d1a9 0 ReplaceGestalt
PUBLIC 9d1c6 0 SetGestaltSystemValue
PUBLIC 9d1f7 0 SetGestaltSystemValuesBulk
PUBLIC 9d222 0 parse_number
PUBLIC 9d28f 0 gestalt_call_sysctl
PUBLIC 9d314 0 _Gestalt_BusClkSpeed
PUBLIC 9d3c1 0 _Gestalt_LogicalPageSize
PUBLIC 9d3e1 0 _Gestalt_AUXVersion
PUBLIC 9d3eb 0 _Gestalt_ProcessorCacheLineSize
PUBLIC 9d40b 0 _Gestalt_CDFeatures
PUBLIC 9d693 0 _Gestalt_CDInternal
PUBLIC 9d6cb 0 _Gestalt_X86Features
PUBLIC 9d779 0 _Gestalt_NumberOfCPUs
PUBLIC 9d799 0 CSCopyMachineName
PUBLIC 9d80c 0 GestaltHostName
PUBLIC 9d818 0 AddSystemGestaltValues
PUBLIC 9d92d 0 AddSystemGestaltValue
PUBLIC 9d954 0 IntlFCDeleteComponent
PUBLIC 9d9c1 0 IntlFCDebugCache
PUBLIC 9d9cb 0 IntlFCCreateNewComponentObject
PUBLIC 9daa4 0 IntlFCEditComponentObject
PUBLIC 9db7c 0 IntlFCAddSearchDirectory
PUBLIC 9dcfa 0 IntlFCAddSearchCriteria
PUBLIC 9de70 0 IntlFCWriteComponentObject
PUBLIC 9df10 0 IntlFCDisposeComponentObject
PUBLIC 9df74 0 SetCCFFileHeaderDefaults
PUBLIC 9df8d 0 CCFUnmapCachedData
PUBLIC 9dfca 0 CCFCheckIfComponentDataInUse
PUBLIC 9dfd1 0 CCFCheckSearchDirectoryForUserSpecific
PUBLIC 9dff9 0 CreateNewCCF
PUBLIC 9e0b3 0 CCFMoveComponentDataToUserLand
PUBLIC 9e128 0 WipeComponentFromUserLand
PUBLIC 9e190 0 CCFDisposeComponent
PUBLIC 9e27a 0 CCFWriteComponentData
PUBLIC 9e2d1 0 CCFUpdateCachedData
PUBLIC 9e53a 0 IntlFCCloseComponentData
PUBLIC 9e59a 0 CacheFMUnmapData
PUBLIC 9e5e6 0 GrowFileInfoArray
PUBLIC 9e63e 0 LocaleGetName
PUBLIC 9e70c 0 LocaleCountNames
PUBLIC 9e760 0 LocaleGetIndName
PUBLIC 9e857 0 LocaleGetRegionLanguageName
PUBLIC 9e8b9 0 LocaleOperationGetName
PUBLIC 9e9a1 0 LocaleOperationCountNames
PUBLIC 9e9db 0 LocaleOperationGetIndName
PUBLIC 9eaa2 0 _OSSwapInt32
PUBLIC 9eaaa 0 LocaleUnloadPlugIn
PUBLIC 9eadf 0 LocaleOperationCountLocales
PUBLIC 9ebbf 0 LocaleOperationUnloadData
PUBLIC 9ec15 0 LocaleOperationGetLocales
PUBLIC 9eda7 0 LocaleOperationLoadData
PUBLIC 9edef 0 LMGetLvl2DT
PUBLIC 9ee04 0 LMSetLvl2DT
PUBLIC 9ee1c 0 LMGetFinderName
PUBLIC 9ee2c 0 LMSetFinderName
PUBLIC 9ee5b 0 LMGetToolScratch
PUBLIC 9ee6b 0 LMSetToolScratch
PUBLIC 9ee9a 0 LMGetSysResName
PUBLIC 9eeaa 0 LMSetSysResName
PUBLIC 9eed9 0 LMGetGZRootHnd
PUBLIC 9eee9 0 LMSetGZRootHnd
PUBLIC 9eefc 0 LMGetGZMoveHnd
PUBLIC 9ef0c 0 LMSetGZMoveHnd
PUBLIC 9ef1f 0 LMGetMemTop
PUBLIC 9ef2f 0 LMSetMemTop
PUBLIC 9ef42 0 LMGetBufPtr
PUBLIC 9ef52 0 LMSetBufPtr
PUBLIC 9ef65 0 LMGetHeapEnd
PUBLIC 9ef75 0 LMSetHeapEnd
PUBLIC 9ef88 0 LMGetSoundPtr
PUBLIC 9ef98 0 LMSetSoundPtr
PUBLIC 9efab 0 LMGetSoundBase
PUBLIC 9efbb 0 LMSetSoundBase
PUBLIC 9efce 0 LMGetCurStackBase
PUBLIC 9efde 0 LMSetCurStackBase
PUBLIC 9eff1 0 LMGetHighHeapMark
PUBLIC 9f001 0 LMSetHighHeapMark
PUBLIC 9f014 0 LMGetStackLowPoint
PUBLIC 9f024 0 LMSetStackLowPoint
PUBLIC 9f037 0 LMGetToExtFS
PUBLIC 9f047 0 LMSetToExtFS
PUBLIC 9f05a 0 LMGetJStash
PUBLIC 9f06a 0 LMSetJStash
PUBLIC 9f07d 0 LMGetRndSeed
PUBLIC 9f08d 0 LMSetRndSeed
PUBLIC 9f0a0 0 LMGetBufTgFNum
PUBLIC 9f0b0 0 LMSetBufTgFNum
PUBLIC 9f0c3 0 LMGetBufTgDate
PUBLIC 9f0d3 0 LMSetBufTgDate
PUBLIC 9f0e6 0 LMGetMinStack
PUBLIC 9f0f6 0 LMSetMinStack
PUBLIC 9f109 0 LMGetDefltStack
PUBLIC 9f119 0 LMSetDefltStack
PUBLIC 9f12c 0 LMGetOneOne
PUBLIC 9f13c 0 LMSetOneOne
PUBLIC 9f14f 0 LMGetMinusOne
PUBLIC 9f15f 0 LMSetMinusOne
PUBLIC 9f172 0 LMGetSysZone
PUBLIC 9f182 0 LMSetSysZone
PUBLIC 9f195 0 LMGetApplZone
PUBLIC 9f1a5 0 LMSetApplZone
PUBLIC 9f1b8 0 LMGetCurPitch
PUBLIC 9f1c9 0 LMSetCurPitch
PUBLIC 9f1df 0 LMGetBufTgFFlg
PUBLIC 9f1f0 0 LMSetBufTgFFlg
PUBLIC 9f204 0 LMGetBufTgFBkNum
PUBLIC 9f215 0 LMSetBufTgFBkNum
PUBLIC 9f22a 0 LMGetCurPageOption
PUBLIC 9f23b 0 LMSetCurPageOption
PUBLIC 9f24f 0 LMGetPrintErr
PUBLIC 9f260 0 LMSetPrintErr
PUBLIC 9f274 0 LMGetSoundLevel
PUBLIC 9f285 0 LMSetSoundLevel
PUBLIC 9f298 0 LMGetCPUFlag
PUBLIC 9f2a9 0 LMSetCPUFlag
PUBLIC 9f2bc 0 LMGetSEvtEnb
PUBLIC 9f2cd 0 LMSetSEvtEnb
PUBLIC 9f2e0 0 LMGetSdVolume
PUBLIC 9f2f1 0 LMSetSdVolume
PUBLIC 9f304 0 LMGetScrDmpEnb
PUBLIC 9f315 0 LMSetScrDmpEnb
PUBLIC 9f328 0 LMGetTmpResLoad
PUBLIC 9f33c 0 LMGetIntlSpecInternal
PUBLIC 9f350 0 LMSetApFontID
PUBLIC 9f36e 0 LMSetSysFontFam
PUBLIC 9f38c 0 LMSetSysFontSize
PUBLIC 9f3a8 0 LMGetDiskFormatingHFSDefaults
PUBLIC 9f3af 0 LMSetDiskFormatingHFSDefaults
PUBLIC 9f3b6 0 LMGetDskSwtchHook
PUBLIC 9f3c6 0 LMSetDskSwtchHook
PUBLIC 9f3dc 0 LMGetROMMapHndl
PUBLIC 9f3ef 0 LMGetBrianBits
PUBLIC 9f400 0 LMGetResOneDeep
PUBLIC 9f414 0 LMGetWWExist
PUBLIC 9f425 0 LMGetSoundActive
PUBLIC 9f436 0 LMSetSoundActive
PUBLIC 9f44c 0 LMSetLangMapPtr
PUBLIC 9f47c 0 LMSetScriptMapPtr
PUBLIC 9f4ac 0 LMGetItlSysCachePtr
PUBLIC 9f4d3 0 LMSetItlSysCachePtr
PUBLIC 9f502 0 BlockMoveUncached
PUBLIC 9f514 0 BlockMoveDataUncached
PUBLIC 9f526 0 BlockZeroUncached
PUBLIC 9f54c 0 EmptyHandle
PUBLIC 9f56a 0 IsHeapValid
PUBLIC 9f574 0 ReleaseMemoryData
PUBLIC 9f57b 0 MakeMemoryNonResident
PUBLIC 9f582 0 MakeMemoryResident
PUBLIC 9f589 0 FlushMemory
PUBLIC 9f590 0 HoldMemory
PUBLIC 9f597 0 UnholdMemory
PUBLIC 9f59e 0 CheckAllHeaps
PUBLIC 9f5a8 0 CompactMem
PUBLIC 9f5be 0 GZSaveHnd
PUBLIC 9f5d5 0 PurgeMem
PUBLIC 9f5e9 0 GetGrowZone
PUBLIC 9f60c 0 TempTopMem
PUBLIC 9f621 0 TopMem
PUBLIC 9f637 0 TempMaxMem
PUBLIC 9f65c 0 MaxMem
PUBLIC 9f682 0 PurgeSpaceContiguous
PUBLIC 9f69a 0 PurgeSpaceTotal
PUBLIC 9f6b2 0 MPCreateEvent
PUBLIC 9f779 0 MPDeleteEvent
PUBLIC 9f82b 0 MPSetEvent
PUBLIC 9f8b8 0 MPWaitForEvent
PUBLIC 9fab9 0 MPAllocateAligned
PUBLIC 9fb4d 0 MPAllocate
PUBLIC 9fb70 0 MPBlockClear
PUBLIC 9fb79 0 MPBlockCopy
PUBLIC 9fb82 0 MPDataToCode
PUBLIC 9fbaf 0 ValidateMPMemory
PUBLIC 9fbf2 0 MPGetAllocatedBlockSize
PUBLIC 9fc21 0 MPFree
PUBLIC 9fc44 0 _MPLibraryIsCompatible
PUBLIC 9fc6d 0 _MPLibraryVersion
PUBLIC 9fca6 0 MPGetNextCpuID
PUBLIC 9fcb9 0 MPCauseNotification
PUBLIC 9fd80 0 MPCreateNotification
PUBLIC 9fe0c 0 MPDeleteNotification
PUBLIC 9fe6c 0 MPModifyNotification
PUBLIC 9ff54 0 MPModifyNotificationParameters
PUBLIC 9ffe9 0 MPSetQueueReserve
PUBLIC a005a 0 MPAllocateTaskStorageIndex
PUBLIC a0083 0 MPDeallocateTaskStorageIndex
PUBLIC a00a2 0 MPGetNextTaskID
PUBLIC a0118 0 MPGetTaskStorageValue
PUBLIC a0121 0 MPSetTaskStorageValue
PUBLIC a0147 0 MPSetTaskTSPriority
PUBLIC a0186 0 MPYield
PUBLIC a019a 0 MPSetTaskType
PUBLIC a01a2 0 _MP_ExceptionHandler
PUBLIC a01f6 0 MPSetExceptionHandler
PUBLIC a0262 0 MPDisposeTaskException
PUBLIC a02c4 0 MPSetTaskState
PUBLIC a0392 0 MPThrowException
PUBLIC a039c 0 MPRegisterDebugger
PUBLIC a03a6 0 MPUnregisterDebugger
PUBLIC a03b0 0 _MP_RemoteCallback
PUBLIC a0401 0 MPRemoteCall
PUBLIC a0551 0 MPCreateTaskCFM
PUBLIC a055b 0 MPRemoteCallCFM
PUBLIC a0565 0 MPExtractTaskState
PUBLIC a062e 0 MPExit
PUBLIC a068b 0 MPTerminateTask
PUBLIC a0760 0 MPCancelTimer
PUBLIC a085e 0 MPCreateTimer
PUBLIC a08d7 0 MPDeleteTimer
PUBLIC a0950 0 MPSetTimerNotify
PUBLIC a09a8 0 TimingThread
PUBLIC a0bf3 0 MPArmTimer
PUBLIC a0d9a 0 DurationToNanoseconds
PUBLIC a0dbc 0 NanosecondsToDuration
PUBLIC a0de0 0 SubNanosecondsFromAbsolute
PUBLIC a0e14 0 SubDurationFromAbsolute
PUBLIC a0e41 0 AbsoluteDeltaToNanoseconds
PUBLIC a0e78 0 NextFormatClass
PUBLIC a0e90 0 ConvertToString
PUBLIC a113c 0 AddWideCharacterToString
PUBLIC a11ae 0 ExpHandling
PUBLIC a1246 0 AddWideCharacterReversedToString
PUBLIC a12c4 0 AppendSymbol
PUBLIC a1574 0 MatchingSubString
PUBLIC a163d 0 CheckForDigits
PUBLIC a1751 0 MatchingBlocks
PUBLIC a17df 0 Cond
PUBLIC a18bb 0 ExpMatching
PUBLIC a19e8 0 TranslateToText
PUBLIC a1d16 0 CheckForm
PUBLIC a1e94 0 ExtendedToString
PUBLIC a25c9 0 StringToExtended
PUBLIC a311e 0 FormatRecToString
PUBLIC a326b 0 numtostring
PUBLIC a32a3 0 DetachResourceFile
PUBLIC a3336 0 RMGetTopOfOrphanChain
PUBLIC a3348 0 GreggyDecompress2
PUBLIC a3590 0 popFewBits
PUBLIC a35e4 0 decode_lit_len_bin
PUBLIC a36b6 0 decode_offset_case6
PUBLIC a37bf 0 decode_offset_case7
PUBLIC a38ac 0 decode_offset_case8
PUBLIC a3983 0 decode_offset_case9
PUBLIC a3a47 0 decode_offset_case10
PUBLIC a3ae4 0 popbits
PUBLIC a3b45 0 decode_offset_case0
PUBLIC a3ced 0 decode_offset_case1
PUBLIC a3e7f 0 decode_offset_case2
PUBLIC a3ffb 0 decode_offset_case3
PUBLIC a4161 0 decode_offset_case4
PUBLIC a42af 0 decode_offset_case5
PUBLIC a43e7 0 decode_offset_bin
PUBLIC a44ac 0 decode_copy_length_bin_huff2
PUBLIC a4671 0 codeword_dec_bin
PUBLIC a46ee 0 popString
PUBLIC a4796 0 KCRsrcDecompress3
PUBLIC a48f8 0 DecompressGreggyResource
PUBLIC a49f1 0 DonnDecompress0
PUBLIC a5563 0 DecompressDonnResource
PUBLIC a5688 0 DecompressResource
PUBLIC a56e0 0 FSCreateResFile
PUBLIC a5755 0 FSpResourceFileAlreadyOpen
PUBLIC a5798 0 FSpOpenDataForkAsResourceFile
PUBLIC a57db 0 OpenRFPerm
PUBLIC a580f 0 FSpCreateDataForkAsResourceFile
PUBLIC a5841 0 FSpOpenOrphanResFile
PUBLIC a58e0 0 RMGetPtrAndSizeFromMappedRef
PUBLIC a590e 0 RMGetTypeCount
PUBLIC a5944 0 RMGetIndexedType
PUBLIC a59b5 0 RMGetNamedResource
PUBLIC a59ea 0 RMOpenResourceFileInChainCommon
PUBLIC a5bb5 0 RMOpenResourceFileInChain
PUBLIC a5bce 0 _OSSwapInt16
PUBLIC a5bda 0 _OSSwapInt32
PUBLIC a5be2 0 IsThisASystemResourceMap
PUBLIC a5c0a 0 RsrcTypeCache_Dispose
PUBLIC a5c34 0 GetOverrideMap
PUBLIC a5c4f 0 GetOverrideAttributesCommon
PUBLIC a5cc2 0 GetOverrideAttributes
PUBLIC a5cd8 0 SetOverrideAttributesCommon
PUBLIC a5d55 0 SetOverrideAttributes
PUBLIC a5d67 0 InsertOverrideMap
PUBLIC a5d72 0 RMRemoveResFileFromSearchPath
PUBLIC a5e06 0 RMAddResFileToSearchPath
PUBLIC a5e6b 0 PrintMapName
PUBLIC a5fca 0 PrintResourceChain
PUBLIC a612d 0 WriteFromMap
PUBLIC a617d 0 UpdateOffset
PUBLIC a61a8 0 GetOverRun
PUBLIC a61c9 0 GetDefProcID
PUBLIC a61e9 0 RMReadPartialResourceByFileRef
PUBLIC a6262 0 RMDetachResourceByFileRef
PUBLIC a62c9 0 RMWriteResourceByFileRef
PUBLIC a63d2 0 RsrcTypeCache_Build
PUBLIC a653d 0 SetResFileAttrsCommon
PUBLIC a65d9 0 SetResFileAttrs
PUBLIC a65f1 0 CountTypesCommon
PUBLIC a667e 0 Count1Types
PUBLIC a6693 0 CountTypes
PUBLIC a66a9 0 WritePartialResourceCommon
PUBLIC a677f 0 WritePartialResource
PUBLIC a6788 0 MaxSizeResourceCommon
PUBLIC a6841 0 GetMaxResourceSize
PUBLIC a684a 0 ReadPartialResourceCommon
PUBLIC a690d 0 ReadPartialResource
PUBLIC a6916 0 GetIndTypeCommon
PUBLIC a69c1 0 Get1IndType
PUBLIC a69e4 0 GetIndType
PUBLIC a6a0a 0 DoStackCompact
PUBLIC a6a42 0 SetResourceSizeCommon
PUBLIC a6cd6 0 SetResourceSize
PUBLIC a6ce1 0 GetNextFondCommon
PUBLIC a6dc3 0 GetNextFOND
PUBLIC a6dce 0 RMAddResourceByFileRef
PUBLIC a6ec9 0 SetResInfoCommon
PUBLIC a6ff4 0 SetResInfo
PUBLIC a7007 0 RMRemoveResourceByFileRef
PUBLIC a71bd 0 SetResPurge
PUBLIC a71fe 0 avl_getinditem_walkproc
PUBLIC a7276 0 AVLCount
PUBLIC a72b0 0 AVLGetRefcon
PUBLIC a72e9 0 AVLGetIndItem
PUBLIC a7369 0 _CSCheckFixWithInfo
PUBLIC a744e 0 CSNamedDataCacheable::~CSNamedDataCacheable()
PUBLIC a746a 0 CSNamedDataCacheable::~CSNamedDataCacheable()
PUBLIC a7498 0 CSNamedDataCacheable::FlushNamedData(unsigned long, unsigned int, unsigned int)
PUBLIC a75b8 0 CSNamedDataCacheable::Control(unsigned long, unsigned long, unsigned int, unsigned int, unsigned int*, unsigned int*)
PUBLIC a75f0 0 applier
PUBLIC a7652 0 size_applier
PUBLIC a7676 0 CSNamedDataCacheable::dump(char const*)
PUBLIC a7750 0 _CSFlushNamedData
PUBLIC a783c 0 _csseed_client_WriteSeed
PUBLIC a793e 0 _CSReadSeedNom(OpaqueCSSeedRef*, unsigned long*)
PUBLIC a7974 0 GetCSStoreBytesLength(__CSStore const*)
PUBLIC a7980 0 _ShowBytes(void const*, unsigned long)
PUBLIC a7b58 0 _CSStore_PrintError(char const*, ...)
PUBLIC a7bea 0 _CSStoreScramble
PUBLIC a7bf0 0 _CSStoreUnscramble
PUBLIC a7bf6 0 CSStoreProtect
PUBLIC a7c40 0 CSStoreUnprotect
PUBLIC a7c8a 0 SetCSStoreOverrunMarkerLen(__CSStore*, unsigned long)
PUBLIC a7c94 0 SetVariableUnitClientBytesLength(VariableUnit*, unsigned long)
PUBLIC a7c9e 0 SetTableHeaderBytesLength(TableHeader*, unsigned long)
PUBLIC a7ca8 0 SetCatalogEntryTablePos(CatalogEntry*, unsigned long)
PUBLIC a7cb2 0 SetStoreHeaderGeneration(StoreHeader*, unsigned long)
PUBLIC a7cbe 0 GetStoreHeaderGeneration(StoreHeader const*)
PUBLIC a7cc8 0 SetCSStoreBytesLength(__CSStore*, unsigned long)
PUBLIC a7cd2 0 SetTableHeaderUnitCount(TableHeader*, unsigned long)
PUBLIC a7cdc 0 SetFreeSegmentNextPosAndFlags(FreeSegment*, unsigned long)
PUBLIC a7ce6 0 SetFreeSegmentBytesLength(FreeSegment*, unsigned long)
PUBLIC a7cf0 0 SetTableHeaderFreeHeadPos(TableHeader*, unsigned long)
PUBLIC a7cfa 0 _CSStoreUnitMarker(unsigned long, unsigned long)
PUBLIC a7d0a 0 GetTableHeaderUnitCount(TableHeader const*)
PUBLIC a7d14 0 GetTableHeaderBytesLength(TableHeader const*)
PUBLIC a7d1e 0 GetCatalogEntryTablePos(CatalogEntry const*)
PUBLIC a7d28 0 GetFreeSegmentBytesLength(FreeSegment const*)
PUBLIC a7d32 0 GetFreeSegmentNextPosAndFlags(FreeSegment const*)
PUBLIC a7d3c 0 GetTableHeaderFreeHeadPos(TableHeader const*)
PUBLIC a7d48 0 GetCSStoreOverrunMarkerLen(__CSStore const*)
PUBLIC a7d52 0 _CSStoreUnitMarkerIsValid(__CSStore const*, void const*, unsigned long, unsigned long)
PUBLIC a7d82 0 GetTableHeaderUnitLength(TableHeader const*)
PUBLIC a7d8e 0 CSStoreGetFixedUnitLength
PUBLIC a7db8 0 GetTableHeaderDataPos(TableHeader const*)
PUBLIC a7dc2 0 GetVariableUnitClientBytesLength(VariableUnit const*)
PUBLIC a7dce 0 _CSStoreShowTable
PUBLIC a7f68 0 GetTableHeaderMarker(TableHeader const*)
PUBLIC a7f74 0 _CSStoreShow
PUBLIC a8044 0 CSStoreCreateWithBytes
PUBLIC a8136 0 CSStoreRemoveTable
PUBLIC a8356 0 CSStoreAllocFixedUnit
PUBLIC a8381 0 PrintLaunchDebugInfo
PUBLIC a85e3 0 MacOSStatusErrorStringsItemCompareFunc
PUBLIC a85f2 0 GetMacOSStatusErrorString
PUBLIC a8654 0 GetMacOSStatusCommentString
PUBLIC a86b6 0 CSLog
PUBLIC a887f 0 OSTypeToCString
PUBLIC a88d8 0 UserBreak
PUBLIC a8970 0 SysError
PUBLIC a89ab 0 DebugStr
PUBLIC a8a00 0 DebugPrint
PUBLIC a8a56 0 Debugger
PUBLIC a8a99 0 DebugCStr
PUBLIC a8ac4 0 SysBreak
PUBLIC a8b07 0 SysBreakStr
PUBLIC a8b4b 0 SysBreakFunc
PUBLIC a8b92 0 returns_nil
PUBLIC a8b99 0 SCDynamicStoreCopyComputerName
PUBLIC a8c08 0 returns_bad_int_return
PUBLIC a8c12 0 RemountServerURL
PUBLIC a8ca7 0 MountServerURL
PUBLIC a8d3a 0 MountURLWithAuthentication
PUBLIC a8e09 0 GetCompleteMountURL
PUBLIC a8e90 0 MountURLWithAuthenticationAsync
PUBLIC a8f6d 0 CancelURLMount
PUBLIC a8fd6 0 GetURLFromURLRemountInfo
PUBLIC a905d 0 PremountURLAutomount
PUBLIC a90c4 0 CoreEndianGetFlipperFromTables
PUBLIC a91be 0 CoreEndianGetFlipperFromTablesForUTI
PUBLIC a92de 0 CoreEndianGetFlipper
PUBLIC a930e 0 CoreEndianFlipData
PUBLIC a944e 0 __HFSFillDictionary
PUBLIC a94d8 0 HFSCreateInstalledEncodingDictionary
PUBLIC a95cb 0 FlushToExecute
PUBLIC a95d2 0 NewDebugLog
PUBLIC a96c3 0 FlushDebugLog
PUBLIC a9aa9 0 DisposeDebugLog
PUBLIC a9aea 0 DebugLogEntry
PUBLIC a9b5d 0 InstallXTimeTask
PUBLIC a9b7c 0 DTUninstall
PUBLIC a9ba6 0 InsXTime
PUBLIC a9bc2 0 ResourceTypeIDInterrogator
PUBLIC a9d7e 0 CreateAndOpenScriptBundleComponent
PUBLIC a9e8b 0 IntlGetToken
PUBLIC a9f09 0 IntlSetToken
PUBLIC a9f77 0 CheckForComments
PUBLIC aa146 0 CheckForLiteralDelimiters
PUBLIC aa27a 0 SMDisposeIntlSpec
PUBLIC aa307 0 FindWordBreaks
PUBLIC aa69c 0 NFindScriptRun
PUBLIC aa817 0 FindScriptRun
PUBLIC aa8b5 0 RealScript
PUBLIC aa8e3 0 ScriptToRange
PUBLIC aa950 0 SetCachedItlcValue
PUBLIC aa98e 0 SetScriptVariable_FontValue
PUBLIC aaba8 0 TransliterateText
PUBLIC aabe8 0 FindCharInSet
PUBLIC aace4 0 CallExtendedFetch
PUBLIC aafbc 0 RemoteCacheable::~RemoteCacheable()
PUBLIC aafd8 0 RemoteCacheable::~RemoteCacheable()
PUBLIC ab006 0 RemoteCacheable::Flush(unsigned long)
PUBLIC ab03c 0 RemoteCacheable::Check(unsigned long)
PUBLIC ab048 0 RemoteCacheable::dump(char const*)
PUBLIC ab05a 0 SCCacheable::~SCCacheable()
PUBLIC ab070 0 SCCacheable::~SCCacheable()
PUBLIC ab08c 0 SCCacheable::ControlWithDomains(unsigned long, unsigned long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
PUBLIC ab096 0 SCCacheable::dumpExtended()
PUBLIC ab118 0 SCCacheable::Flush(unsigned long)
PUBLIC ab122 0 SCCacheable::Check(unsigned long)
PUBLIC ab12c 0 SCCacheable::Get(unsigned long, unsigned long, unsigned int*, unsigned int*)
PUBLIC ab136 0 SCCacheable::GetWithStringKey(unsigned long, char const*, unsigned int*, unsigned int*)
PUBLIC ab140 0 SCCacheable::GetWithDomains(unsigned long, unsigned long, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
PUBLIC ab14a 0 SCCacheable::Control(unsigned long, unsigned long, unsigned int, unsigned int, unsigned int*, unsigned int*)
PUBLIC ab154 0 SCCacheable::ControlWithStringKey(unsigned long, char const*, unsigned int, unsigned int, unsigned int*, unsigned int*)
PUBLIC ab15e 0 _reconnectToServer(__CFMachPort*, void*)
PUBLIC ab1e8 0 makeData(int, char const**)
PUBLIC ab306 0 scCreateService
PUBLIC ab390 0 scPrefsForgetKey
PUBLIC ab3ac 0 scPrefsPostData
PUBLIC ab3d0 0 scPrefsSetString
PUBLIC ab3f6 0 scPrefsSetInteger
PUBLIC ab41c 0 scPrefsGetString
PUBLIC ab442 0 scPrefsGetInteger
PUBLIC ab468 0 scCopyAllSessionInfo
PUBLIC ab5aa 0 SCClientSession::SCClientSession(unsigned int, unsigned int, unsigned int)
PUBLIC ab64a 0 SCClientSession::~SCClientSession()
PUBLIC ab69c 0 SCClientSession::~SCClientSession()
PUBLIC ab6ee 0 SCClientSession::~SCClientSession()
PUBLIC ab748 0 SCClientSession::flushKey(char const*)
PUBLIC ab76a 0 SCClientSession::getInteger(char const*, int*)
PUBLIC ab7b0 0 SCClientSession::getString(char const*, char*)
PUBLIC ab7f6 0 SCClientSession::setInteger(char const*, int)
PUBLIC ab83c 0 SCClientSession::setString(char const*, char const*)
PUBLIC ab882 0 SCClientSession::addData(void const*, long)
PUBLIC ab8aa 0 dumpSessionData(char const*)
PUBLIC abc8e 0 _scserver_ServerStatus
PUBLIC abd8c 0 aeRegisterNewServicePort(char const*)
PUBLIC abe2c 0 _sessionWillLogout(__CFNotificationCenter*, void*, __CFString const*, void const*, __CFDictionary const*)
PUBLIC abea6 0 _mousekeeping(__CFRunLoopTimer*, void*)
PUBLIC abed8 0 attemptDiskArbReconnect()
PUBLIC abf48 0 SCServerSession::~SCServerSession()
PUBLIC ac014 0 SCServerSession::~SCServerSession()
PUBLIC ac0e0 0 SCServerSession::SCServerSession(unsigned int, unsigned int)
PUBLIC ac200 0 SCServerSession::markInUseAgain()
PUBLIC ac220 0 _errorOutMessage
PUBLIC ac270 0 _sendClientBirth(void const*, void const*, void*)
PUBLIC ac28e 0 SCServerSession::dumpExtended()
PUBLIC ac31c 0 SCServerSession::dump(char const*)
PUBLIC ac426 0 _scsserver_GetSessionUID
PUBLIC ac44c 0 _scsserver_CacheableFlushCache
PUBLIC ac490 0 _scsserver_PrefsGetInteger
PUBLIC ac4dc 0 _scsserver_PrefsGetString
PUBLIC ac526 0 _scsserver_PrefsSetInteger
PUBLIC ac56a 0 _scsserver_PrefsSetString
PUBLIC ac5ae 0 _scsserver_PrefsForgetKey
PUBLIC ac5d8 0 _scsserver_PrefsPostData
PUBLIC ac632 0 SCService::~SCService()
PUBLIC ac6a2 0 SCService::findMsg(SubsystemToNameMap*, unsigned long)
PUBLIC ac6c6 0 SCService::~SCService()
PUBLIC ac736 0 SCService::findMsg(unsigned long)
PUBLIC ac89e 0 _pidCopyDescription(void const*)
PUBLIC ac8ae 0 _pidEqual(void const*, void const*)
PUBLIC ac8c0 0 SCSession::createService(char const*)
PUBLIC ac8c8 0 splitAndAppend(__CFString*, __CFString const*)
PUBLIC ac97c 0 SCSession::markInUseAgain()
PUBLIC ac98c 0 _addValue(void const*, void const*, void*)
PUBLIC acada 0 SCSession::addData(void const*, long)
PUBLIC acb4a 0 SCSession::addToPrefs(PrefsBucket const&)
PUBLIC acb8e 0 SCSession::~SCSession()
PUBLIC acd5e 0 SCSession::dumpExtended()
PUBLIC ad15e 0 SCSession::getPrefsBucket(char const*)
PUBLIC ad184 0 SCSession::flushKey(char const*)
PUBLIC ad1b0 0 SCSession::setString(char const*, char const*)
PUBLIC ad216 0 SCSession::setInteger(char const*, int)
PUBLIC ad26e 0 SCSession::getString(char const*, char*)
PUBLIC ad2d6 0 SCSession::getInteger(char const*, int*)
PUBLIC ad32e 0 SCSession::dump(char const*)
PUBLIC ad720 0 SCSession::SCSession(unsigned int, unsigned int)
PUBLIC ad856 0 SCSession::~SCSession()
PUBLIC ada1a 0 setCheckinName(char const*)
PUBLIC ada2e 0 MsgDebug::sumOOL(mach_msg_header_t const*, unsigned char*)
PUBLIC ada8c 0 addNum(__CFDictionary*, __CFString const*, long)
PUBLIC adae0 0 addNum(__CFArray*, long)
PUBLIC adb2c 0 addString(__CFDictionary*, __CFString const*, char const*)
PUBLIC adb86 0 addString(__CFArray*, char const*)
PUBLIC adbd4 0 makeStringArray(char const**, int)
PUBLIC adc3a 0 MsgDebug::countMsgs()
PUBLIC adc56 0 MsgDebug::pushMsg(char const*, ...)
PUBLIC adce8 0 MsgDebug::getMsgs()
PUBLIC adcf0 0 MsgDebug::appendToLast(char const*)
PUBLIC add6e 0 getCString(__CFString const*, char*, int)
PUBLIC addbf 0 _scclient_ServerStatus
PUBLIC adefe 0 _XServerStatus
PUBLIC adfbc 0 _scsclient_PrefsPostData
PUBLIC ae057 0 _scsclient_PrefsForgetKey
PUBLIC ae10a 0 _scsclient_PrefsSetString
PUBLIC ae2ab 0 _scsclient_CacheableFlushCache
PUBLIC ae3d3 0 _scsclient_PrefsGetInteger
PUBLIC ae573 0 _scsclient_PrefsGetString
PUBLIC ae717 0 _scsclient_PrefsSetInteger
PUBLIC ae8a1 0 _XPrefsGetInteger
PUBLIC ae90d 0 _XPrefsGetString
PUBLIC ae979 0 _XPrefsSetString
PUBLIC ae9e8 0 _XPrefsPostData
PUBLIC aea33 0 _XPrefsForgetKey
PUBLIC aea59 0 _XGetSessionUID
PUBLIC aeacc 0 _XCacheableFlushCache
PUBLIC aeb5b 0 _XPrefsSetInteger
PUBLIC aebe9 0 CopyP2CStr
PUBLIC aec22 0 PLstrncpy
PUBLIC aeca1 0 PLstrncat
PUBLIC aed0d 0 PLstrchr
PUBLIC aed32 0 PLstrstr
PUBLIC aeda0 0 PLstrlen
PUBLIC aedab 0 PLstrrchr
PUBLIC aee0a 0 PLstrpbrk
PUBLIC aee5e 0 PLstrspn
PUBLIC aeebc 0 PLpos
PUBLIC aef35 0 PLstrcat
PUBLIC aefa0 0 ClearIntlResourceCache
PUBLIC aefa5 0 IUClearCacheSys
PUBLIC aefaa 0 IUMagWPString
PUBLIC aefef 0 LangCodeToScript
PUBLIC af08b 0 LangScriptToSort
PUBLIC af0fd 0 LanguageOrder
PUBLIC af121 0 StringOrder
PUBLIC af179 0 ConvertAllUTF32toUTF8
PUBLIC af269 0 ConvertAllUTF32toSwapUTF16
PUBLIC af2ec 0 UmapClientFallbackHandler
PUBLIC af3e5 0 UmapDoFallback
PUBLIC af565 0 ConvertUTF8toOneUTF32
PUBLIC af6d8 0 ConvertSwapUTF16toOneUTF32
PUBLIC af77c 0 ChangeTextToUnicodeInfoImplementation
PUBLIC af834 0 ChangeUnicodeToTextInfoImplementation
PUBLIC af904 0 CreateUnicodeToTextRunInfoImplementation
PUBLIC afa4e 0 TECGetFontName
PUBLIC afa9c 0 IsFontInstalled
PUBLIC afb1d 0 _TCSearch
PUBLIC afbe2 0 CompareInt16
PUBLIC afc03 0 CompareISOLangRegCombo
PUBLIC afc32 0 MapScriptInfoAndISOCodesImplementation
PUBLIC b01f3 0 NearestMacTextEncodings
PUBLIC b01fd 0 GetTextEncodingNameNoInit
PUBLIC b020d 0 NearestMacTextEncodingsNoInit
PUBLIC b0216 0 MapScriptInfoAndISOCodes
PUBLIC b0289 0 UCLoadCharPropsTablePriv
PUBLIC b02d2 0 UCUnloadCharPropsTablePriv
PUBLIC b0320 0 UCUseCharPropsTablePriv
PUBLIC b0400 0 NearestMacTextEncodingsImplementation
PUBLIC b04a7 0 UCLoadCharPropsTablePrivImplementation
PUBLIC b0502 0 TruncateForTextToUnicodeImplementation
PUBLIC b05cd 0 TruncateForUnicodeToTextImplementation
PUBLIC b0a04 0 ConvertFromPStringToUnicode
PUBLIC b0a78 0 ConvertFromUnicodeToPString
PUBLIC b0afb 0 ChangeTextToUnicodeInfo
PUBLIC b0b04 0 ChangeUnicodeToTextInfo
PUBLIC b0b0f 0 CreateUnicodeToTextRunInfo
PUBLIC b0b67 0 TruncateForTextToUnicode
PUBLIC b0b70 0 TruncateForUnicodeToText
PUBLIC b0b7a 0 UnicodeValidConversionLength
PUBLIC b0edd 0 AddResourceToCacheData
PUBLIC b0f9a 0 OpenBundleResources
PUBLIC b106a 0 TECFileInterrogator
PUBLIC b172f 0 TECConvertTextToMultipleEncodings
PUBLIC b181f 0 TECFlushMultipleEncodings
PUBLIC b18ab 0 TECCreateOneToManyConverterFromPath
PUBLIC b1ab5 0 TECCreateOneToManyConverter
PUBLIC b1d07 0 TECCreateConverterFromPath
PUBLIC b1eb6 0 TECCountAvailableTextEncodings
PUBLIC b1f4b 0 TECGetAvailableTextEncodings
PUBLIC b2053 0 TECCountDirectTextEncodingConversions
PUBLIC b20e8 0 TECGetDirectTextEncodingConversions
PUBLIC b227a 0 TECCountDestinationTextEncodings
PUBLIC b23e2 0 TECGetDestinationTextEncodings
PUBLIC b25a4 0 TECCountSubTextEncodings
PUBLIC b2635 0 TECGetSubTextEncodings
PUBLIC b26d7 0 TECGetEncodingList
PUBLIC b2747 0 CompareTextEncodings
PUBLIC b27d0 0 FindPath
PUBLIC b2cba 0 FindEncodingPath
PUBLIC b2d30 0 ChooseBestPath
PUBLIC b2d9d 0 DisposeResultPaths
PUBLIC b2e04 0 Plugin_GetCountAvailableEncodings
PUBLIC b2ed5 0 Plugin_SupportsEncoding
PUBLIC b2f9c 0 Plugin_GetCountSubTextEncodings
PUBLIC b30f4 0 Plugin_GetCountWebTextEncodings
PUBLIC b3273 0 Plugin_GetCountAvailableSniffers
PUBLIC b3344 0 Plugin_SupportsSniffer
PUBLIC b340b 0 InstallTECResourceFlippers
PUBLIC b354d 0 FlipResourceProc_cvmm
PUBLIC b3597 0 FlipTECLocaleToEncodingsListRec
PUBLIC b362e 0 FlipResourceProc_cvml
PUBLIC b363a 0 FlipResourceProc_cvwb
PUBLIC b3646 0 FlipResourceProc_cvsb
PUBLIC b36c5 0 FlipTECEncodingsListRec
PUBLIC b36fd 0 FlipResourceProc_cvsf
PUBLIC b3709 0 FlipResourceProc_cven
PUBLIC b3715 0 FlipResourceProc_cvif
PUBLIC b377c 0 TECSniffEncodingAndLanguage
PUBLIC b43d3 0 CompareEncClassAndLangProb
PUBLIC b43fc 0 CompareMapEncToClass
PUBLIC b4429 0 CompareMapLangToEncLangCategories
PUBLIC b4442 0 TECClearSnifferContextInfo
PUBLIC b44c3 0 TECDisposeSniffer
PUBLIC b4559 0 TECSniffTextEncoding
PUBLIC b46c0 0 TECCreateSniffer
PUBLIC b48b8 0 TECCompareEncodings
PUBLIC b4912 0 SortEncodingList
PUBLIC b49a3 0 RemoveDuplicateEncodings
PUBLIC b49d7 0 CompareSniffResults
PUBLIC b4a58 0 SortSniffList
PUBLIC b4b9b 0 FixRunOffsets
PUBLIC b4bff 0 DisposeExpandoHandle
PUBLIC b4c08 0 GetExpandoItem
PUBLIC b4c32 0 GetExpandoItemCount
PUBLIC b4c3f 0 RemoveExpandoItems
PUBLIC b4c53 0 NewExpandoHandle
PUBLIC b4ca5 0 AddExpandoItem
PUBLIC b4d32 0 TECCopyTextEncodingInternetNameAndMIB
PUBLIC b4e47 0 CompareTextEncodingToNamesAndMIBs
PUBLIC b4eac 0 TECGetTextEncodingFromInternetNameOrMIB
PUBLIC b4fa6 0 CompareCharsetNameToTextEncodings
PUBLIC b5028 0 CompareCharsetMIBToTextEncodings
PUBLIC b5046 0 TECCountWebTextEncodings
PUBLIC b5102 0 TECGetWebTextEncodings
PUBLIC b51d6 0 TECCountAvailableSniffers
PUBLIC b526b 0 TECGetAvailableSniffers
PUBLIC b5358 0 __UpperStringCGlue
PUBLIC b53ad 0 UppercaseStripDiacritics
PUBLIC b53cc 0 StripDiacritics
PUBLIC b53ee 0 FindMatch
PUBLIC b54ba 0 ReplaceText
PUBLIC b5742 0 relstring
PUBLIC b57af 0 C2PStr
PUBLIC b57f0 0 P2CStr
PUBLIC b5821 0 p2cstr
PUBLIC b584f 0 c2pstr
PUBLIC b5891 0 SetString
PUBLIC b58b5 0 upperstring
PUBLIC b590c 0 CaseConvertion
PUBLIC b5ab6 0 CopyCharacter
PUBLIC b5b52 0 GetTransliterateInformation
PUBLIC b5be0 0 TransliterateTextInternal
PUBLIC b6421 0 TUTransliterateText
PUBLIC b6f1f 0 TSAtomicCompareAndSwapPtr
PUBLIC b6f43 0 BitXorAtomic
PUBLIC b6f75 0 TestAndClear
PUBLIC b6f8d 0 AddAtomic8
PUBLIC b6fca 0 BitXorAtomic8
PUBLIC b7004 0 AddAtomic16
PUBLIC b703d 0 BitXorAtomic16
PUBLIC b7075 0 BitAndAtomic
PUBLIC b70a7 0 BitAndAtomic8
PUBLIC b70e1 0 BitOrAtomic8
PUBLIC b711b 0 BitAndAtomic16
PUBLIC b7153 0 BitOrAtomic16
PUBLIC b718d 0 IncrementAtomic8
PUBLIC b71c6 0 DecrementAtomic8
PUBLIC b71ff 0 IncrementAtomic16
PUBLIC b7234 0 DecrementAtomic16
PUBLIC b726f 0 _XCPT_exception_reply
PUBLIC b7301 0 TSRunDestructionProcOnThread
PUBLIC b73b9 0 TSChangeExceptionCatcherHandler
PUBLIC b73cf 0 TSRemoveExceptionCatcher
PUBLIC b741c 0 TSExceptionGetLiveState
PUBLIC b79ae 0 TSExceptionContinue
PUBLIC b7de2 0 TSExceptionAbort
PUBLIC b7df7 0 GetDefaultThreadStackSize
PUBLIC b7e1b 0 GetFreeThreadCount
PUBLIC b7e67 0 GetSpecificFreeThreadCount
PUBLIC b7eb3 0 InstallThreadEventsWaitingHook
PUBLIC b7efb 0 InstallThreadInitHook
PUBLIC b7f56 0 RemoveThreadInitHook
PUBLIC b7fc8 0 SetDebuggerNotificationProcs
PUBLIC b800c 0 GetThreadScheduler
PUBLIC b8025 0 SetThreadTerminator
PUBLIC b804e 0 ThreadsHaveNonMainRunnable
PUBLIC b809b 0 _XHNDL_state_copy
PUBLIC b81a4 0 ThreadCurrentStackSpace
PUBLIC b8200 0 _XHNDL_exception_setup_dispatch
PUBLIC b8292 0 _XHNDL_server_handler
PUBLIC b83b1 0 TSGetDefaultThreadStackSize
PUBLIC b83ce 0 TSTerminateThread
PUBLIC b83fe 0 TSDeleteStorageKey
PUBLIC b8407 0 TSDurationToMachTimeSpec
PUBLIC b84b9 0 GetMachThreadPriority
PUBLIC b8593 0 TSGetPriority
PUBLIC b85d4 0 TSAbsoluteTimeToTimeval
PUBLIC b8695 0 TSWaitOnConditionTimed
PUBLIC b86d0 0 TSWaitOnSemaphore
PUBLIC b86e1 0 TSSemaphoreAsyncTermCleanupWait
PUBLIC b8712 0 IsInIncludeSet
PUBLIC b876c 0 IsInEndSet
PUBLIC b87c0 0 CheckEndSetChars
PUBLIC b8848 0 DefaultModifyTokenizerWithCharacterSet_ZZZ
PUBLIC b88d9 0 SniffText
PUBLIC b8c05 0 DefaultCreateTokenizer
PUBLIC b8d33 0 UCTokenGetProperties
PUBLIC b8d57 0 UCTokenGetOffset
PUBLIC b8d7c 0 UCTokenCopyTokenCFString
PUBLIC b8de2 0 UCTokenGetTokenCFString
PUBLIC b8e70 0 UCTokenCopyTokenCFMutableString
PUBLIC b8ee1 0 UCTokenCopyTokenString
PUBLIC b8f77 0 UCTokenGetTokenString
PUBLIC b8ff2 0 UCTokenizerModifyWithCharacterSet_ZZZ
PUBLIC b9143 0 UCTokenizerModifyWithCharacterSet
PUBLIC b9154 0 UCTokenizerNotificationCallback
PUBLIC b9192 0 UCTokenizerReloadLanguages
PUBLIC b91c9 0 InitLocaleOrderArray
PUBLIC b95e2 0 DescribeSubTokenizer
PUBLIC b963b 0 EqualSubTokenizers
PUBLIC b968b 0 GetSubTokenizerIDFromLocale
PUBLIC b9745 0 UCDisposeCollator
PUBLIC b9797 0 UCGetCollationKey
PUBLIC b99cd 0 UCCreateCollator
PUBLIC b9bc7 0 UCCompareCollationKeys
PUBLIC ba053 0 UCKeyEmitSequence
PUBLIC ba122 0 __TextBreakLocatorEqual
PUBLIC ba171 0 __TextBreakLocatorCopyDebugDesc
PUBLIC ba1a8 0 UCDisposeTextBreakLocator
PUBLIC ba1d9 0 __TextBreakLocatorDeallocate
PUBLIC ba231 0 UCTypeSelectFlushSelectorData
PUBLIC ba263 0 UCTypeSelectReleaseSelector
PUBLIC ba2b2 0 UCTypeSelectDisposeSelector
PUBLIC ba2bb 0 GetTypeDelay
PUBLIC ba35c 0 UCTypeSelectCompare
PUBLIC ba48b 0 UCTypeSelectCreateSelector
PUBLIC ba521 0 UCTypeSelectNewSelector
PUBLIC ba52a 0 UCTypeSelectAddKeyToSelector
PUBLIC ba8aa 0 UCTypeSelectAddKeyToSelectorDataWithTime
PUBLIC ba8b3 0 UCTypeSelectAddKeyToSelectorData
PUBLIC ba8e9 0 UCTypeSelectWouldResetBuffer
PUBLIC ba9cb 0 FindClosestMatchingString
PUBLIC baf39 0 UCTypeSelectWalkList
PUBLIC bb057 0 UCTypeSelectFindItem
PUBLIC bb0d0 0 UCThreadGlobalsDestructor
PUBLIC bb124 0 UnicodeUtilsNotificationCallback
PUBLIC bb17e 0 _ReloadUnicodeUtilData
PUBLIC bb263 0 UCRefreshThreadGlobals
PUBLIC bb3aa 0 SetUTCDateTime
PUBLIC bb420 0 WriteLocation
PUBLIC bb45f 0 SetLocalDateTime
PUBLIC bb49d 0 GetLocalDateTime
PUBLIC bb4f2 0 UTCUtilsNotificationCallback
PUBLIC bb530 0 InitUtil
PUBLIC bb537 0 GetSysPPtr
PUBLIC bb541 0 SetCurrentA5
PUBLIC bb548 0 Eject
PUBLIC bb587 0 WriteParam
PUBLIC bb5c9 0 PBHGetLogInInfoSync
PUBLIC bb60d 0 CallICMScanProc
PUBLIC bb64c 0 rLongMulDiv
PUBLIC bb68e 0 NavUnload
PUBLIC bb695 0 BeginSystemMode
PUBLIC bb69c 0 EndSystemMode
PUBLIC bb6a3 0 GetHostName
PUBLIC bb6e0 0 CompareAndSwap16
PUBLIC bb6fb 0 PBSetForeignPrivsAsync
PUBLIC bb705 0 PBHGetLogInInfoAsync
PUBLIC bb70f 0 PBHMoveRenameSync
PUBLIC bb719 0 PBHMoveRenameAsync
PUBLIC bb723 0 PBGetXCatInfoSync
PUBLIC bb72d 0 PBGetXCatInfoAsync
PUBLIC bb737 0 PBGetForeignPrivsSync
PUBLIC bb741 0 PBGetForeignPrivsAsync
PUBLIC bb74b 0 PBSetForeignPrivsSync
PUBLIC bb755 0 PBShareSync
PUBLIC bb75f 0 PBShareAsync
PUBLIC bb769 0 PBUnshareSync
PUBLIC bb773 0 PBUnshareAsync
PUBLIC bb77d 0 PBGetUGEntrySync
PUBLIC bb787 0 PBGetUGEntryAsync
PUBLIC bb791 0 PBGetVInfoSync
PUBLIC bb79b 0 returns_nilCFStringRef
PUBLIC bb7a2 0 returns_nilMirrorRef
PUBLIC bb7a9 0 returns_false
PUBLIC bb7b0 0 returns_true
PUBLIC bb7ba 0 returns_void
PUBLIC bb7bf 0 returns_kIDiskMirrorCannotEnableMirroring
PUBLIC bb7cc 0 SFIDiskMirrorLocalMountLocation
PUBLIC bb833 0 SFIDiskMirrorRefCreate
PUBLIC bb89d 0 SFIDiskMirrorRefRelease
PUBLIC bb907 0 SFIDiskMirrorIsMirroringPreferenceSet
PUBLIC bb96e 0 SFIDiskMirrorEnableMirroring
PUBLIC bb9e6 0 SFIDiskMirrorWaitForMountsCompletedCallbacks
PUBLIC bba4a 0 _CSCheckFixCreateClientKeyArray
PUBLIC bbac8 0 processCheckFixDictionary(__CFDictionary const*, __CFDictionary*)
PUBLIC bbda0 0 copyCheckFixList
PUBLIC bc141 0 NewAVLDisposeItemUPP
PUBLIC bc149 0 DisposeAVLCompareItemsUPP
PUBLIC bc14e 0 DisposeAVLItemSizeUPP
PUBLIC bc153 0 DisposeAVLDisposeItemUPP
PUBLIC bc158 0 DisposeAVLWalkUPP
PUBLIC bc160 0 InvokeAVLDisposeItemUPP
PUBLIC bc17b 0 InvokeAliasFilterUPP
PUBLIC bc19d 0 NewCollectionFlattenUPP
PUBLIC bc1a5 0 NewCollectionExceptionUPP
PUBLIC bc1ad 0 DisposeCollectionFlattenUPP
PUBLIC bc1b2 0 DisposeCollectionExceptionUPP
PUBLIC bc1b7 0 InvokeCollectionFlattenUPP
PUBLIC bc1d7 0 InvokeCollectionExceptionUPP
PUBLIC bc1f3 0 NewComponentMPWorkFunctionUPP
PUBLIC bc1fb 0 NewGetMissingComponentResourceUPP
PUBLIC bc203 0 DisposeComponentMPWorkFunctionUPP
PUBLIC bc208 0 DisposeComponentRoutineUPP
PUBLIC bc20d 0 DisposeGetMissingComponentResourceUPP
PUBLIC bc212 0 InvokeComponentRoutineUPP
PUBLIC bc22a 0 InvokeGetMissingComponentResourceUPP
PUBLIC bc259 0 NewDebugComponentCallbackUPP
PUBLIC bc261 0 NewDebugAssertOutputHandlerUPP
PUBLIC bc269 0 DisposeDebugComponentCallbackUPP
PUBLIC bc26e 0 DisposeDebugAssertOutputHandlerUPP
PUBLIC bc273 0 InvokeDebugComponentCallbackUPP
PUBLIC bc292 0 InvokeDebugAssertOutputHandlerUPP
PUBLIC bc2db 0 DisposeIOCompletionUPP
PUBLIC bc2e0 0 InvokeIOCompletionUPP
PUBLIC bc2f1 0 DisposeFNSubscriptionUPP
PUBLIC bc2f6 0 InvokeFNSubscriptionUPP
PUBLIC bc31c 0 NewFSVolumeMountUPP
PUBLIC bc324 0 NewFSVolumeEjectUPP
PUBLIC bc32c 0 DisposeFSVolumeMountUPP
PUBLIC bc331 0 DisposeFSVolumeUnmountUPP
PUBLIC bc336 0 DisposeFSVolumeEjectUPP
PUBLIC bc33b 0 InvokeFSVolumeMountUPP
PUBLIC bc362 0 InvokeFSVolumeUnmountUPP
PUBLIC bc392 0 DisposeVNUPP
PUBLIC bc397 0 InvokeVNUPP
PUBLIC bc3a9 0 NewFolderManagerNotificationUPP
PUBLIC bc3b1 0 DisposeFolderManagerNotificationUPP
PUBLIC bc3b6 0 InvokeFolderManagerNotificationUPP
PUBLIC bc3d5 0 DisposeSelectorFunctionUPP
PUBLIC bc3da 0 InvokeFileInterrogatorUPP
PUBLIC bc407 0 NewGrowZoneUPP
PUBLIC bc40f 0 NewPurgeUPP
PUBLIC bc417 0 NewUserFnUPP
PUBLIC bc41f 0 DisposeGrowZoneUPP
PUBLIC bc424 0 DisposePurgeUPP
PUBLIC bc429 0 DisposeUserFnUPP
PUBLIC bc42e 0 InvokeGrowZoneUPP
PUBLIC bc43f 0 InvokePurgeUPP
PUBLIC bc450 0 InvokeUserFnUPP
PUBLIC bc461 0 DisposeExceptionHandlerUPP
PUBLIC bc466 0 InvokeExceptionHandlerUPP
PUBLIC bc477 0 NewDeferredTaskUPP
PUBLIC bc47f 0 DisposeDeferredTaskUPP
PUBLIC bc485 0 NewResErrUPP
PUBLIC bc48d 0 DisposeResErrUPP
PUBLIC bc492 0 InvokeResErrUPP
PUBLIC bc4a4 0 NewThreadEntryUPP
PUBLIC bc4ac 0 NewThreadSchedulerUPP
PUBLIC bc4b4 0 NewThreadSwitchUPP
PUBLIC bc4bc 0 NewThreadTerminationUPP
PUBLIC bc4c4 0 NewDebuggerNewThreadUPP
PUBLIC bc4cc 0 NewDebuggerDisposeThreadUPP
PUBLIC bc4d4 0 NewDebuggerThreadSchedulerUPP
PUBLIC bc4dc 0 DisposeThreadEntryUPP
PUBLIC bc4e1 0 DisposeThreadSchedulerUPP
PUBLIC bc4e6 0 DisposeThreadSwitchUPP
PUBLIC bc4eb 0 DisposeThreadTerminationUPP
PUBLIC bc4f0 0 DisposeDebuggerNewThreadUPP
PUBLIC bc4f5 0 DisposeDebuggerDisposeThreadUPP
PUBLIC bc4fa 0 DisposeDebuggerThreadSchedulerUPP
PUBLIC bc501 0 InvokeThreadTerminationUPP
PUBLIC bc519 0 InvokeDebuggerNewThreadUPP
PUBLIC bc52a 0 InvokeDebuggerDisposeThreadUPP
PUBLIC bc53b 0 InvokeDebuggerThreadSchedulerUPP
PUBLIC bc54c 0 NewThreadInitHookUPP
PUBLIC bc554 0 DisposeThreadInitHookUPP
PUBLIC bc559 0 InvokeThreadInitHookUPP
PUBLIC bc567 0 NewTimerUPP
PUBLIC bc56f 0 DisposeTimerUPP
PUBLIC bc574 0 InvokeTimerUPP
PUBLIC bc585 0 DisposeUnicodeToTextFallbackUPP
PUBLIC bc58a 0 InvokeUnicodeToTextFallbackUPP
PUBLIC bc5cc 0 NewIndexToUCStringUPP
PUBLIC bc5d4 0 DisposeIndexToUCStringUPP
PUBLIC bc5d9 0 InvokeIndexToUCStringUPP
PUBLIC bc60b 0 CallComponentVersion
PUBLIC bc632 0 CallComponentUnregister
PUBLIC bc659 0 CallComponentGetMPWorkFunction
PUBLIC bc68d 0 UprpLookupCharGroup
PUBLIC bc6ea 0 ReorderUTF32
PUBLIC bc82f 0 LLConvertUTF8toUTF32
PUBLIC bc998 0 DecomposeHangulSyllable
PUBLIC bca16 0 CompareUmapBURangeKey
PUBLIC bca77 0 UmapSetFallbacks
PUBLIC bca95 0 UmapGetSubstituteBChars
PUBLIC bcaef 0 UmapGetBCharLength
PUBLIC bcc68 0 LookupComposPair
PUBLIC bcd30 0 _sfGetFlipper
PUBLIC bcdb4 0 _sfInvokeFlipper
PUBLIC bce3e 0 _nullFlipper
PUBLIC bce6e 0 callOldStyleFlipper(long (*)(unsigned long, unsigned long, short, void*, unsigned long, unsigned char, void*), FlipManager*)
PUBLIC bcee8 0 FlipRidL
PUBLIC bcf1c 0 FlipMcmd
PUBLIC bcf50 0 FlipTxtr
PUBLIC bcfa6 0 FlipRID_
PUBLIC bcfdc 0 SWAP_VAL(unsigned long)
PUBLIC bcfe4 0 SWAP_VAL(long)
PUBLIC bcfec 0 SWAP_VAL(short)
PUBLIC bcff6 0 FlipTypefttl
PUBLIC bd034 0 FlipTypeTHND
PUBLIC bd086 0 FlipTypebadg
PUBLIC bd0f6 0 FlipTypescsz
PUBLIC bd15c 0 FlipTypeTHNR
PUBLIC bd1a6 0 FlipTypeFREF
PUBLIC bd1f2 0 FlipTypemach
PUBLIC bd212 0 FlipTypePresetList
PUBLIC bd294 0 FlipTypeTHGA
PUBLIC bd37a 0 FlipTypeTHNG
PUBLIC bd470 0 FlipTypevers
PUBLIC bd4d6 0 FlipTypenrct
PUBLIC bd50a 0 FlipTypePresetPlatformList
PUBLIC bd56e 0 FlipTypeCTAB
PUBLIC bd5cc 0 FlipTypeopen
PUBLIC bd658 0 FlipTypeBNDL
PUBLIC bd6e2 0 FlipTypewxim
PUBLIC bd704 0 FlipTyperout
PUBLIC bd766 0 FlipTypepNot
PUBLIC bd80a 0 FlipTypeusro
PUBLIC bd828 0 FlipTypeCURS
PUBLIC bd880 0 FlipTypeacur
PUBLIC bd8e2 0 FlipTypecrsr
PUBLIC bd936 0 FlipTypeCDCI
PUBLIC bda00 0 FlipTypeStringList
PUBLIC bda1e 0 FlipTypestyl
PUBLIC bdada 0 FlipTypecltn
PUBLIC bdb62 0 FlipTypeflac
PUBLIC bdc14 0 FlipTypekind
PUBLIC bdca2 0 SWAP_VAL(unsigned short)
PUBLIC bdcae 0 FlipE80(FlipManager*)
PUBLIC bdd0e 0 Flip_RECT
PUBLIC bdd22 0 FlipTypeqfmt
PUBLIC bdd96 0 Flip_Snd
PUBLIC be052 0 FlipTypeqtet
PUBLIC be0b6 0 FlipTypeqmtr
PUBLIC be128 0 FlipType_nini
PUBLIC be150 0 Flip_DRVR
PUBLIC be1d6 0 Flip_utxArray
PUBLIC be246 0 Flip_pltt
PUBLIC be2f8 0 FlipType_cpix
PUBLIC be31a 0 Flip_accl
PUBLIC be394 0 Flip_thnArray
PUBLIC be3c0 0 SWAP_VAL(unsigned short)
PUBLIC be3cc 0 NeedToFlipDataOfOffset(__CFDictionary*, unsigned long)
PUBLIC be454 0 _HLTBByteSwap_uchr
PUBLIC be47c 0 _HLTBByteSwap_itl2
PUBLIC be4a4 0 _HLTBByteSwap_itl4
PUBLIC be4cc 0 _HLTBByteSwap_itl5
PUBLIC be4f4 0 _HLTBByteSwap_hfs
PUBLIC be51c 0 _HLTBByteSwap_phfs
PUBLIC be544 0 SWAP_VAL(long)
PUBLIC be54c 0 SWAP_VAL(unsigned long)
PUBLIC be554 0 SWAP_COUNT32(char*&, unsigned char)
PUBLIC be582 0 SWAP_COUNT16(char*&, unsigned char)
PUBLIC be5bc 0 SWAP_VAL(short)
PUBLIC be5c6 0 _HLTBByteSwap_isr2
PUBLIC be5e8 0 _HLTBByteSwap_isrv
PUBLIC be612 0 _HLTBByteSwap_MBAR
PUBLIC be648 0 _HLTBByteSwap_dlgx
PUBLIC be672 0 _HLTBByteSwap_tab_
PUBLIC be6f2 0 _HLTBByteSwap_ldes
PUBLIC be796 0 _HLTBByteSwap_CNTL
PUBLIC be81c 0 _HLTBByteSwap_DITL
PUBLIC bea3c 0 _HLTBByteSwap_DLOG
PUBLIC beaf0 0 _HLTBByteSwap_alrx
PUBLIC bebf4 0 _HLTBByteSwap_MENU
PUBLIC bec3a 0 _HLTBByteSwap_MENA
PUBLIC bec90 0 SwapCountAndSkipPStrings(FlipManager*)
PUBLIC becfe 0 _HLTBByteSwap_fssP
PUBLIC bed5e 0 old__HLTBByteSwap_uchr(unsigned long, unsigned long, short, void*, unsigned long, unsigned char, void*)
PUBLIC bf1f8 0 SwapBreakTable(char*, unsigned char)
PUBLIC bf30c 0 old__HLTBByteSwap_itl2(unsigned long, unsigned long, short, void*, unsigned long, unsigned char, void*)
PUBLIC bf8f8 0 old__HLTBByteSwap_itl4(unsigned long, unsigned long, short, void*, unsigned long, unsigned char, void*)
PUBLIC bfca4 0 old__HLTBByteSwap_itl5(unsigned long, unsigned long, short, void*, unsigned long, unsigned char, void*)
PUBLIC bfd60 0 old__HLTBByteSwap_hfs(unsigned long, unsigned long, short, void*, unsigned long, unsigned char, void*)
PUBLIC bfe0e 0 old__HLTBByteSwap_phfs(unsigned long, unsigned long, short, void*, unsigned long, unsigned char, void*)
PUBLIC bff56 0 _HLTBByteSwap_SIZE
PUBLIC bff7e 0 _HLTBByteSwap_itlm
PUBLIC c0086 0 _HLTBByteSwap_itlc
PUBLIC c00fc 0 _HLTBByteSwap_itlb
PUBLIC c01f0 0 _HLTBByteSwap_itl1
PUBLIC c02ce 0 _HLTBByteSwap_itl0
PUBLIC c0302 0 Flip_INTL
PUBLIC c032c 0 _HLTBByteSwap_KCAP
PUBLIC c03c4 0 _HLTBByteSwap_KCHR
PUBLIC c0466 0 _HLTBByteSwap_itlk
PUBLIC c04b6 0 _HLTBByteSwap_xmnu
PUBLIC c0576 0 _HLTBByteSwap_WIND
PUBLIC c0622 0 _HLTBByteSwap_ALRT
PUBLIC c0680 0 _HLTBByteSwap_txtn
PUBLIC c0892 0 _HLTBByteSwap_cicn
PUBLIC c0ab8 0 _HLTBByteSwap_mctb
PUBLIC c0ba2 0 _HLTBByteSwap_wctb
PUBLIC c0c12 0 _HLTBByteSwap_dftb
PUBLIC c0d14 0 _HLTBByteSwap_cctb
PUBLIC c0d84 0 SWAP_VAL(unsigned long)
PUBLIC c0d8c 0 Flip_typeSInt64
PUBLIC c0d96 0 Flip_typeLongDateTime
PUBLIC c0da0 0 Flip_typeIEEE32BitFloatingPoint
PUBLIC c0daa 0 Flip_typeIEEE64BitFloatingPoint
PUBLIC c0db4 0 Flip_typeRGBColor
PUBLIC c0ddc 0 Flipaedt
PUBLIC c0dfe 0 Flip_typeProcessSerialNumber
PUBLIC c0e1e 0 Flip_typeUInt32
PUBLIC c0e28 0 Flip_typeFixedRectangle
PUBLIC c0e58 0 Flip_typeFixedPoint
PUBLIC c0e78 0 Flip_typeLongFixed
PUBLIC c0e82 0 Flip_typeUnicodeText
PUBLIC c0ea4 0 Flip_typeArc
PUBLIC c0ee4 0 Flip_typeQDPoint
PUBLIC c0f04 0 Flip_typeQDRectangle
PUBLIC c0f34 0 Flip_typeFSRef
PUBLIC c0f8e 0 Flip_typeSInt16
PUBLIC c0f98 0 Flip_typeExtended
PUBLIC c0fd0 0 Flip_typeDecimalStruct
PUBLIC c101a 0 Flip_typeScrapStyles
PUBLIC c10be 0 Flip_typeFSS
PUBLIC c1100 0 Flip_typeSInt32
PUBLIC c110a 0 Flip_MachineLocation(FlipManager*)
PUBLIC c1132 0 Flip_aeut
PUBLIC c15b8 0 _DSByteSwap_drag
PUBLIC c1f30 0 aliasSuffix
PUBLIC c1fcc 0 kCFMHelperAppPath
PUBLIC c3770 0 _ftpFileSystem(statfs*)::kFTPFSURLScheme
PUBLIC c410c 0 sgNetworkDomainPath
PUBLIC c4118 0 sgAppleInternalDomainPath
PUBLIC c4128 0 sgLocalDomainPath
PUBLIC c4134 0 sgSystemDomainPath
PUBLIC c4d6c 0 sArchType.30260
PUBLIC c53f0 0 __FUNCTION__.11886
PUBLIC c542c 0 gNanString.8015
PUBLIC c64e8 0 format.21827
PUBLIC c68cc 0 __FUNCTION__.64293
PUBLIC c91a8 0 CarbonCoreVersionString
PUBLIC c95fc 0 __i686.get_pc_thunk.bx
PUBLIC c9600 0 __i686.get_pc_thunk.cx
PUBLIC c9604 0 __i686.get_pc_thunk.bx
PUBLIC c9608 0 CollectionItemRec::setAttributes(unsigned long)
PUBLIC c9618 0 CollectionItemRec::getAttributes()
PUBLIC c9626 0 CollectionItemRec::getOffset()
PUBLIC c9634 0 GET_ITEM_DATA_SIZE(OpaqueCollection*, CollectionItemRec*)
PUBLIC c966a 0 CollectionItemRec::getId()
PUBLIC c9678 0 CollectionItemRec::getTag()
PUBLIC c9684 0 FlatCollectionRec::getDefaultAttributes()
PUBLIC c9692 0 FlatCollectionRec::getVersion()
PUBLIC c969e 0 FlatCollectionRec::getMapSize()
PUBLIC c96ac 0 CollectionItemRec::setId(long)
PUBLIC c96bc 0 CollectionItemRec::setTag(unsigned long)
PUBLIC c96cc 0 GET_ITEM_SIZE(OpaqueCollection*, CollectionItemRec*, long&)
PUBLIC c971e 0 CollectionItemRec::setOffset(long)
PUBLIC c972e 0 JAM_ITEM_DATA_SIZE(OpaqueCollection*, CollectionItemRec*, long)
PUBLIC c9774 0 FlatCollectionRec::setMapSize(unsigned long)
PUBLIC c9784 0 FlatCollectionRec::setDefaultAttributes(unsigned long)
PUBLIC c9794 0 FlatCollectionRec::setVersion(long)
PUBLIC c97a4 0 DiscoveredArray::getMaxCount() const
PUBLIC c97b2 0 DiscoveredArray::getCount() const
PUBLIC c97c0 0 DiscoveredArray::getElemSize() const
PUBLIC c97ce 0 BE_UTCDateTime::getHighSeconds() const
PUBLIC c97e0 0 DiscoveredHolder::setPathIDArraySignature(unsigned long)
PUBLIC c97f0 0 DiscoveredHolder::setInitialized(unsigned long)
PUBLIC c9800 0 BE_UTCDateTime::setLowSeconds(unsigned long)
PUBLIC c9810 0 SystemComponent::setComponentPlatformResourceSize(unsigned long)
PUBLIC c9820 0 BE_ResourceSpec::getResType() const
PUBLIC c982c 0 SystemComponent::setComponentPathID(unsigned long)
PUBLIC c983c 0 BE_ResourceSpec::setResType(unsigned long)
PUBLIC c984c 0 ComponentFileReference::getComponentPathID() const
PUBLIC c9858 0 ComponentFileReference::setIsCFBundleBased(unsigned long)
PUBLIC c9868 0 ComponentFileReference::setFlatRefSize(unsigned long)
PUBLIC c9878 0 ComponentFileReference::setComponentPathID(unsigned long)
PUBLIC c9888 0 DiscoveredArray::setCount(unsigned long)
PUBLIC c9898 0 DiscoveredArray::setSeed(long)
PUBLIC c98a8 0 DiscoveredArray::getSeed() const
PUBLIC c98b4 0 DiscoveredArray::setElemSize(unsigned long)
PUBLIC c98c4 0 DiscoveredArray::setMaxCount(unsigned long)
PUBLIC c98d4 0 BE_UTCDateTime::getLowSeconds() const
PUBLIC c98e2 0 DiscoveredHolder::getInitialized() const
PUBLIC c98f0 0 DiscoveredHolder::getPathIDArraySignature() const
PUBLIC c98fe 0 BE_UTCDateTime::setFraction(unsigned short)
PUBLIC c9912 0 BE_UTCDateTime::setHighSeconds(unsigned short)
PUBLIC c9926 0 BE_UTCDateTime::set(UTCDateTime const&)
PUBLIC c9968 0 BE_ResourceSpec::getResID() const
PUBLIC c997a 0 BE_ResourceSpec::setResID(short)
PUBLIC c998e 0 BE_ResourceSpec::set(ResourceSpec const&)
PUBLIC c99c0 0 BE_UTCDateTime::getFraction() const
PUBLIC c99d4 0 BE_ComponentResourceExtension::getComponentIconFamily() const
PUBLIC c99e6 0 ComponentFileReference::getIsCFBundleBased() const
PUBLIC c99f4 0 ComponentFileReference::getFlatRefSize() const
PUBLIC c9a02 0 BE_ComponentResourceExtension::setComponentRegisterFlags(long)
PUBLIC c9a12 0 BE_ComponentResourceExtension::setComponentVersion(long)
PUBLIC c9a22 0 SystemComponent::setComponentPlatformType(unsigned long)
PUBLIC c9a32 0 BE_ComponentDescription::setComponentFlagsMask(unsigned long)
PUBLIC c9a42 0 BE_ComponentDescription::setComponentManufacturer(unsigned long)
PUBLIC c9a52 0 BE_ComponentDescription::setComponentSubType(unsigned long)
PUBLIC c9a62 0 BE_ComponentDescription::setComponentType(unsigned long)
PUBLIC c9a72 0 SystemComponent::getComponentPathID() const
PUBLIC c9a80 0 BE_ComponentResourceExtension::getComponentRegisterFlags() const
PUBLIC c9a8e 0 BE_ComponentResourceExtension::getComponentVersion() const
PUBLIC c9a9a 0 BE_ComponentDescription::getComponentFlagsMask() const
PUBLIC c9aa8 0 SystemComponent::getComponentPlatformResourceSize() const
PUBLIC c9ab6 0 SystemComponent::getComponentPlatformType() const
PUBLIC c9ac4 0 BE_ComponentDescription::setComponentFlags(unsigned long)
PUBLIC c9ad4 0 BE_ComponentDescription::set(ComponentDescription const&)
PUBLIC c9b32 0 BE_ComponentDescription::getComponentFlags() const
PUBLIC c9b40 0 BE_ComponentDescription::getComponentManufacturer() const
PUBLIC c9b4e 0 BE_ComponentDescription::getComponentSubType() const
PUBLIC c9b5c 0 BE_ComponentDescription::getComponentType() const
PUBLIC c9b68 0 BE_ComponentDescription::get(ComponentDescription*) const
PUBLIC c9bb4 0 BE_ComponentResourceExtension::setComponentIconFamily(short)
PUBLIC c9bc8 0 BE_ResourceSpec::get(ResourceSpec*) const
PUBLIC c9bf4 0 _FSCachedMount::_FSCachedMount(_FSCachedMount const*)
PUBLIC c9cdc 0 _FSCachedMount::getVRefNum() const
PUBLIC c9cf0 0 _FSCachedMount::getFetchTime() const
PUBLIC c9d00 0 _SetVolumeUInt32DataInfo::getData() const
PUBLIC c9d0e 0 _FSCachedMount::setMaxNameChars(unsigned long)
PUBLIC c9d22 0 _FSCachedMount::setVolumeIconRef(unsigned long)
PUBLIC c9d36 0 _FSCachedMount::setDeviceType(unsigned long)
PUBLIC c9d4a 0 _FSCachedMount::setVolumeCapabilities(unsigned long)
PUBLIC c9d5e 0 _FSCachedMount::setVolumeAttributes(unsigned long)
PUBLIC c9d72 0 be_timespec::get(timespec*) const
PUBLIC c9d8c 0 be_statfs::get_ffree() const
PUBLIC c9d9a 0 be_statfs::get_files() const
PUBLIC c9da8 0 be_statfs::get_bavail() const
PUBLIC c9db6 0 _FSCachedMount::setFetchTime(long)
PUBLIC c9dca 0 be_timespec::set(timespec const&)
PUBLIC c9de4 0 _SetVolumeUInt32DataInfo::setData(unsigned long)
PUBLIC c9df4 0 be_statfs::get_owner() const
PUBLIC c9e02 0 _FSCachedMount::getVolumeCapabilities() const
PUBLIC c9e12 0 _FSCachedMount::getVolumeIconRef() const
PUBLIC c9e22 0 _FSCachedMount::getMaxNameChars() const
PUBLIC c9e32 0 be_statfs::get_fsID() const
PUBLIC c9e40 0 _FSCachedMount::getVolumeAttributes() const
PUBLIC c9e50 0 _FSCachedMount::getDeviceType() const
PUBLIC c9e60 0 _SetPOSIXModDateInfo::getVRefNum() const
PUBLIC c9e70 0 _SetVolumeUInt32DataInfo::getVRefNum() const
PUBLIC c9e80 0 _GetVolumeDataInfo::getVRefNum() const
PUBLIC c9e90 0 _SetVolumeUUIDInfo::getVRefNum() const
PUBLIC c9ea0 0 _FSCachedMount::setBackingStoreVolume(short)
PUBLIC c9eb8 0 _FSCachedMount::setVRefNum(short)
PUBLIC c9ed0 0 be_statfs::swapBody(statfs*)
PUBLIC c9f44 0 be_statfs::get(statfs*) const
PUBLIC c9f72 0 be_statfs::set(statfs const&)
PUBLIC c9fa0 0 _SetPOSIXModDateInfo::setVRefNum(short)
PUBLIC c9fb4 0 _SetPOSIXModDateInfo::_SetPOSIXModDateInfo(short, timespec const&)
PUBLIC c9fe6 0 _GetVolumeDataInfo::setVRefNum(short)
PUBLIC c9ffa 0 _SetVolumeUInt32DataInfo::setVRefNum(short)
PUBLIC ca00e 0 _SetVolumeUInt32DataInfo::_SetVolumeUInt32DataInfo(short, unsigned long)
PUBLIC ca03e 0 _FSCachedMount::getBackingStoreVolume() const
PUBLIC ca052 0 be_statfs::be_statfs(statfs const&)
PUBLIC ca05c 0 _FSCachedMount::_FSCachedMount(_FSCachedMount const*, long, int)
PUBLIC ca154 0 _FSCachedMount::_FSCachedMount(be_statfs const&, long, int)
PUBLIC ca1c4 0 _FSCachedMount::_FSCachedMount(CachedVolumeInfo*, long, int)
PUBLIC ca2e4 0 FSMount::hfsstandard()
PUBLIC ca2ec 0 FSMount::encodingsBitmap(unsigned long long*)
PUBLIC ca302 0 FSMount::vcb()
PUBLIC ca30e 0 FSMount::startbulk(unsigned long, char const*)
PUBLIC ca316 0 FSMount::getattrsbulk(void*, unsigned long, unsigned long*, unsigned long, unsigned long, FSAttributeInfo*, unsigned char*)
PUBLIC ca320 0 FSMount::endbulk(void*)
PUBLIC ca326 0 BE_FlatFolderCacheItem::getDomain() const
PUBLIC ca336 0 BE_FlatFolderCache::getSeed() const
PUBLIC ca344 0 BE_FlatFolderCache::setSeed(unsigned long)
PUBLIC ca354 0 BE_FlatFolderCacheItem::setSizeOfConstantPoolData(unsigned long)
PUBLIC ca364 0 BE_FlatFolderCacheItem::setOffsetToRefInConstantPool(unsigned long)
PUBLIC ca374 0 BE_FlatFolderCacheItem::setFolderType(unsigned long)
PUBLIC ca384 0 BE_FlatFolderCacheItem::setUID(unsigned int)
PUBLIC ca394 0 BE_FlatFolderCache::setConstantPoolSize(unsigned long)
PUBLIC ca3a4 0 BE_FlatFolderCache::setCount(unsigned long)
PUBLIC ca3b4 0 BE_FlatFolderCache::setOffsetToConstantPool(unsigned long)
PUBLIC ca3c4 0 BE_FlatFolderCache::setCapacity(unsigned long)
PUBLIC ca3d4 0 BE_FlatFolderCache::setSize(unsigned long)
PUBLIC ca3e4 0 BE_FlatFolderCache::getCount() const
PUBLIC ca3f2 0 BE_FlatFolderCache::incCount(long)
PUBLIC ca41c 0 BE_FlatFolderCacheItem::getFolderType() const
PUBLIC ca42a 0 BE_FlatFolderCacheItem::getUID() const
PUBLIC ca438 0 BE_FlatFolderCacheItem::getOffsetToRefInConstantPool() const
PUBLIC ca446 0 BE_FlatFolderCacheItem::getSizeOfConstantPoolData() const
PUBLIC ca454 0 BE_FlatFolderCache::getCapacity() const
PUBLIC ca462 0 BE_FlatFolderCache::getSize() const
PUBLIC ca46e 0 BE_FlatFolderCache::getOffsetToConstantPool() const
PUBLIC ca47c 0 BE_FlatFolderCache::getConstantPoolSize() const
PUBLIC ca48a 0 BE_FlatFolderCache::incConstantPoolSize(long)
PUBLIC ca4b4 0 BE_FlatFolderCacheItem::setDomain(short)
PUBLIC ca4c8 0 BEBuffer::setSize(unsigned long)
PUBLIC ca536 0 BEBuffer::write(void const*, unsigned long)
PUBLIC ca5d2 0 X_CPlusArray<unsigned long>::add(unsigned long)
PUBLIC ca648 0 X_CPlusArray<X_CPlusArray<CLVDatum>*>::add(X_CPlusArray<CLVDatum>*)
PUBLIC ca6be 0 X_CPlusArray<CLVDatum>::add(CLVDatum)
PUBLIC ca74e 0 X_CPlusArray<unsigned char>::add(unsigned char)
PUBLIC ca7c6 0 CLVContext::getConstantString(unsigned long) const
PUBLIC ca7e2 0 CLVContext::getDatumArrayForKey(unsigned char const*, unsigned long*) const
PUBLIC ca85c 0 CLVContext::CLVContext(void const*, unsigned long)
PUBLIC ca88e 0 BEBuffer::write(unsigned long)
PUBLIC ca8b8 0 ConstantPool::internString(unsigned char const*)
PUBLIC ca976 0 ConstantPool::internString(__CFString const*)
PUBLIC ca9a2 0 ConstantPool::writeConstantPool(BEBuffer*)
PUBLIC ca9c6 0 Timer::GetElapsedTime()
PUBLIC caa72 0 CLVMergeContext::getKeyDatumArray(unsigned char const*)
PUBLIC cab2c 0 CLVMergeContext::getKeyDatumArray(__CFString const*)
PUBLIC cab58 0 ConstantPool::~ConstantPool()
PUBLIC cab8c 0 CLVMergeContext::~CLVMergeContext()
PUBLIC cac18 0 ConstantPool::ConstantPool()
PUBLIC cac76 0 CLVMergeContext::CLVMergeContext()
PUBLIC cacca 0 __i686.get_pc_thunk.dx
PUBLIC cacce 0 SCSession::getPort()
PUBLIC cacda 0 SCSession::getUID()
PUBLIC cace6 0 SCSession::canBeDeleted()
PUBLIC cacf2 0 SCSession::noteLogout()
PUBLIC cad1a 0 SCServerSession::getMsgCount()
PUBLIC cad28 0 SCCacheable::getID() const
PUBLIC cad34 0 SCService::setInfo(SCServiceInfo*)
PUBLIC cad42 0 SCService::getInfo()
PUBLIC cad4e 0 SCService::acceptsMsg(mach_msg_header_t*)
PUBLIC cad6e 0 SCService::getDemux()
PUBLIC cad7c 0 SCService::clientAttached(int, unsigned int)
PUBLIC cadaa 0 SCService::noteSessionBirth(unsigned int)
PUBLIC cadd0 0 SCService::caresAboutSessionBirth()
PUBLIC cadf6 0 CPlusArray<SCService*>::count()
PUBLIC cae02 0 CPlusArray<SCService*>::get(int)
PUBLIC cae12 0 CPlusArray<PrefsBucket>::add(PrefsBucket const&)
PUBLIC caeaa 0 CPlusArray<SCService*>::add(SCService* const&)
PUBLIC caf22 0 CPlusArray<SCCacheable*>::add(SCCacheable* const&)
PUBLIC caf9a 0 FlipManager::FlipManager(unsigned long, unsigned long, short, void*, unsigned long, unsigned char, int (*) [18])
PUBLIC caff0 0 FlipManager::~FlipManager()
PUBLIC cb0d6 0 FlipManager::SWAP_U16()
PUBLIC cb108 0 FlipManager::SWAP_S32()
PUBLIC cb13c 0 FlipManager::SWAP_COUNT16()
PUBLIC cb19a 0 FlipManager::SWAP_S16()
PUBLIC cb1cc 0 FlipManager::SWAP_U32()
PUBLIC cb20a 0 FlipManager::PEEK_U32()
PUBLIC cb242 0 FlipManager::SWAP_COUNT32()
PUBLIC cb294 0 FlipManager::PEEK_S16()
PUBLIC cb2ce 0 FlipManager::PEEK_S32()
PUBLIC cb306 0 FlipManager::SWAP_RECT()
PUBLIC cb3cc 0 FlipManager::PEEK_U16()
PUBLIC cb40a 0 FlipManager::SWAP_RGB()
PUBLIC cb4d0 0 FlipManager::SWAP_COUNT8()
PUBLIC cb502 0 FlipManager::ALIGN_16()
PUBLIC cb538 0 FlipManager::SWAP_S64()
PUBLIC cb57a 0 FlipManager::SWAP_FLOAT()
PUBLIC cb5b8 0 FlipManager::SWAP_DOUBLE()
PUBLIC cb658 0 pi
PUBLIC cba18 0 CarbonCoreVersionNumber
PUBLIC cba40 0 C.153.50310
PUBLIC cbac0 0 tens.4001
PUBLIC cbb78 0 white.3793
PUBLIC cbb80 0 xtable.4018
PUBLIC cbca0 0 atnSplValue
PUBLIC cbca8 0 sinSplValue
PUBLIC cbcb0 0 cs0SplValue
PUBLIC cbcb8 0 trigFixedbias
PUBLIC cbcc0 0 Fractbias
PUBLIC cbcc8 0 FixedSplValue
PUBLIC cbcd0 0 FixedSplValNeg
PUBLIC cbcd8 0 _FE_DOWNWARD_ENV
PUBLIC cbce8 0 FractSplValue
PUBLIC cbcf0 0 FractSplValNeg
PUBLIC cbcf8 0 Fixedbias
PUBLIC cbd80 0 bias.29960
PUBLIC cbd90 0 overflowValue.30019
PUBLIC cbda0 0 round.30018
PUBLIC cbde0 0 overflowValue.29987
PUBLIC cbdf0 0 round.29986
PUBLIC cbe80 0 kWhichFolders
PUBLIC cbea0 0 addOneComponent::C.285
PUBLIC cc0a0 0 addOneComponent::C.274
PUBLIC cc1a0 0 _ZZN21SCComponentsCacheableC4EPKcE5C.219
PUBLIC cc280 0 __gCvtTables2
PUBLIC cc2c8 0 __gCvtTables
PUBLIC cc2da 0 shortDateOrderArray.30964
PUBLIC cc300 0 gLeapStarts
PUBLIC cc340 0 gMonthStarts
PUBLIC cc3c0 0 POSIXMount::getattrscore(bool, char const*, unsigned long, char const*, unsigned long, FSAttributeInfo*, unsigned long, unsigned char*)::C.173
PUBLIC cc4c0 0 kFSResourceForkName
PUBLIC cc4e0 0 gClassicSystemFolderDesc
PUBLIC cc540 0 gRoutingDescList
PUBLIC ccb80 0 gBuiltInFolderDescList
PUBLIC cf2c0 0 initial_values
PUBLIC cf370 0 nullsetVals.23582
PUBLIC cf384 0 nullsetKeys.23581
PUBLIC cf3a0 0 localeDefaultList
PUBLIC cf7c0 0 localeTagToUbrkName
PUBLIC cfce0 0 localeTagToUcolName
PUBLIC d0200 0 localeTagToLangReg
PUBLIC d0d60 0 StaticCompressionTable.18869
PUBLIC d0f60 0 StaticCompressionTable.18582
PUBLIC d10e0 0 NULLRF
PUBLIC d1220 0 gMacOSStatusErrorStringTable
PUBLIC ed2e0 0 gMacOSStatusErrorStrings
PUBLIC f4160 0 gCachedResTypes
PUBLIC f4180 0 default_itlm
PUBLIC f41c0 0 default_itlb
PUBLIC f4200 0 default_itlc
PUBLIC f4240 0 gLangToScriptMap
PUBLIC f44c0 0 gSCRow3Map.7140
PUBLIC f4520 0 gSCRow1Map.7139
PUBLIC f4580 0 gRow3Tab.7059
PUBLIC f45de 0 gRow2Tab.7058
PUBLIC f4600 0 gRow1Tab.7057
PUBLIC f4660 0 gTCRow2Map.7107
PUBLIC f4720 0 gTCRow1Map.7106
PUBLIC f47e0 0 gRow1Map.7022
PUBLIC f48a0 0 firstByteMark
PUBLIC f48c0 0 offsetsFromUTF8
PUBLIC f48e0 0 trailingBytesForUTF8
PUBLIC f49e0 0 gItlmScriptCodeOrder
PUBLIC f4a40 0 gNearestEncodingBlockC00
PUBLIC f4a4c 0 gNearestEncodingBlockB00
PUBLIC f4a54 0 gNearestEncodingBlockA00
PUBLIC f4a80 0 gNearestEncodingBlock900
PUBLIC f4ba0 0 gNearestEncodingBlock800
PUBLIC f4cc0 0 gNearestEncodingBlock600
PUBLIC f4e20 0 gNearestEncodingBlock500
PUBLIC f4e80 0 gNearestEncodingBlock400
PUBLIC f4f20 0 gNearestEncodingBlock200
PUBLIC f4f60 0 gVariantInfo
PUBLIC f5090 0 gISOCodeToLangRefine
PUBLIC f50a0 0 gISOCodeToLang
PUBLIC f5280 0 gISOCodeToISOLang
PUBLIC f5380 0 gISOCodeToRegRefine
PUBLIC f5440 0 gISOCodeToReg
PUBLIC f5520 0 gRegToLang
PUBLIC f56e0 0 gVariantStringsInfo
PUBLIC f59c0 0 gTextEncodingToScriptIndex
PUBLIC f5a60 0 gTextEncodingBaseToScript
PUBLIC f5c88 0 gLangToScriptException
PUBLIC f5ca0 0 gLangToScript
PUBLIC f5f00 0 gScriptToTextEncodingBase
PUBLIC f6020 0 gRefineTextEncodingBase
PUBLIC f61a0 0 uprp_131
PUBLIC f9240 0 uprp_130
PUBLIC fa5e0 0 uprp_129
PUBLIC fd800 0 uprp_127
PUBLIC 101b20 0 uprp_126
PUBLIC 106340 0 uprp_125
PUBLIC 108ae0 0 uprp_122
PUBLIC 10e800 0 icuToTextCommonBidiCat
PUBLIC 10e860 0 icuToTextCommonGenCat
PUBLIC 10e8e0 0 gDefaultToRealTextEncodings
PUBLIC 10e900 0 unicodeBaseVersions
PUBLIC 10e914 0 unicodeDecompVariants
PUBLIC 10e920 0 probsByIndexAndEnc
PUBLIC 14dcc0 0 transProbByteClassEntries
PUBLIC 14e5c0 0 transProbStartClassIndex
PUBLIC 14e8c0 0 byteValueProbIndex
PUBLIC 14ea40 0 byteClassTable
PUBLIC 14eb40 0 mapEncodingToClass
PUBLIC 14ee40 0 mapClassToDefaultEncoding
PUBLIC 14eea0 0 mibToEncodings
PUBLIC 14f2c0 0 cmpTab
PUBLIC 14f380 0 stripTab
PUBLIC 14f3e0 0 upperTab
PUBLIC 14f460 0 gTransliterate28673Data
PUBLIC 14f5a0 0 gTransliterate28672Data
PUBLIC 14f6e0 0 gTransliterate17412Data
PUBLIC 14f820 0 gTransliterate17411Data
PUBLIC 14fa20 0 gTransliterate17410Data
PUBLIC 14fd00 0 gTransliterate17409Data
PUBLIC 14ff00 0 gTransliterate17408Data
PUBLIC 150ba0 0 gTransliterate16901Data
PUBLIC 1517a0 0 gTransliterate16900Data
PUBLIC 1520c0 0 gTransliterate16899Data
PUBLIC 1525c0 0 gTransliterate16898Data
PUBLIC 1525e0 0 gTransliterate16897Data
PUBLIC 152720 0 gTransliterate16896Data
PUBLIC 152860 0 gTransliterate16403Data
PUBLIC 1533e0 0 gTransliterate16402Data
PUBLIC 153cc0 0 gTransliterate16401Data
PUBLIC 1543a0 0 gTransliterate16400Data
PUBLIC 1548a0 0 gTransliterate16399Data
PUBLIC 1553c0 0 gTransliterate16398Data
PUBLIC 155c60 0 gTransliterate16397Data
PUBLIC 155e40 0 gTransliterate16396Data
PUBLIC 156040 0 gTransliterate16395Data
PUBLIC 156220 0 gTransliterate16394Data
PUBLIC 156440 0 gTransliterate16393Data
PUBLIC 156660 0 gTransliterate16392Data
PUBLIC 156840 0 gTransliterate16391Data
PUBLIC 157300 0 gTransliterate16390Data
PUBLIC 157ac0 0 gTransliterate16389Data
PUBLIC 158700 0 gTransliterate16388Data
PUBLIC 159040 0 gTransliterate16387Data
PUBLIC 159ca0 0 gTransliterate16386Data
PUBLIC 15a600 0 gTransliterate16385Data
PUBLIC 15a820 0 gTransliterate16384Data
PUBLIC 15aa40 0 nullSet
PUBLIC 15aa4c 0 gScriptPropStateTable
PUBLIC 15ac4e 0 gGenPropStateTable
PUBLIC 15ade0 0 gDTScriptCharProp
PUBLIC 15aee0 0 gDTGenCharProp
PUBLIC 15afe0 0 gLowerCaseTable
PUBLIC 15c620 0 uCharGrpTrie
PUBLIC 15e920 0 uElemDirTrie
PUBLIC 1616c0 0 uCombClassTrie
PUBLIC 1624c0 0 firstByteMark
PUBLIC 1624c8 0 offsetsFromUTF8
PUBLIC 1624e0 0 bytesFromUTF8
PUBLIC 1625e0 0 _udatHFSDecompSeqs
PUBLIC 1658a0 0 _umapLatinNextStepLatin
PUBLIC 1662c0 0 _umapLatinMacMailLatin1
PUBLIC 1672c0 0 _umapJapanEUCBase
PUBLIC 18e420 0 _umapLatinASCII
PUBLIC 18ea20 0 _umapLatinWinLatin1
PUBLIC 18f660 0 _umapLatinMusCDLatin1
PUBLIC 1906a0 0 _umapLatinISOLatin_1
PUBLIC 191320 0 _umapCanadaAborigMacInuit
PUBLIC 191c60 0 _umapArabicMacFarsi
PUBLIC 193280 0 _umapSymbolMacKeyboard
PUBLIC 193e00 0 _umapLatinMacGaelic
PUBLIC 194a20 0 _umapLatinMacCeltic
PUBLIC 1955e0 0 _umapLatinMacRomanian
PUBLIC 196680 0 _umapLatinMacIcelandic
PUBLIC 197440 0 _umapLatinMacCroatian
PUBLIC 1980e0 0 _umapLatinMacTurkish
PUBLIC 198d20 0 _umapSymbolMacDingbats
PUBLIC 199ea0 0 _umapSymbolMacSymbol
PUBLIC 19b2a0 0 _umapLatinMacCentralEuro
PUBLIC 19bec0 0 _umapTibetanMacTibetan
PUBLIC 19c640 0 _umapChinSmpEUCBase
PUBLIC 1db380 0 _umapThaiMacThai
PUBLIC 1dbe20 0 _umapIndicMacGujarati
PUBLIC 1dc7a0 0 _umapIndicMacGurmukhi
PUBLIC 1dd3a0 0 _umapIndicMacDevanagari
PUBLIC 1dde60 0 _umapCyrillicMacCyrillic
PUBLIC 1de920 0 _umapGreekMacGreek
PUBLIC 1df5c0 0 _umapHebrewMacHebrew
PUBLIC 1e0900 0 _umapArabicMacArabic
PUBLIC 1e1f80 0 _umapKoreanEUCBase
PUBLIC 21a300 0 _umapChinTrdBig5Base
PUBLIC 25e460 0 _umapJapanSJISBase
PUBLIC 28be20 0 _umapLatinMacRoman
PUBLIC 28ce80 0 _unormMapInfo
PUBLIC 28cf40 0 _umapMapList
PUBLIC 28d560 0 stateTable
PUBLIC 28e560 0 dirStateTransitions
PUBLIC 28ef40 0 uDecompSeqData
PUBLIC 295e40 0 uDecompTrie
PUBLIC 297de0 0 pairIndexToComposition
PUBLIC 2a1480 0 uCompTrieSecond
PUBLIC 2a29a0 0 uCompTrieFirst
PUBLIC 2a3680 0 kCoreEndianResourceManagerDomainHash
PUBLIC 2a3e80 0 kCoreEndianAppleEventManagerDomainHash
PUBLIC 2a6f84 0 gNumOfVariantInfo
PUBLIC 10000000 0 gTransactionsListLock
PUBLIC 10000040 0 gSharedUniverseLock
PUBLIC 1000006c 0 sDumpSpace
PUBLIC 100000ac 0 gNextTransactionID
PUBLIC 100000b0 0 sNeedToInit.40431
PUBLIC 100000c0 0 gClientGlobalUniverseLock.44697
PUBLIC 100000ec 0 needToInit.44749
PUBLIC 10000100 0 kISMsgMap
PUBLIC 10000160 0 gFMWDataAvailableCond
PUBLIC 10000180 0 gFMWOperationsLock
PUBLIC 100001ac 0 gFileIDTreeFmodWatchDidNotRun
PUBLIC 100001c0 0 gFileIDTreeFmodWatchTimerLock
PUBLIC 100001ec 0 fsevents_fd
PUBLIC 100001f0 0 gCarbonDiskSwitchDialog
PUBLIC 100001f4 0 sValidateHandleSize
PUBLIC 100001f8 0 GetComponentCacheableRef()::kCacheableName
PUBLIC 100001fc 0 ComponentRegistryIDToFileReference::gPathRefArraysNotInitialized
PUBLIC 10000200 0 kWhichFolderNames
PUBLIC 1000020c 0 kBundleExtensions
PUBLIC 10000218 0 GetDomainName(unsigned long)::kUnknownDomainName
PUBLIC 1000021c 0 GetDomainName(unsigned long)::kUserDomainName
PUBLIC 10000220 0 GetDomainName(unsigned long)::kLocalDomainName
PUBLIC 10000224 0 GetDomainName(unsigned long)::kSystemDomainName
PUBLIC 10000240 0 SCComponentsCacheable::sDiscoveredLocalComponentsHolder
PUBLIC 100002a0 0 SCComponentsCacheable::sDiscoveredSystemComponentsHolder
PUBLIC 10000300 0 kPlatformNames
PUBLIC 10000340 0 gComponentDebug
PUBLIC 10000344 0 gComponentManagerGlobals
PUBLIC 10000360 0 gComponentManagerMutex
PUBLIC 1000038c 0 maxVal.7880
PUBLIC 100003c0 0 gDebugComponentListLock
PUBLIC 10000400 0 kDesktopDBServiceName
PUBLIC 10000420 0 theMutex.33878
PUBLIC 1000044c 0 VNNotInited.33754
PUBLIC 10000460 0 gFSCacheableClientLock
PUBLIC 1000048c 0 sFSCacheableOnce
PUBLIC 10000494 0 sInitLocalMountMutex
PUBLIC 1000049c 0 kVolumeListName
PUBLIC 100004a0 0 _FSCachedMount_GetVRefNum(_FSCachedMount*)::sVRefNumSeed
PUBLIC 100004c0 0 gFSFileOperationInitialized
PUBLIC 100004e0 0 sFSFileOpertationInitMutex.53719
PUBLIC 10000514 0 POSIXMount::nodeType(unsigned long, char const*, unsigned char, FSAttributeInfo*)::sFileManagerTypes
PUBLIC 10000540 0 sCarbonFileList
PUBLIC 10000560 0 sFileListLock
PUBLIC 100005e8 0 NewVDIMacFileRefNum()::sVDIRefNum
PUBLIC 100005ea 0 NewUFSMacFileRefNum()::sUFSRefNum
PUBLIC 100005ec 0 DoUpdateSearchState(CatPositionRec*, searchstate*)::sUniqueID
PUBLIC 10000600 0 gFSFileSecurityInitialized
PUBLIC 10000620 0 sFSFileSecurityInitMutex.18862
PUBLIC 10000654 0 gUnicodeServicesAvailable
PUBLIC 10000658 0 gDefaultBaseEncoding
PUBLIC 10000660 0 gFileManagerInitialized
PUBLIC 10000661 0 gFileIDTreesProtected
PUBLIC 10000664 0 FilesAppleDoubleDebug
PUBLIC 10000668 0 gRootMountPoint
PUBLIC 1000066c 0 gChrooted
PUBLIC 10000670 0 sDefaultDirectory
PUBLIC 10000680 0 INIT_FileManager()::sFileManagerInitMutex
PUBLIC 100006b4 0 _FSGetSessionUID::uid
PUBLIC 100006b8 0 _propKeys
PUBLIC 100006d0 0 FSMount::setProperty(unsigned long, void const*)::_readOnlyPropertyTags
PUBLIC 10000700 0 sClassicOpenSharedBehavior
PUBLIC 10000704 0 sClassicVolumeID
PUBLIC 10000720 0 sVolumeNotificationListLock
PUBLIC 10000760 0 _FSGetDiskArbSession(__DASession**, __DAApprovalSession**)::sFSDiskArbSessionCreationLock
PUBLIC 1000078c 0 bootVolumeNotificationObject
PUBLIC 10000790 0 gNeedToResynchronizeClassicPreferences
PUBLIC 10000794 0 sFolderCacheTree
PUBLIC 10000798 0 gBuiltInFolderDescListSize
PUBLIC 1000079c 0 sClassicDirID.20234
PUBLIC 100007a0 0 sFolderManagerLock
PUBLIC 100007cc 0 gFindFolderGuts
PUBLIC 100007d0 0 sZeroOutOutputParams.34347
PUBLIC 100007d8 0 sUID.21453
PUBLIC 100007dc 0 sHackForAdobeAppsRadar4035983.70209
PUBLIC 100007e0 0 sTimeToScanAllFrameworksForCVLFiles
PUBLIC 100007e8 0 clv_cacheable_once
PUBLIC 10000800 0 gGestaltMutex
PUBLIC 10000840 0 sReadSystemVersionLock
PUBLIC 1000086c 0 gestaltCPUType.25166
PUBLIC 10000880 0 gIntlFileCacheMutex
PUBLIC 100008ac 0 tagFieldEndOffsets
PUBLIC 100008c4 0 tagFieldPrefix
PUBLIC 100008ca 0 tagCharUpperCase
PUBLIC 100008d8 0 __gLocaleTagListHandle
PUBLIC 100008dc 0 __gLocalesClientCount
PUBLIC 100008e0 0 gLowMemTicks
PUBLIC 100008e4 0 gLowMemTopMapHndl
PUBLIC 100008e8 0 gLowMemTmpResLoad
PUBLIC 100008e9 0 gLowMemResLoad
PUBLIC 100008ea 0 gLowMemScrDmpEnb
PUBLIC 100008eb 0 gLowMemSdVolume
PUBLIC 100008ec 0 gLowMemSEvtEnb
PUBLIC 100008ed 0 gLowMemCPUFlag
PUBLIC 100008ee 0 gLowMemSoundLevel
PUBLIC 100008f0 0 gLowMemPrintErr
PUBLIC 100008f2 0 gLowMemCurPageOption
PUBLIC 100008f4 0 gLowMemCurApRefNum
PUBLIC 100008f6 0 gLowMemBufTgFBkNum
PUBLIC 100008f8 0 gLowMemBufTgFFlg
PUBLIC 100008fa 0 gLowMemResErr
PUBLIC 100008fc 0 gLowMemSysMap
PUBLIC 100008fe 0 gLowMemCurPitch
PUBLIC 10000900 0 gLowMemApplZone
PUBLIC 10000904 0 gLowMemSysZone
PUBLIC 10000908 0 gLowMemMinusOne
PUBLIC 1000090c 0 gLowMemOneOne
PUBLIC 10000910 0 gLowMemDefltStack
PUBLIC 10000914 0 gLowMemMinStack
PUBLIC 10000918 0 gLowMemBufTgDate
PUBLIC 1000091c 0 gLowMemBufTgFNum
PUBLIC 10000920 0 gLowMemRndSeed
PUBLIC 10000924 0 gLowMemJStash
PUBLIC 10000928 0 gLowMemToExtFS
PUBLIC 1000092c 0 gLowMemStackLowPoint
PUBLIC 10000930 0 gLowMemHighHeapMark
PUBLIC 10000934 0 gLowMemCurStackBase
PUBLIC 10000938 0 gLowMemSoundBase
PUBLIC 1000093c 0 gLowMemSoundPtr
PUBLIC 10000940 0 gLowMemHeapEnd
PUBLIC 10000944 0 gLowMemBufPtr
PUBLIC 10000948 0 gLowMemMemTop
PUBLIC 1000094c 0 gLowMemGZMoveHnd
PUBLIC 10000950 0 gLowMemGZRootHnd
PUBLIC 10000954 0 gLowMemSysResName
PUBLIC 10000980 0 lowMem
PUBLIC 100009a0 0 gLowMemSoundActive
PUBLIC 100009a1 0 gLowMemWWExist
PUBLIC 100009a2 0 gLowMemResOneDeep
PUBLIC 100009a3 0 gLowMemQDExist
PUBLIC 100009a4 0 gLowMemBrianBits
PUBLIC 100009a8 0 gLowMemROMMapHndl
PUBLIC 100009ac 0 gLowMemHSCHndl
PUBLIC 100009b0 0 gLowMemDskSwtchHook
PUBLIC 100009c0 0 gHandlePoolLock
PUBLIC 10000a48 0 _gDisableDisposePtr
PUBLIC 10000a60 0 _MP_AsyncTermGuard
PUBLIC 10000aa0 0 gRemoteCallMutex
PUBLIC 10000ae0 0 gTaskMutex
PUBLIC 10000b20 0 gTimingMutex
PUBLIC 10000b60 0 gTimingSemaphore
PUBLIC 10000bc0 0 gOpaqueIDMutex
PUBLIC 10000c00 0 sResourceManagerHash
PUBLIC 10000c04 0 sResourceManagerCacheInitialized
PUBLIC 10000c08 0 gCacheInvals
PUBLIC 10000c0c 0 gCacheClears
PUBLIC 10000c10 0 gCacheStores
PUBLIC 10000c14 0 gCacheChecks
PUBLIC 10000c18 0 gCacheHits
PUBLIC 10000c20 0 gResLowMem
PUBLIC 10000c40 0 gMapList
PUBLIC 10000c44 0 gCacheStore
PUBLIC 10000c60 0 sResourceMgrReadCacheLock
PUBLIC 10000c8c 0 sBufferFileRefNum.28933
PUBLIC 10000c8e 0 gResourceManagerInitialized
PUBLIC 10000c90 0 sNamedDataCacheableOnce
PUBLIC 10000c98 0 sDidInitOnce
PUBLIC 10000ca0 0 UpdateDebug
PUBLIC 10000ca4 0 LaunchDebug
PUBLIC 10000ca8 0 EventDebug
PUBLIC 10000cac 0 FSTraceDebug.21834
PUBLIC 10000cb0 0 userbreak.19389
PUBLIC 10000cc0 0 gFlipperMutex
PUBLIC 10000cec 0 ccAtExitFlags
PUBLIC 10000cf0 0 OLD_NEXT_COLORS
PUBLIC 10000d00 0 gDeferredTaskSemaphore
PUBLIC 10000d60 0 gQueueMutex
PUBLIC 10000da0 0 gTimerSemaphore
PUBLIC 10000e00 0 gEnabledScriptFlags
PUBLIC 10000e04 0 gServerStatus
PUBLIC 10000e08 0 sInitOnce
PUBLIC 10000e10 0 sSystemNameMap
PUBLIC 10000e40 0 kExecutablePath
PUBLIC 10000e44 0 SCServerSession::gServerSession
PUBLIC 10000e60 0 sSessionNameMap
PUBLIC 10000ee8 0 SCSession::gServerReapTimer
PUBLIC 10000eec 0 SCSession::gSessionList
PUBLIC 10000ef0 0 sCarbonCoreFactories
PUBLIC 10000f08 0 gMsgDebuggingEnabled
PUBLIC 10000f0c 0 scInternString(char const*)::sValCallbacks
PUBLIC 10000f20 0 scInternString(char const*)::sKeyCallbacks
PUBLIC 10000f40 0 uprpIndex
PUBLIC 10000f80 0 _gTECLowLevelConverterGlobalsPtr
PUBLIC 10000f84 0 _gTECInstalledScriptsLookedUp
PUBLIC 10000f85 0 _gTECInstalledScriptsSet
PUBLIC 10000f86 0 _gTECLowLevelAndCacheDataInited
PUBLIC 10000f87 0 _gTECHighLevelConverterInited
PUBLIC 10000fa0 0 _gTECInstalledScriptsMutex
PUBLIC 10000fe0 0 _gTECGlobalInitMutex
PUBLIC 10001020 0 gThreadMgrMutex
PUBLIC 10001054 0 _XHNDL_trapback_address
PUBLIC 10001058 0 _XHNDL_trapback_instruction
PUBLIC 1000105c 0 gThreadMgrNewbornCondvar
PUBLIC 10001080 0 gThreadMgrNewbornLock
PUBLIC 100010b4 0 ThreadDebug
PUBLIC 100010b8 0 defaultpri.34501
PUBLIC 100010bc 0 cooperative.34273
PUBLIC 100010e0 0 gLocaleOrder_Mutex
PUBLIC 1000110c 0 gLocaleOrder
PUBLIC 10001110 0 gLocaleOrderUpdated
PUBLIC 10001114 0 gUCTLocaleStrRef
PUBLIC 10001120 0 gUCTPlugins_Mutex
PUBLIC 1000114c 0 gUCTPlugins
PUBLIC 10001160 0 gUCTRefreshLocale_Mutex
PUBLIC 1000118c 0 gUCTRefreshLocale
PUBLIC 100011a0 0 gUCTInit_Mutex
PUBLIC 100011cc 0 gUCTInit
PUBLIC 100011e0 0 _kTextBreakLocatorClass
PUBLIC 10001220 0 gUnicodeUtilsTimestamp
PUBLIC 10001224 0 gUnicodeUtilsKey
PUBLIC 10001240 0 gDefaultTextBreakLocString
PUBLIC 10001260 0 gDefaultCollLocString
PUBLIC 10001280 0 gUnicodeUtilsReloadData
PUBLIC 10001281 0 gUnicodeUtilsInit
PUBLIC 100012a0 0 gUnicodeUtils_Mutex
PUBLIC 100012e0 0 gUTCLocationLoaded
PUBLIC 10001300 0 gUTCInit_Mutex
PUBLIC 10001340 0 gUTCLocationLoaded_Mutex
PUBLIC 10001380 0 uEncUBitForVersion
PUBLIC 100024c0 0 ServerFileIDTreeStorageServer_subsystem
PUBLIC 100025dc 0 rmAccessors
PUBLIC 10002680 0 kFSFinderInfoExtAttrString
PUBLIC 10002684 0 kFSResourceForkExtAttrString
PUBLIC 100026a0 0 kFSOperationThroughputKey
PUBLIC 100026a4 0 kFSOperationUserVisibleObjectsRemainingKey
PUBLIC 100026a8 0 kFSOperationUserVisibleObjectsCompleteKey
PUBLIC 100026ac 0 kFSOperationTotalUserVisibleObjectsKey
PUBLIC 100026b0 0 kFSOperationObjectsRemainingKey
PUBLIC 100026b4 0 kFSOperationObjectsCompleteKey
PUBLIC 100026b8 0 kFSOperationTotalObjectsKey
PUBLIC 100026bc 0 kFSOperationBytesRemainingKey
PUBLIC 100026c0 0 kFSOperationBytesCompleteKey
PUBLIC 100026c4 0 kFSOperationTotalBytesKey
PUBLIC 100026c8 0 kFSFileOperationPrivateRunLoopMode
PUBLIC 100026e0 0 __FSFileOperationClass
PUBLIC 100027c0 0 __FSFileSecurityClass
PUBLIC 100029d8 0 DiskArbOps
PUBLIC 100029f0 0 sNoticeStrings
PUBLIC 10002aa0 0 kClientKeyArray
PUBLIC 10002aa4 0 kBundleVersion
PUBLIC 10002aa8 0 kBundleID
PUBLIC 10002ac0 0 sSearchBase
PUBLIC 10002b00 0 initial_functions
PUBLIC 10002ba0 0 __gLocaleDefaultListHeader
PUBLIC 10002bc0 0 gRegionLanguageNames
PUBLIC 10002d80 0 tagReplacements
PUBLIC 10002e40 0 locStringToPartString
PUBLIC 10002ec0 0 kClientTable
PUBLIC 10002ed0 0 kCSStoreClass
PUBLIC 10002edc 0 tracestrings
PUBLIC 10003088 0 _ZZN9SCSessionC4EjjE18kPIDValueCallbacks
PUBLIC 100030a0 0 _scserver_SharedCache_subsystem
PUBLIC 10003100 0 _scsserver_SharedCacheSession_subsystem
PUBLIC 100032a0 0 gNearestMacTextEncodings
PUBLIC 10003320 0 gSpecialFontStrings
PUBLIC 10003340 0 gVariantStrings
PUBLIC 10003400 0 mapLangToEncLangCategories
PUBLIC 10003a60 0 encLangCategories
PUBLIC 10003c20 0 charsetToEncodings
PUBLIC 10004d20 0 encodingToCharsetsAndMibs
PUBLIC 10005820 0 gTransliterateSimpChineseEntry
PUBLIC 1000582c 0 gTransliterateKoreanEntry
PUBLIC 10005844 0 gTransliterateTradChineseEntry
PUBLIC 10005860 0 gTransliterateJapaneseEntry
PUBLIC 100058b4 0 kCSCheckFixUniversal
PUBLIC 100058b8 0 kCSCheckFixIntel
PUBLIC 100058bc 0 kCSCheckFixPPC
PUBLIC 100058c0 0 kCSCheckFixVersion
PUBLIC 100058e0 0 _icuEncAndRef
PUBLIC 10005b80 0 _umapEncAndRef
PUBLIC 100060e0 0 kHappyFunTable
PUBLIC 10006d80 0 gFileIDTreeInServerMode
PUBLIC 10006d84 0 gTransactionsList
PUBLIC 10006d88 0 gSessionList
PUBLIC 10006d8c 0 gFileIDTreeLocalServer
PUBLIC 10006d90 0 sFSNodeServicePrivatePort.40430
PUBLIC 10006d94 0 sPID.40437
PUBLIC 10006d98 0 sFSNodeSessionUniverseInfo.44698
PUBLIC 10006d9c 0 sSystemSessionSharedUniverse
PUBLIC 10006da0 0 gFileIDTreeCSDMainRunLoop
PUBLIC 10006da4 0 gFMWFreeBlock
PUBLIC 10006da8 0 gFMWFirstBlock
PUBLIC 10006dac 0 gFMWLastBlock
PUBLIC 10006db0 0 gFileIDTreeFmodWatchTimer
PUBLIC 10006db4 0 gClientsList
PUBLIC 10006db8 0 sShouldFilterPathMatchesByDefault
PUBLIC 10006dbc 0 DiskImageLibrary
PUBLIC 10006dc0 0 DIAttachImage_proc.22895
PUBLIC 10006dc4 0 DIInitialize_proc.22913
PUBLIC 10006dc8 0 homeDirPath.23833
PUBLIC 10006dcc 0 gotIt.23832
PUBLIC 10006dcd 0 sDIInitialized.23534
PUBLIC 10006dd0 0 gUserPathRefs
PUBLIC 10006dd4 0 gLocalPathRefs
PUBLIC 10006dd8 0 gSystemPathRefs
PUBLIC 10006ddc 0 GetComponentCacheableRef()::sComponentCacheable
PUBLIC 10006de0 0 _ClientGetDiscoveredFileReferenceArray(DiscoveredFileReferenceArray**, DiscoveredFileReferenceArray**, DiscoveredFileReferenceArray**)::responseComponentPlatform
PUBLIC 10006de4 0 ComponentRegistryIDToFileReference::gUserRefCache
PUBLIC 10006de8 0 ComponentRegistryIDToFileReference::gLocalRefCache
PUBLIC 10006dec 0 ComponentRegistryIDToFileReference::gSystemRefCache
PUBLIC 10006df0 0 _ClientGetDiscoveredComponentArray(DiscoveredComponentArray**, DiscoveredComponentArray**, DiscoveredComponentArray**)::responseComponentPlatform
PUBLIC 10006df4 0 gSeed
PUBLIC 10006df8 0 GetComponentIconSuite::myDisposeIconSuite
PUBLIC 10006dfc 0 GetComponentIconSuite::myForEachIconDo
PUBLIC 10006e00 0 GetComponentIconSuite::myNewIconActionUPP
PUBLIC 10006e04 0 GetComponentIconSuite::myNewIconSuite
PUBLIC 10006e08 0 GetComponentIconSuite::didLookupSymbols
PUBLIC 10006e0c 0 GetComponentIconSuite::iconAction
PUBLIC 10006e10 0 gDidSearchComponents
PUBLIC 10006e11 0 gDoSomething
PUBLIC 10006e12 0 gHasThreadSafetyModeBeenSet
PUBLIC 10006e14 0 getUpstreamSymbols()::sUpstream
PUBLIC 10006e18 0 RegisterComponentResource::responseComponentPlatform
PUBLIC 10006e1c 0 RegisterComponentFileRefEntries::responseComponentPlatform
PUBLIC 10006e20 0 gDebugComponentList
PUBLIC 10006e24 0 assert_handler
PUBLIC 10006e28 0 gVolumeList
PUBLIC 10006e2c 0 gDTDBPrivateServerPort
PUBLIC 10006e30 0 lockerr.33879
PUBLIC 10006e34 0 siDiskMirrorUserName
PUBLIC 10006e38 0 sLocalMirrorVRefNum
PUBLIC 10006e3a 0 CheckIfMirrorPreferenceIsSetandEnableIfNot(__CFString const*)::sCheckedPref
PUBLIC 10006e40 0 guard variable for FNNotifyAll::sShouldCoalesce
PUBLIC 10006e48 0 _FN_GetNotificationServer()::centre
PUBLIC 10006e4c 0 FNNotifyAll::sNextFireTime
PUBLIC 10006e50 0 FNNotifyAll::sShouldCoalesce
PUBLIC 10006e54 0 sVolumeListSeed
PUBLIC 10006e58 0 sFSCacheable
PUBLIC 10006e5c 0 sLocalMountList
PUBLIC 10006e60 0 FSCacheableClient_POSIXUpdateVolume(VolumeInfo*)::last
PUBLIC 10006e68 0 _checkLocalList()::seedValue
PUBLIC 10006e80 0 guard variable for BasicRename(VolumeInfo*, long, char const*, long, char const*, unsigned char)::returnDupFN
PUBLIC 10006e88 0 guard variable for FSMount::openfork(unsigned long, unsigned long, char const*, char const*, unsigned long, unsigned char, unsigned char, FSOpenForkInfo*, unsigned short, _filesec*, unsigned long, short*, unsigned long*)::doLock
PUBLIC 10006e90 0 guard variable for FSMount::openfork(unsigned long, unsigned long, char const*, char const*, unsigned long, unsigned char, unsigned char, FSOpenForkInfo*, unsigned short, _filesec*, unsigned long, short*, unsigned long*)::doLock
PUBLIC 10006e98 0 sAIORequestsTail
PUBLIC 10006e9c 0 sAIORequests
PUBLIC 10006ea0 0 sAIOMutex
PUBLIC 10006ee0 0 sAIOSemaphore
PUBLIC 10006f40 0 sAIOThread
PUBLIC 10006f44 0 FSMount::openfork(unsigned long, unsigned long, char const*, char const*, unsigned long, unsigned char, unsigned char, FSOpenForkInfo*, unsigned short, _filesec*, unsigned long, short*, unsigned long*)::doLock
PUBLIC 10006f45 0 FSMount::openfork(unsigned long, unsigned long, char const*, char const*, unsigned long, unsigned char, unsigned char, FSOpenForkInfo*, unsigned short, _filesec*, unsigned long, short*, unsigned long*)::doLock
PUBLIC 10006f46 0 BasicRename(VolumeInfo*, long, char const*, long, char const*, unsigned char)::returnDupFN
PUBLIC 10006f48 0 __kFSFileOperationTypeID
PUBLIC 10006f4c 0 DesktopServicesPrivLibrary
PUBLIC 10006f50 0 _FSCopyOperation_proc.53624
PUBLIC 10006f54 0 FileOpDebug
PUBLIC 10006f60 0 NativePathNameToFSSpec::appSpec
PUBLIC 10006fa6 0 NativePathNameToFSSpec::appSpecIsCached
PUBLIC 10006fa8 0 IsMinimalFinderInfo(char const*, FInfo const*, FXInfo const*)::zeroExtFinderInfo
PUBLIC 10006fb8 0 NewVDIMacFileRefNum()::searchMode
PUBLIC 10006fb9 0 NewUFSMacFileRefNum()::searchMode
PUBLIC 10006fbc 0 sSearchList
PUBLIC 10006fc0 0 __kFSFileSecurityTypeID
PUBLIC 10006fc4 0 gIsUnicodeInstalled
PUBLIC 10006fe0 0 sFSDisableNetworkVolumes
PUBLIC 10006fe4 0 sAsyncRequestsTail
PUBLIC 10006fe8 0 sAsyncRequests
PUBLIC 10007000 0 sAsyncMutex
PUBLIC 10007040 0 sAsyncSemaphore
PUBLIC 100070a0 0 sAsyncThread
PUBLIC 100070a4 0 sDefaultVolume
PUBLIC 100070a8 0 sDefaultVolumeInited
PUBLIC 100070aa 0 sFSBootDrive
PUBLIC 100070ac 0 GetUserID()::fetched
PUBLIC 100070b0 0 GetUserID()::userID
PUBLIC 100070b4 0 GetGroupID()::fetched
PUBLIC 100070b8 0 GetGroupID()::groupID
PUBLIC 100070bc 0 _FSProcessPath::sProcessPath
PUBLIC 100070c0 0 _FSGetSessionUID::uidFetched
PUBLIC 100070c1 0 LMGetBootDrive::inited
PUBLIC 100070e0 0 GetApplicationFSSpecPtr::sApplicationFSSpec
PUBLIC 10007126 0 GetApplicationFSSpecPtr::inited
PUBLIC 10007128 0 InGroupList(unsigned int)::groupList
PUBLIC 1000712c 0 InGroupList(unsigned int)::groupCount
PUBLIC 10007140 0 sVolumeList
PUBLIC 10007144 0 sUnmountingVolumeList
PUBLIC 10007160 0 sVolumeListLock
PUBLIC 10007194 0 AcquireVolumeListLock()::volumeLockInitialized
PUBLIC 10007198 0 MountVolume(char const*, statfs*, unsigned char, unsigned char, __DADisk*, short*)::sMountVolumeDoNotSupress
PUBLIC 100071a0 0 guard variable for PBHGetVolParmsSync::applyBadLengthWorkaround
PUBLIC 100071a8 0 PBHGetVolParmsSync::applyBadLengthWorkaround
PUBLIC 100071c0 0 sNotificationList
PUBLIC 100071c4 0 sVNUnmountApprovalEnabled
PUBLIC 100071c8 0 sVNDiskArbApprovalSession
PUBLIC 100071cc 0 VNDebug
PUBLIC 100071d0 0 sVNDiskArbSession
PUBLIC 100071d4 0 sDefaultDASessionElementArray
PUBLIC 100071e0 0 sDefaultDASessionScheduleListLock
PUBLIC 10007214 0 sDontHandleDiskArbMessages
PUBLIC 10007218 0 sDiskArbHasBeenInitialized
PUBLIC 10007219 0 AcquireDefaultDASessionScheduleListLock()::defaultDASessionLockInitialized
PUBLIC 1000721c 0 sCheckedForClassicRedirection
PUBLIC 1000721d 0 sClassicRenamePreferencesFolder
PUBLIC 1000721e 0 sClassicFoldersAreRedirected
PUBLIC 10007220 0 gClassicFolderDescs
PUBLIC 10007224 0 sClassicSeed.19179
PUBLIC 10007228 0 sClassicSeedValue.19294
PUBLIC 1000722c 0 sClassicFolderDescsSeedValue.18967
PUBLIC 10007230 0 sVolumeNotificationHandlerUPP
PUBLIC 10007234 0 sVolumeNotificationHandlerInstalled
PUBLIC 10007238 0 sizeUPP.20015
PUBLIC 1000723c 0 compareUPP.20014
PUBLIC 10007240 0 sInvalidateTypeInCacheUPP.20106
PUBLIC 10007244 0 sInvalidateVRefNumAndDirIDInCacheUPP.20151
PUBLIC 10007248 0 sInvalidateDomainItemsInCacheWithErrorEntriesUPP.19969
PUBLIC 1000724c 0 sFolderDescListCount
PUBLIC 10007250 0 sFolderDescList
PUBLIC 10007260 0 sUserDomainRefInitialized
PUBLIC 10007264 0 sClassicDomainRefSeedValue
PUBLIC 10007268 0 sClassicDomainRefInitialized
PUBLIC 10007269 0 sNetworkDomainRefInitialized
PUBLIC 1000726a 0 sAppleInternalDomainRefInitialized
PUBLIC 1000726b 0 sLocalDomainRefInitialized
PUBLIC 1000726c 0 sSystemDomainRefInitialized
PUBLIC 10007270 0 sUID.20291
PUBLIC 10007274 0 sEUID.20290
PUBLIC 10007278 0 sClassicVRefNum.20233
PUBLIC 10007280 0 sSystemDomainRef
PUBLIC 100072e0 0 sLocalDomainRef
PUBLIC 10007340 0 sAppleInternalDomainRef
PUBLIC 100073a0 0 sNetworkDomainRef
PUBLIC 10007400 0 sUserDomainRef
PUBLIC 10007460 0 sClassicDomainRef
PUBLIC 100074b0 0 sFoldersHasBeenInitialized.34669
PUBLIC 100074b1 0 sInited.34346
PUBLIC 100074b2 0 sSystemDiskVRefNum.34392
PUBLIC 100074b4 0 sgRoutingDescList
PUBLIC 100074c0 0 DomainStr(short)::buf
PUBLIC 100074e0 0 _ZZN16FoldersCacheableC4EPKcE8VNInited
PUBLIC 100074e1 0 IsCoreServicesDRunning()::csdExists
PUBLIC 100074e2 0 IsCoreServicesDRunning()::checkedCSD
PUBLIC 100074e4 0 FolderMgrClientSideCache::GetFolderCacheForDomain(short)::sUserDomain
PUBLIC 100074e8 0 FolderMgrClientSideCache::GetFolderCacheForDomain(short)::sSystemDomain
PUBLIC 100074ec 0 sBootVolumeVRefNum.21679
PUBLIC 100074ee 0 sUserDomainVolumeVRefNum.21694
PUBLIC 100074f0 0 sDoNotCreateFolders.21454
PUBLIC 100074f4 0 clv_cacheable
PUBLIC 100074f8 0 CLVCacheable::Control(unsigned long, unsigned long, unsigned int, unsigned int, unsigned int*, unsigned int*)::sEmptyList
PUBLIC 100074fc 0 getAllCarbonLazyValues2000()::sContext
PUBLIC 10007500 0 gGestaltSlotsUsed
PUBLIC 10007504 0 gGestaltTable
PUBLIC 10007508 0 gGestaltCurrentCapacity
PUBLIC 1000750c 0 gGestaltLazyValuesInstalled
PUBLIC 10007510 0 sSystemVersionBugFixRev
PUBLIC 10007514 0 sSystemVersionMinor
PUBLIC 10007518 0 sSystemVersionMajor
PUBLIC 1000751c 0 sSystemVersionInitialized
PUBLIC 1000751d 0 didCheck.25530
PUBLIC 10007520 0 sResponse.25529
PUBLIC 10007524 0 gestalt_lazy_functions
PUBLIC 10007528 0 gVirtualCCFFile
PUBLIC 1000752c 0 gModificationDatePasteboard
PUBLIC 10007530 0 gLocalePlugins
PUBLIC 10007534 0 gLocalePluginsScanned
PUBLIC 10007540 0 gLowMemInitedFonts
PUBLIC 10007544 0 gInitializeScriptHLProc
PUBLIC 10007560 0 gLowMemLvl2DT
PUBLIC 10007580 0 gLowMemFinderName
PUBLIC 10007590 0 gLowMemToolScratch
PUBLIC 10007598 0 gSwapKeyboardProc
PUBLIC 1000759c 0 gSwapKeyboardInited
PUBLIC 100075a0 0 gHandleBlockList
PUBLIC 100075a4 0 gHandlesExtant
PUBLIC 100075a8 0 gHandleAllocationHint
PUBLIC 100075ac 0 gCheckedCompileTimeAssumptions.5529
PUBLIC 100075b0 0 gHandleBlockFreeSeed.5545
PUBLIC 100075b4 0 gGetHandleSizeCallout
PUBLIC 100075b8 0 gGrowZoneProc
PUBLIC 100075bc 0 gCleanupKey
PUBLIC 100075c0 0 gTaskList
PUBLIC 100075c4 0 gTimingList
PUBLIC 100075c8 0 gTimingThread
PUBLIC 100075d0 0 _conversionRate.20565
PUBLIC 100075e0 0 gIDsAllocated
PUBLIC 100075e4 0 gIDs
PUBLIC 100075e8 0 gIDsUsed
PUBLIC 100075ec 0 gIndexOfFreeNodeHead
PUBLIC 100075f0 0 gIndexOfFreeNodeTail
PUBLIC 100075f4 0 sOrphanChain
PUBLIC 100075f8 0 pRemovedHandles
PUBLIC 100075fc 0 sResourceMgrReadBufferSize
PUBLIC 10007600 0 sBuffer
PUBLIC 10007604 0 sBufferOffset.28932
PUBLIC 10007608 0 sBugs.29924
PUBLIC 1000760c 0 sArraySize.29923
PUBLIC 10007610 0 sArray.29922
PUBLIC 10007614 0 sLooked.29921
PUBLIC 10007618 0 sNamedDataCacheable
PUBLIC 1000761c 0 gCSRefLock
PUBLIC 10007620 0 sTable
PUBLIC 10007624 0 sDidInit
PUBLIC 10007628 0 sServerPage
PUBLIC 1000762c 0 sServerPort
PUBLIC 10007630 0 _gReadSeed
PUBLIC 10007634 0 _CSSeedInit(void**)::didInitialize
PUBLIC 10007638 0 _CSSeedInit(void**)::sAddr
PUBLIC 10007640 0 __gTimeBase
PUBLIC 10007648 0 totalTime.21830
PUBLIC 10007650 0 lastTime.21829
PUBLIC 10007658 0 startTime.21828
PUBLIC 10007660 0 gCSLogLock
PUBLIC 10007664 0 buffer.19367
PUBLIC 1000766c 0 HIServicesLibrary
PUBLIC 10007670 0 ICStart_proc.70080
PUBLIC 10007674 0 ICBegin_proc.70095
PUBLIC 10007678 0 ICGetPref_proc.70117
PUBLIC 1000767c 0 ICEnd_proc.70133
PUBLIC 10007680 0 ICStop_proc.70145
PUBLIC 10007684 0 sys_conf_library_image
PUBLIC 10007688 0 SCDynamicStoreCopyComputerName_proc.18742
PUBLIC 1000768c 0 URLMountLibrary
PUBLIC 10007690 0 RemountServerURL_proc.18573
PUBLIC 10007694 0 GetURLRemountInfo_proc.18595
PUBLIC 10007698 0 GetURLRemountInfoSize_proc.18614
PUBLIC 1000769c 0 MountServerURL_proc.18636
PUBLIC 100076a0 0 MountURLWithAuthentication_proc.18670
PUBLIC 100076a4 0 GetCompleteMountURL_proc.18697
PUBLIC 100076a8 0 MountURLWithAuthenticationAsync_proc.18732
PUBLIC 100076ac 0 MountServerURLAsync_proc.18764
PUBLIC 100076b0 0 GetURLMountProgressInfo_proc.18783
PUBLIC 100076b4 0 CancelURLMount_proc.18796
PUBLIC 100076b8 0 CompleteURLMount_proc.18808
PUBLIC 100076bc 0 GetURLMountPID_proc.18820
PUBLIC 100076c0 0 GetURLFromURLRemountInfo_proc.18838
PUBLIC 100076c4 0 PremountURLAutomount_proc.18853
PUBLIC 100076e0 0 gDidInstallAppFlipper
PUBLIC 100076e4 0 __kUTTagClassOSType.64317
PUBLIC 100076e8 0 __UTGetOSTypeFromString.64316
PUBLIC 100076ec 0 __UTTypeCopyPreferredTagWithClass.64314
PUBLIC 10007700 0 gFlippers
PUBLIC 10007784 0 atExitInstalled.22131
PUBLIC 10007788 0 gDeferredTaskThread
PUBLIC 1000778c 0 gDeferredTaskQ
PUBLIC 10007796 0 gTimerQ
PUBLIC 100077a0 0 gTimerThread
PUBLIC 100077a4 0 gScriptBundleCachedData
PUBLIC 100077a8 0 gIntlCacheInitialized
PUBLIC 100077ac 0 gInitIntlValueProc
PUBLIC 100077b0 0 gInitIntlValueDone
PUBLIC 100077b4 0 gIntlItlc
PUBLIC 100077b8 0 gIntlItlcSize
PUBLIC 100077bc 0 gIntlCache
PUBLIC 100077c0 0 sRegion.34622
PUBLIC 100077c4 0 sScript.34621
PUBLIC 100077c8 0 inited.34620
PUBLIC 100077c9 0 sNeed3434209Workaround.19014
PUBLIC 100077ca 0 sIs3434209Inited.19013
PUBLIC 100077cc 0 gGetFontScriptProc
PUBLIC 100077d0 0 gGetFontFromPortProc
PUBLIC 100077e0 0 gSysDirection
PUBLIC 100077e4 0 sScriptFontValidatorHook
PUBLIC 100077e8 0 sGetScriptFontFlagsHook
PUBLIC 100077ec 0 sGotFontFlagsAndArray.32403
PUBLIC 10007800 0 sScriptFontsValidated.32402
PUBLIC 10007820 0 sFontArray.32401
PUBLIC 10007860 0 gID
PUBLIC 10007864 0 sLocalSession
PUBLIC 10007868 0 gReconnectList
PUBLIC 1000786c 0 scGetProcessOptions::sDidGetBits
PUBLIC 10007870 0 scGetProcessOptions::sBits
PUBLIC 10007874 0 gMsgsReceived
PUBLIC 10007878 0 gSystemMsgs
PUBLIC 1000787c 0 gServerPort
PUBLIC 10007880 0 sDiskArbRetryMode
PUBLIC 10007881 0 sDiskArbScheduled
PUBLIC 10007884 0 _scserver_ServerStatus::sLastData
PUBLIC 10007888 0 attemptDiskArbReconnect()::sAttempts
PUBLIC 1000788c 0 attemptDiskArbReconnect()::sLast
PUBLIC 10007894 0 gServerCount
PUBLIC 10007898 0 _addValue(void const*, void const*, void*)::sBooleanID
PUBLIC 1000789c 0 _addValue(void const*, void const*, void*)::sNumberID
PUBLIC 100078a0 0 _addValue(void const*, void const*, void*)::sStringID
PUBLIC 100078a4 0 sInternDict
PUBLIC 100078a8 0 checkinName
PUBLIC 100078ac 0 gIntlHandleCache
PUBLIC 100078b0 0 gScriptAndLangMapsInited
PUBLIC 100078b1 0 remapBadUnicodeSet.22122
PUBLIC 100078b2 0 remapBadUnicode.22121
PUBLIC 100078b4 0 gGetFNumProc
PUBLIC 100078b8 0 gGetFontNameProc
PUBLIC 100078bc 0 sStringTableCache.35916
PUBLIC 100078c0 0 gSysScriptAndRegionInited.23820
PUBLIC 100078c2 0 gSysRegion.23819
PUBLIC 100078c4 0 gSysScript.23818
PUBLIC 100078c6 0 isInitializing.21843
PUBLIC 100078c8 0 catcher_list
PUBLIC 100078cc 0 listener_port_set
PUBLIC 100078d0 0 gThreadList
PUBLIC 100078d4 0 gMainThread
PUBLIC 100078d8 0 server_handler
PUBLIC 100078dc 0 server_installed
PUBLIC 100078e0 0 gCustomScheduler
PUBLIC 100078e4 0 gLastScheduled
PUBLIC 100078e8 0 gThreadInitHooks
PUBLIC 100078ec 0 gEventsWaitingUPP
PUBLIC 100078f0 0 selfref.22574
PUBLIC 100078f4 0 needWorkaround.22653
PUBLIC 100078f5 0 checkedForWorkaround.22652
PUBLIC 100078f8 0 gMainTSThread
PUBLIC 100078fc 0 gThreadGlobalsKey
PUBLIC 10007900 0 threadCache
PUBLIC 10007904 0 checkedForWorkaround.34309
PUBLIC 10007905 0 needWorkaround.34308
PUBLIC 10007908 0 _kTextBreakLocatorID
PUBLIC 1000790c 0 gUTCLocation
PUBLIC 10007918 0 gUTCInit
PUBLIC 1000791c 0 FileSyncLibrary
PUBLIC 10007920 0 SFIDiskMirrorIsMirroringEnabled_proc.33781
PUBLIC 10007924 0 SFIDiskMirrorLocalMountLocation_proc.33793
PUBLIC 10007928 0 SFIDiskMirrorRefCreate_proc.33805
PUBLIC 1000792c 0 SFIDiskMirrorCopyIDiskUsername_proc.33816
PUBLIC 10007930 0 SFIDiskMirrorRefRelease_proc.33827
PUBLIC 10007934 0 SFIDiskMirrorRegisterChangeCallback_proc.33837
PUBLIC 10007938 0 SFIDiskMirrorIsMirroringPreferenceSet_proc.33849
PUBLIC 1000793c 0 SFIDiskMirrorEnableMirroring_proc.33863
PUBLIC 10007940 0 SFIDiskMirrorRegisterMountsCompletedCallback_proc.33877
PUBLIC 10007944 0 SFIDiskMirrorWaitForMountsCompletedCallbacks_proc.33889
PUBLIC 10007948 0 sCheckFix
PUBLIC 1000794c 0 _CSCheckFixCreateClientKeyArray::platform
PUBLIC 10007950 0 sFMDeleteSpecificUserItemBundleStrRef
PUBLIC 10007960 0 FSAIOQueueElememt
PUBLIC 100079a4 0 gSizeCache
PUBLIC 100079a8 0 gFetchingType
PUBLIC 100079c0 0 _gTECMasterGlobals
